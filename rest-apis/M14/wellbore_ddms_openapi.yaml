openapi: 3.0.2
info:
  title: Wellbore DDMS OSDU
  description: build local
  version: '0.2'
servers:
- url: /api/os-wellbore-ddms
paths:
  /about:
    get:
      tags:
      - Wellbore DDMS
      summary: Get About
      operationId: get_about_about_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
        '500':
          description: Internal server error
  /version:
    get:
      tags:
      - Wellbore DDMS
      summary: Get Version
      operationId: get_version_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetailsResponse'
        '500':
          description: Internal server error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - HTTPBearer: []
  /ddms/v3/wellbores/{wellboreid}:
    get:
      tags:
      - Wellbore
      summary: Get the Wellbore using osdu schema
      description: 'Get the Wellbore object using its **id**.

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_wellbore_osdu
      parameters:
      - required: true
        schema:
          title: Wellboreid
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          type: string
        name: wellboreid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wellbore111'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Wellbore
      summary: Delete the wellbore. The API performs a logical deletion of the given
        record. No recursive delete for OSDU kinds
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_osdu_wellbore
      parameters:
      - required: true
        schema:
          title: Wellboreid
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          type: string
        name: wellboreid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellbores/{wellboreid}/versions:
    get:
      tags:
      - Wellbore
      summary: Get all versions of the Wellbore
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_osdu_wellbore_versions
      parameters:
      - required: true
        schema:
          title: Wellboreid
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          type: string
        name: wellboreid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellbores/{wellboreid}/versions/{version}:
    get:
      tags:
      - Wellbore
      summary: Get the given version of the Wellbore using OSDU wellbore schema
      description: "\"Get the Wellbore object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_osdu_wellbore_version
      parameters:
      - required: true
        schema:
          title: Wellboreid
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          type: string
        name: wellboreid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wellbore111'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellbores:
    post:
      tags:
      - Wellbore
      summary: Create or update the Wellbores using osdu schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_wellbore_osdu
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wellbores
              type: array
              items:
                $ref: '#/components/schemas/Wellbore111'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
              id: '{{datapartitionid}}:master-data--Wellbore:{{wellboreId}}:'
              kind: osdu:wks:master-data--Wellbore:1.1.1
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
              data:
                ExtensionProperties: {}
                GeoContexts:
                - GeoTypeID: 'datapartition:osdu:reference-data--GeoPoliticalEntityType:Country:'
                  GeoPoliticalEntityID: '{{datapartitionid}}:osdu:master-data--GeoPoliticalEntity:USA:'
                FacilityOperators:
                - FacilityOperatorID: Francois Vinyes
                FacilityNameAliases:
                - AliasName: 33-089-00300-00-01
                  AliasNameTypeID: '{{datapartitionid}}:reference-data--AliasNameType:UniqueIdentifier:'
                SpatialLocation:
                  Wgs84Coordinates:
                    features:
                    - geometry:
                        coordinates:
                        - - -103.2380248
                          - 46.8925081
                          - 5301.0
                        - - -103.2380248
                          - 46.8925081
                          - 2801.0
                        - - -103.2378748
                          - 46.892608100000004
                          - 301.0
                        - - -103.23742477750001
                          - 46.89270811
                          - -2199.0
                        - - -103.23667470999663
                          - 46.892808120001
                          - -4699.0
                        - - -103.2356245974865
                          - 46.892908130002
                          - -7199.0
                        type: LineString
                      properties:
                        name: Newton 2-31-Lat-1
                      type: Feature
                    type: FeatureCollection
                VerticalMeasurements:
                - VerticalMeasurementID: Example VerticalMeasurementID
                  RigID: '{{datapartitionid}}:master-data--Rig:SomeUniqueRigID:'
                  EffectiveDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurement: 12345.6
                  TerminationDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurementTypeID: '{{datapartitionid}}:reference-data--VerticalMeasurementType:PBD:'
                  VerticalMeasurementPathID: '{{datapartitionid}}:reference-data--VerticalMeasurementPath:MD:'
                  VerticalMeasurementSourceID: '{{datapartitionid}}:reference-data--VerticalMeasurementSource:DRL:'
                  WellboreTVDTrajectoryID: '{{datapartitionid}}:work-product-component--WellboreTrajectory:WellboreTrajectory-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                  VerticalMeasurementUnitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  VerticalCRSID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                  VerticalReferenceID: Example VerticalReferenceID
                  VerticalReferenceEntityID: '{{datapartitionid}}:master-data--Rig:SomeUniqueRigID:'
                  VerticalMeasurementDescription: Example VerticalMeasurementDescription
                InterestTypeID: '{{datapartitionid}}:reference-data--WellInterestType:Yes:'
                HistoricalInterests:
                - InterestTypeID: '{{datapartitionid}}:reference-data--WellInterestType:Yes:'
                  EffectiveDateTime: '2020-02-13'
                  TerminationDateTime: '2020-02-13'
                WasBusinessInterestFinancialOperated: true
                WasBusinessInterestFinancialNonOperated: true
                WasBusinessInterestObligatory: true
                WasBusinessInterestTechnical: true
                TrajectoryTypeID: '{{datapartitionid}}:reference-data--WellboreTrajectoryType:Vertical:'
                PrimaryProductTypeID: '{{datapartitionid}}:reference-data--WellProductType:Gas:'
                SecondaryProductTypeID: '{{datapartitionid}}:reference-data--WellProductType:Gas:'
                TertiaryProductTypeID: '{{datapartitionid}}:reference-data--WellProductType:Gas:'
                ShowProductTypeID: '{{datapartitionid}}:reference-data--WellProductType:Gas:'
                ConditionID: '{{datapartitionid}}:reference-data--WellCondition:Active:'
                FluidDirectionID: '{{datapartitionid}}:reference-data--WellFluidDirection:DualFlow:'
                OutcomeID: '{{datapartitionid}}:reference-data--WellBusinessIntentionOutcome:Achieved:'
                StatusSummaryID: '{{datapartitionid}}:reference-data--WellStatusSummary:Planning:'
                FacilityName: '{{wellboreName}}'
                WellID: '{{datapartitionid}}:master-data--Well:{{wellId}}:'
              meta:
              - kind: Unit
                name: Measure depth default unit
                persistableReference: persistableReference
                propertyNames:
                - symbol
                propertyValues:
                - ft
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wells/{wellid}:
    get:
      tags:
      - Well
      summary: Get the Well using osdu schema
      description: "Get the Well object using its **id**. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_well_osdu
      parameters:
      - required: true
        schema:
          title: Wellid
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          type: string
        name: wellid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Well110'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Well
      summary: Delete the well. The API performs a logical deletion of the given record.
        No recursive delete for OSDU kinds
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_osdu_well
      parameters:
      - required: true
        schema:
          title: Wellid
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          type: string
        name: wellid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wells/{wellid}/versions:
    get:
      tags:
      - Well
      summary: Get all versions of the Well
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_osdu_well_versions
      parameters:
      - required: true
        schema:
          title: Wellid
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          type: string
        name: wellid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wells/{wellid}/versions/{version}:
    get:
      tags:
      - Well
      summary: Get the given version of the Well using OSDU well schema
      description: "\"Get the Well object using its **id**. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_osdu_well_version
      parameters:
      - required: true
        schema:
          title: Wellid
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          type: string
        name: wellid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Well110'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wells:
    post:
      tags:
      - Well
      summary: Create or update the Wells using osdu schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_well_osdu
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wells
              type: array
              items:
                $ref: '#/components/schemas/Well110'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
              data:
                FacilityName: '{{wellName}}'
                FacilityNameAliases:
                - AliasName: 20-000-00000-00
                  AliasNameTypeID: '{{datapartitionid}}:reference-data--AliasNameType:UniqueIdentifier:'
                VerticalMeasurements:
                - VerticalMeasurementID: Example VerticalMeasurementID
                  RigID: '{{datapartitionid}}:master-data--Rig:SomeUniqueRigID:'
                  EffectiveDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurement: 12345.6
                  TerminationDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurementTypeID: '{{datapartitionid}}:reference-data--VerticalMeasurementType:PBD:'
                  VerticalMeasurementPathID: '{{datapartitionid}}:reference-data--VerticalMeasurementPath:MD:'
                  VerticalMeasurementSourceID: '{{datapartitionid}}:reference-data--VerticalMeasurementSource:DRL:'
                  WellboreTVDTrajectoryID: '{{datapartitionid}}:work-product-component--WellboreTrajectory:WellboreTrajectory-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                  VerticalMeasurementUnitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  VerticalCRSID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                  VerticalReferenceID: Example VerticalReferenceID
                  VerticalReferenceEntityID: '{{datapartitionid}}:master-data--Rig:SomeUniqueRigID:'
                  VerticalMeasurementDescription: Example VerticalMeasurementDescription
                BusinessIntentionID: '{{datapartitionid}}:reference-data--WellBusinessIntention:Appraise:'
                RoleID: '{{datapartitionid}}:reference-data--WellRole:Inject.MultipleProducts:'
                HistoricalInterests:
                - InterestTypeID: '{{datapartitionid}}:reference-data--WellInterestType:Yes:'
                  EffectiveDateTime: '2020-02-13'
                  TerminationDateTime: '2020-02-13'
                WasBusinessInterestFinancialOperated: true
                WasBusinessInterestFinancialNonOperated: true
                WasBusinessInterestObligatory: true
                WasBusinessInterestTechnical: true
                ConditionID: '{{datapartitionid}}:reference-data--WellCondition:Active:'
                OutcomeID: '{{datapartitionid}}:reference-data--WellBusinessIntentionOutcome:Achieved:'
                StatusSummaryID: '{{datapartitionid}}:reference-data--WellStatusSummary:Planning:'
                ExtensionProperties: {}
              id: '{{datapartitionid}}:master-data--Well:{{wellId}}'
              kind: osdu:wks:master-data--Well:1.1.0
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}:
    get:
      tags:
      - Marker
      summary: Get the WellboreMarkerSet using osdu schema
      description: "Get the WellboreMarkerSet object using its **id**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_wellbore_markerset_osdu
      parameters:
      - required: true
        schema:
          title: Wellboremarkersetid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          type: string
        name: wellboremarkersetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreMarkerSet121'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore Marker Set not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Marker
      summary: Delete the wellboreMarkerset. The API performs a logical deletion of
        the given record. No recursive delete for OSDU kinds
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_osdu_wellboreMarkerset
      parameters:
      - required: true
        schema:
          title: Wellboremarkersetid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          type: string
        name: wellboremarkersetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreMarkerSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}/versions:
    get:
      tags:
      - Marker
      summary: Get all versions of the WellboreMarkerSet
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_osdu_wellboreMarkerset_versions
      parameters:
      - required: true
        schema:
          title: Wellboremarkersetid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          type: string
        name: wellboremarkersetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreMarkerSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboremarkersets/{wellboremarkersetid}/versions/{version}:
    get:
      tags:
      - Marker
      summary: Get the given version of the WellboreMarkerSet using OSDU WellboreMarkerset
        schema
      description: "\"Get the WellboreMarkerSet object using its **id**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_osdu_wellboreMarkerset_version
      parameters:
      - required: true
        schema:
          title: Wellboremarkersetid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          type: string
        name: wellboremarkersetid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreMarkerSet121'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreMarkerSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboremarkersets:
    post:
      tags:
      - Marker
      summary: Create or update the Wellbore Markerset using osdu schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_wellboreMarkerset_osdu
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wellboremarkersets
              type: array
              items:
                $ref: '#/components/schemas/WellboreMarkerSet121'
            example:
              acl:
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
              ancestry:
                parents: []
              createTime: '2020-12-16T11:46:20.163Z'
              createUser: some-user@some-company-cloud.com
              id: '{{datapartitionid}}:work-product-component--WellboreMarkerSet:d5303b79-7904-5bfe-9c44-9a3ff41b6d6c'
              kind: osdu:wks:work-product-component--WellboreMarkerSet:1.2.1
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
              meta:
              - kind: Unit
                name: m
                persistableReference: '{"abcd":{"a":0.0,"b":1.0,"c":1.0,"d":0.0},"symbol":"m","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                unitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                propertyNames:
                - VerticalMeasurement.VerticalMeasurement
                - Markers[].MarkerMeasuredDepth
                - Markers[].MarkerSubSeaVerticalDepth
                - Markers[].PositiveVerticalDelta
                - Markers[].NegativeVerticalDelta
              - kind: Unit
                name: rad
                persistableReference: '{"abcd":{"a":0.0,"b":1.0,"c":1.0,"d":0.0},"symbol":"rad","baseMeasurement":{"ancestry":"A","type":"UM"},"type":"UAD"}'
                unitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:rad:'
                propertyNames:
                - Markers[].SurfaceDipAngle
                - Markers[].SurfaceDipAzimuth
              modifyTime: '2020-12-16T11:52:24.477Z'
              modifyUser: some-user@some-company-cloud.com
              tags:
                NameOfKey: String value
              data:
                ResourceHomeRegionID: '{{datapartitionid}}:reference-data--OSDURegion:AWSEastUSA:'
                ResourceHostRegionIDs:
                - '{{datapartitionid}}:reference-data--OSDURegion:AWSEastUSA:'
                ResourceCurationStatus: '{{datapartitionid}}:reference-data--ResourceCurationStatus:CREATED:'
                ResourceLifecycleStatus: '{{datapartitionid}}:reference-data--ResourceLifecycleStatus:LOADING:'
                ResourceSecurityClassification: '{{datapartitionid}}:reference-data--ResourceSecurityClassification:RESTRICTED:'
                Source: Example Data Source
                ExistenceKind: '{{datapartitionid}}:reference-data--ExistenceKind:Prototype:'
                TechnicalAssuranceID: '{{datapartitionid}}:reference-data--TechnicalAssuranceType:Certified:'
                Datasets:
                - '{{datapartitionid}}:dataset--AnyDataset:SomeUniqueAnyDatasetID:'
                Artefacts:
                - RoleID: '{{datapartitionid}}:reference-data--ArtefactRole:AdaptedContent:'
                  ResourceKind: '{{datapartitionid}}:source_name:group_type--IndividualType:0.0.0'
                  ResourceID: '{{datapartitionid}}:dataset--AnyDataset:SomeUniqueAnyDatasetID:'
                IsExtendedLoad: true
                IsDiscoverable: true
                TechnicalAssurances:
                - TechnicalAssuranceTypeID: '{{datapartitionid}}:reference-data--TechnicalAssuranceType:Trusted:'
                  Reviewers:
                  - RoleTypeID: '{{datapartitionid}}:reference-data--ContactRoleType:AccountOwner:'
                    OrganisationID: '{{datapartitionid}}:master-data--Organisation:SomeUniqueOrganisationID:'
                    Name: Example Name
                  AcceptableUsage:
                  - WorkflowUsage: '{{datapartitionid}}:reference-data--WorkflowUsageType:SeismicProcessing:'
                    WorkflowPersona: '{{datapartitionid}}:reference-data--WorkflowPersonaType:SeismicProcessor:'
                  UnacceptableUsage:
                  - WorkflowUsage: '{{datapartitionid}}:reference-data--WorkflowUsageType:SeismicInterpretation:'
                    WorkflowPersona: '{{datapartitionid}}:reference-data--WorkflowPersonaType:SeismicInterpreter:'
                  EffectiveDate: '2020-02-13'
                  Comment: This is free form text from reviewer, e.g. restrictions
                    on use
                Name: Example Name
                Description: Example Description
                CreationDateTime: '2020-02-13T09:13:15.55Z'
                Tags:
                - Example Tags
                SpatialPoint:
                  SpatialLocationCoordinatesDate: '2020-02-13T09:13:15.55Z'
                  QuantitativeAccuracyBandID: '{{datapartitionid}}:reference-data--QuantitativeAccuracyBand:Length.LessThan1m:'
                  QualitativeSpatialAccuracyTypeID: '{{datapartitionid}}:reference-data--QualitativeSpatialAccuracyType:Confirmed:'
                  CoordinateQualityCheckPerformedBy: Example CoordinateQualityCheckPerformedBy
                  CoordinateQualityCheckDateTime: '2020-02-13T09:13:15.55Z'
                  CoordinateQualityCheckRemarks:
                  - Example CoordinateQualityCheckRemarks
                  AsIngestedCoordinates:
                    type: AnyCrsFeatureCollection
                    CoordinateReferenceSystemID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                    VerticalCoordinateReferenceSystemID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
                    persistableReferenceCrs: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
                      * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
                    persistableReferenceVerticalCrs: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
                    persistableReferenceUnitZ: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
                    VerticalUnitID: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                    features:
                    - type: AnyCrsFeature
                      properties: {}
                      geometry:
                        type: AnyCrsPoint
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  Wgs84Coordinates:
                    type: FeatureCollection
                    features:
                    - type: Feature
                      properties: {}
                      geometry:
                        type: Point
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  AppliedOperations:
                  - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points
                    converted
                  - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
                    1 points successfully transformed
                  SpatialParameterTypeID: '{{datapartitionid}}:reference-data--SpatialParameterType:Outline:'
                  SpatialGeometryTypeID: '{{datapartitionid}}:reference-data--SpatialGeometryType:Point:'
                SpatialArea:
                  SpatialLocationCoordinatesDate: '2020-02-13T09:13:15.55Z'
                  QuantitativeAccuracyBandID: '{{datapartitionid}}:reference-data--QuantitativeAccuracyBand:Length.LessThan1m:'
                  QualitativeSpatialAccuracyTypeID: '{{datapartitionid}}:reference-data--QualitativeSpatialAccuracyType:Confirmed:'
                  CoordinateQualityCheckPerformedBy: Example CoordinateQualityCheckPerformedBy
                  CoordinateQualityCheckDateTime: '2020-02-13T09:13:15.55Z'
                  CoordinateQualityCheckRemarks:
                  - Example CoordinateQualityCheckRemarks
                  AsIngestedCoordinates:
                    type: AnyCrsFeatureCollection
                    CoordinateReferenceSystemID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                    VerticalCoordinateReferenceSystemID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
                    persistableReferenceCrs: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
                      * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
                    persistableReferenceVerticalCrs: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
                    persistableReferenceUnitZ: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
                    features:
                    - type: AnyCrsFeature
                      properties: {}
                      geometry:
                        type: AnyCrsPoint
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  Wgs84Coordinates:
                    type: FeatureCollection
                    features:
                    - type: Feature
                      properties: {}
                      geometry:
                        type: Point
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  AppliedOperations:
                  - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points
                    converted
                  - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
                    1 points successfully transformed
                  SpatialParameterTypeID: '{{datapartitionid}}:reference-data--SpatialParameterType:Outline:'
                  SpatialGeometryTypeID: '{{datapartitionid}}:reference-data--SpatialGeometryType:Point:'
                GeoContexts:
                - BasinID: '{{datapartitionid}}:master-data--Basin:SomeUniqueBasinID:'
                  GeoTypeID: '{{datapartitionid}}:reference-data--BasinType:ArcWrenchOceanContinent:'
                SubmitterName: Example SubmitterName
                BusinessActivities:
                - Example BusinessActivities
                AuthorIDs:
                - Example AuthorIDs
                LineageAssertions:
                - ID: '{{datapartitionid}}:any-group-type--AnyIndividualType:SomeUniqueAnyIndividualTypeID:'
                  LineageRelationshipType: '{{datapartitionid}}:reference-data--LineageRelationshipType:Direct:'
                WellboreID: '{{datapartitionid}}:master-data--Wellbore:SomeUniqueWellboreID:'
                VerticalMeasurement:
                  EffectiveDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurement: 12345.6
                  TerminationDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurementTypeID: '{{datapartitionid}}:reference-data--VerticalMeasurementType:PBD:'
                  VerticalMeasurementPathID: '{{datapartitionid}}:reference-data--VerticalMeasurementPath:MD:'
                  VerticalMeasurementSourceID: '{{datapartitionid}}:reference-data--VerticalMeasurementSource:DRL:'
                  WellboreTVDTrajectoryID: '{{datapartitionid}}:work-product-component--WellboreTrajectory:WellboreTrajectory-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                  VerticalMeasurementUnitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  VerticalCRSID: '{{datapartitionid}}:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                  VerticalReferenceID: Example VerticalReferenceID
                  VerticalMeasurementDescription: Example VerticalMeasurementDescription
                AvailableMarkerProperties:
                - MarkerPropertyTypeID: 'partition-id:reference-data--MarkerPropertyType:MissingThickness:'
                  MarkerPropertyUnitID: 'partition-id:reference-data--UnitOfMeasure:ft:'
                  Name: MissingThickness
                Markers:
                - MarkerName: Example MarkerName
                  MarkerID: Example Marker ID
                  InterpretationID: '{{datapartitionid}}:work-product-component--GeobodyBoundaryInterpretation:GeobodyBoundaryInterpretation-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                  MarkerMeasuredDepth: 12345.6
                  MarkerSubSeaVerticalDepth: 12345.6
                  MarkerDate: '2020-02-13T09:13:15.55Z'
                  MarkerObservationNumber: 12345.6
                  MarkerInterpreter: Example MarkerInterpreter
                  MarkerTypeID: '{{datapartitionid}}:reference-data--MarkerType:BioStratigraphy:'
                  FeatureTypeID: '{{datapartitionid}}:reference-data--FeatureType:Base:'
                  FeatureName: Example FeatureName
                  PositiveVerticalDelta: 12345.6
                  NegativeVerticalDelta: 12345.6
                  SurfaceDipAngle: 12345.6
                  SurfaceDipAzimuth: 12345.6
                  Missing: Example Missing
                  GeologicalAge: Example GeologicalAge
                StratigraphicColumnID: '{{datapartitionid}}:work-product-component--StratigraphicColumn:StratigraphicColumn-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                StratigraphicColumnRankInterpretationID: '{{datapartitionid}}:work-product-component--StratigraphicColumnRankInterpretation:StratigraphicColumnRankInterpretation-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                ExtensionProperties: {}
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{welllogid}:
    get:
      tags:
      - WellLog
      summary: Get the WellLog using osdu schema
      description: "Get the WellLog object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_welllog_osdu
      parameters:
      - required: true
        schema:
          title: Welllogid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          type: string
        name: welllogid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellLog120'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellLog not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - WellLog
      summary: Delete the welllog. The API performs a logical deletion of the given
        record. No recursive delete for OSDU kinds
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_osdu_welllog
      parameters:
      - required: true
        schema:
          title: Welllogid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          type: string
        name: welllogid
        in: path
      - required: false
        schema:
          title: Purge
          type: boolean
          default: false
        name: purge
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellLog not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{welllogid}/versions:
    get:
      tags:
      - WellLog
      summary: Get all versions of the WellLog
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_osdu_welllog_versions
      parameters:
      - required: true
        schema:
          title: Welllogid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          type: string
        name: welllogid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellLog not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{welllogid}/versions/{version}:
    get:
      tags:
      - WellLog
      summary: Get the given version of the WellLog using OSDU welllog schema
      description: "\"Get the WellLog object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_osdu_welllog_version
      parameters:
      - required: true
        schema:
          title: Welllogid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          type: string
        name: welllogid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellLog120'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellLog not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs:
    post:
      tags:
      - WellLog
      summary: Create or update the WellLogs using osdu schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_welllog_osdu
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Welllogs
              type: array
              items:
                $ref: '#/components/schemas/WellLog120'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
              data:
                Curves:
                - CurveID: GR_ID
                  Mnemonic: GR
                  CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  LogCurveFamilyID: '{{datapartitionid}}:reference-data--LogCurveFamily:GammaRay:'
                  NumberOfColumns: 1
                  CurveDescription: Gamma Ray
                  CurveSampleTypeID: '{{datapartitionid}}:reference-data--CurveSampleType:float:'
                - CurveID: POR_ID
                  Mnemonic: NPOR
                  CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  LogCurveFamilyID: '{{datapartitionid}}:reference-data--LogCurveFamily:NeutronPorosity:'
                  NumberOfColumns: 1
                  CurveDescription: Neutron Porosity
                  CurveSampleTypeID: '{{datapartitionid}}:reference-data--CurveSampleType:float:'
                - CurveID: Bulk Density
                  Mnemonic: RHOB
                  CurveUnit: '{{datapartitionid}}:reference-data--UnitOfMeasure:m:'
                  LogCurveFamilyID: '{{datapartitionid}}:reference-data--LogCurveFamily:BulkDensity:'
                  CurveSampleTypeID: '{{datapartitionid}}:reference-data--CurveSampleType:float:'
                WellboreID: '{{datapartitionid}}:master-data--Wellbore:{{wellboreId}}:'
                CreationDateTime: '2013-03-22T11:16:03Z'
                VerticalMeasurement:
                  VerticalMeasurement: 2680.5
                  VerticalMeasurementPathID: '{{datapartitionid}}:reference-data--VerticalMeasurementPath:MD:'
                  VerticalMeasurementUnitOfMeasureID: '{{datapartitionid}}:reference-data--UnitOfMeasure:ft:'
                TopMeasuredDepth: 12345.6
                BottomMeasuredDepth: 13856.2
                Name: '{{welllogName}}'
                SamplingDomainTypeID: '{{datapartitionid}}:reference-data--WellLogSamplingDomainType:Depth:'
                IsRegular: true
                LogRemark: example data for API documentation
                SamplingInterval: 0.1
              id: '{{datapartitionid}}:work-product-component--WellLog:{{welllogId}}'
              kind: osdu:wks:work-product-component--WellLog:1.2.0
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - US
                - FR
              meta:
              - kind: Unit
                name: ft
                persistableReference: '{"scaleOffset":{"scale":0.3048,"offset":0.0},"symbol":"ft","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
                propertyNames:
                - TopMeasuredDepth
                - BottomMeasuredDepth
                - SamplingInterval
                propertyValues:
                - ft
              - kind: DateTime
                name: datetime
                persistableReference: '{"format":"yyyy-MM-ddTHH:mm:ssZ","timeZone":"UTC","type":"DTM"}'
                propertyNames:
                - dateModified
                - dateCreated
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}:
    get:
      tags:
      - Trajectory v3
      summary: Get the WellboreTrajectory using osdu schema
      description: "Get the WellboreTrajectory object using its **id**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_wellbore_trajectory_osdu
      parameters:
      - required: true
        schema:
          title: Wellboretrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          type: string
        name: wellboretrajectoryid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreTrajectory110'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore Trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Trajectory v3
      summary: Delete the wellboreTrajectory. The API performs a logical deletion
        of the given record. No recursive delete for OSDU kinds
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_osdu_wellboreTrajectory
      parameters:
      - required: true
        schema:
          title: Wellboretrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          type: string
        name: wellboretrajectoryid
        in: path
      - required: false
        schema:
          title: Purge
          type: boolean
          default: false
        name: purge
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreTrajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}/versions:
    get:
      tags:
      - Trajectory v3
      summary: Get all versions of the WellboreTrajectory
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_osdu_wellboreTrajectory_versions
      parameters:
      - required: true
        schema:
          title: Wellboretrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          type: string
        name: wellboretrajectoryid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreTrajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{wellboretrajectoryid}/versions/{version}:
    get:
      tags:
      - Trajectory v3
      summary: Get the given version of the WellboreTrajectory using OSDU wellboreTrajectory
        schema
      description: "\"Get the WellboreTrajectory object using its **id**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_osdu_wellboreTrajectory_version
      parameters:
      - required: true
        schema:
          title: Wellboretrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          type: string
        name: wellboretrajectoryid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellboreTrajectory110'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: WellboreTrajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories:
    post:
      tags:
      - Trajectory v3
      summary: Create or update the WellboreTrajectories using osdu schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_wellboreTrajectory_osdu
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wellboretrajectories
              type: array
              items:
                $ref: '#/components/schemas/WellboreTrajectory110'
            example:
            - acl:
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
              ancestry:
                parents: []
              createTime: '2020-12-16T11:46:20.163Z'
              createUser: some-user@some-company-cloud.com
              id: namespace:work-product-component--WellboreTrajectory:606f224a-ef1f-5690-9843-d26cd7e33e10
              kind: osdu:wks:work-product-component--WellboreTrajectory:1.1.0
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
              modifyTime: '2020-12-16T11:52:24.477Z'
              modifyUser: some-user@some-company-cloud.com
              tags:
                NameOfKey: String value
              meta:
              - kind: Unit
                name: m
                persistableReference: '{"abcd":{"a":0.0,"b":1.0,"c":1.0,"d":0.0},"symbol":"m","baseMeasurement":{"ancestry":"L","type":"UM"},"type":"UAD"}'
                unitOfMeasureID: 'namespace:reference-data--UnitOfMeasure:m:'
                propertyNames:
                - TopDepthMeasuredDepth
                - ExtrapolatedMeasuredDepth
                - BaseDepthMeasuredDepth
                - TieMeasuredDepth
                - VerticalMeasurement.VerticalMeasurement
              data:
                ResourceHomeRegionID: 'namespace:reference-data--OSDURegion:AWSEastUSA:'
                ResourceHostRegionIDs:
                - 'namespace:reference-data--OSDURegion:AWSEastUSA:'
                ResourceCurationStatus: 'namespace:reference-data--ResourceCurationStatus:CREATED:'
                ResourceLifecycleStatus: 'namespace:reference-data--ResourceLifecycleStatus:LOADING:'
                ResourceSecurityClassification: 'namespace:reference-data--ResourceSecurityClassification:RESTRICTED:'
                Source: Example Data Source
                ExistenceKind: 'namespace:reference-data--ExistenceKind:Prototype:'
                TechnicalAssuranceID: 'namespace:reference-data--TechnicalAssuranceType:Certified:'
                Datasets:
                - 'namespace:dataset--AnyDataset:SomeUniqueAnyDatasetID:'
                Artefacts:
                - RoleID: 'namespace:reference-data--ArtefactRole:AdaptedContent:'
                  ResourceKind: namespace:source_name:group_type--IndividualType:0.0.0
                  ResourceID: 'namespace:dataset--AnyDataset:SomeUniqueAnyDatasetID:'
                IsExtendedLoad: true
                IsDiscoverable: true
                Name: Example Name
                Description: Example Description
                CreationDateTime: '2020-02-13T09:13:15.55Z'
                Tags:
                - Example Tags
                SpatialPoint:
                  SpatialLocationCoordinatesDate: '2020-02-13T09:13:15.55Z'
                  QuantitativeAccuracyBandID: 'namespace:reference-data--QuantitativeAccuracyBand:Length.LessThan1m:'
                  QualitativeSpatialAccuracyTypeID: 'namespace:reference-data--QualitativeSpatialAccuracyType:Confirmed:'
                  CoordinateQualityCheckPerformedBy: Example CoordinateQualityCheckPerformedBy
                  CoordinateQualityCheckDateTime: '2020-02-13T09:13:15.55Z'
                  CoordinateQualityCheckRemarks:
                  - Example CoordinateQualityCheckRemarks
                  AsIngestedCoordinates:
                    type: AnyCrsFeatureCollection
                    CoordinateReferenceSystemID: 'namespace:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                    VerticalCoordinateReferenceSystemID: 'namespace:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
                    persistableReferenceCrs: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
                      * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
                    persistableReferenceVerticalCrs: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
                    persistableReferenceUnitZ: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
                    features:
                    - type: AnyCrsFeature
                      properties: {}
                      geometry:
                        type: AnyCrsPoint
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  Wgs84Coordinates:
                    type: FeatureCollection
                    features:
                    - type: Feature
                      properties: {}
                      geometry:
                        type: Point
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  AppliedOperations:
                  - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points
                    converted
                  - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
                    1 points successfully transformed
                  SpatialParameterTypeID: 'namespace:reference-data--SpatialParameterType:Outline:'
                  SpatialGeometryTypeID: 'namespace:reference-data--SpatialGeometryType:Point:'
                SpatialArea:
                  SpatialLocationCoordinatesDate: '2020-02-13T09:13:15.55Z'
                  QuantitativeAccuracyBandID: 'namespace:reference-data--QuantitativeAccuracyBand:Length.LessThan1m:'
                  QualitativeSpatialAccuracyTypeID: 'namespace:reference-data--QualitativeSpatialAccuracyType:Confirmed:'
                  CoordinateQualityCheckPerformedBy: Example CoordinateQualityCheckPerformedBy
                  CoordinateQualityCheckDateTime: '2020-02-13T09:13:15.55Z'
                  CoordinateQualityCheckRemarks:
                  - Example CoordinateQualityCheckRemarks
                  AsIngestedCoordinates:
                    type: AnyCrsFeatureCollection
                    CoordinateReferenceSystemID: 'namespace:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                    VerticalCoordinateReferenceSystemID: 'namespace:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
                    persistableReferenceCrs: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
                      * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
                    persistableReferenceVerticalCrs: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
                    persistableReferenceUnitZ: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
                    features:
                    - type: AnyCrsFeature
                      properties: {}
                      geometry:
                        type: AnyCrsPoint
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  Wgs84Coordinates:
                    type: FeatureCollection
                    features:
                    - type: Feature
                      properties: {}
                      geometry:
                        type: Point
                        coordinates:
                        - 12345.6
                        - 12345.6
                        bbox:
                        - 12345.6
                        - 12345.6
                        - 12345.6
                        - 12345.6
                      bbox:
                      - 12345.6
                      - 12345.6
                      - 12345.6
                      - 12345.6
                    bbox:
                    - 12345.6
                    - 12345.6
                    - 12345.6
                    - 12345.6
                  AppliedOperations:
                  - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points
                    converted
                  - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
                    1 points successfully transformed
                  SpatialParameterTypeID: 'namespace:reference-data--SpatialParameterType:Outline:'
                  SpatialGeometryTypeID: 'namespace:reference-data--SpatialGeometryType:Point:'
                GeoContexts:
                - BasinID: 'namespace:master-data--Basin:SomeUniqueBasinID:'
                  GeoTypeID: 'namespace:reference-data--BasinType:ArcWrenchOceanContinent:'
                SubmitterName: Example SubmitterName
                BusinessActivities:
                - Example BusinessActivities
                AuthorIDs:
                - Example AuthorIDs
                LineageAssertions:
                - ID: 'namespace:any-group-type--AnyIndividualType:SomeUniqueAnyIndividualTypeID:'
                  LineageRelationshipType: 'namespace:reference-data--LineageRelationshipType:Direct:'
                ServiceCompanyID: 'namespace:master-data--Organisation:SomeUniqueOrganisationID:'
                WellboreID: 'namespace:master-data--Wellbore:SomeUniqueWellboreID:'
                TopDepthMeasuredDepth: 12345.6
                AzimuthReferenceType: 'namespace:reference-data--AzimuthReferenceType:TrueNorth:'
                CalculationMethodType: 'namespace:reference-data--CalculationMethodType:MinimumCurvature:'
                ProjectedCRSID: 'namespace:reference-data--CoordinateReferenceSystem:Projected:EPSG::32615:'
                ActiveIndicator: true
                SurveyType: Example Directional Survey Type
                AcquisitionDate: '2020-02-13T09:13:15.55Z'
                GeographicCRSID: 'namespace:reference-data--CoordinateReferenceSystem:Geographic2D:EPSG::4326:'
                AcquisitionRemark: Example Survey Remark
                SurveyReferenceIdentifier: Example Survey Reference Identifier
                SurveyToolTypeID: 'namespace:reference-data--SurveyToolType:MWD%2BSRGM_A001Mc:'
                SurveyVersion: Example Survey Version
                ExtrapolatedMeasuredDepth: 12345.6
                BaseDepthMeasuredDepth: 12345.6
                TieMeasuredDepth: 12345.6
                VerticalMeasurement:
                  EffectiveDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurement: 12345.6
                  TerminationDateTime: '2020-02-13T09:13:15.55Z'
                  VerticalMeasurementTypeID: 'namespace:reference-data--VerticalMeasurementType:PBD:'
                  VerticalMeasurementPathID: 'namespace:reference-data--VerticalMeasurementPath:MD:'
                  VerticalMeasurementSourceID: 'namespace:reference-data--VerticalMeasurementSource:DRL:'
                  WellboreTVDTrajectoryID: 'namespace:work-product-component--WellboreTrajectory:WellboreTrajectory-911bb71f-06ab-4deb-8e68-b8c9229dc76b:'
                  VerticalMeasurementUnitOfMeasureID: 'namespace:reference-data--UnitOfMeasure:m:'
                  VerticalCRSID: 'namespace:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
                  VerticalReferenceID: Example VerticalReferenceID
                  VerticalMeasurementDescription: Example VerticalMeasurementDescription
                AvailableTrajectoryStationProperties:
                - TrajectoryStationPropertyTypeID: 'partition-id:reference-data--TrajectoryStationPropertyType:AzimuthTN:'
                  StationPropertyUnitID: 'partition-id:reference-data--UnitOfMeasure:dega:'
                  Name: AzimuthTN
                AppliedOperations:
                - Example AppliedOperations
                CompanyID: 'namespace:master-data--Organisation:SomeUniqueOrganisationID:'
                ExtensionProperties: {}
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/query/wellbores/{wellboreId}/welllogs:
    post:
      tags:
      - search v3
      summary: Query with cursor, search WellLogs by wellbore ID
      description: "Get all WellLogs object using its relationship Wellbore ID.  <p>All\
        \ WellLogs linked to this\n            specific ID will be returned</p>\n\
        \            <p>The WellLogs kind is *:wks:work-product-component--WellLog:*\
        \ returns all records directly based on existing schemas</p>\n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: query_welllogs_bywellbore_ddms_v3_query_wellbores__wellboreId__welllogs_post
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreId
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/query/wellbore/{wellboreAttribute}/welllogs:
    post:
      tags:
      - search v3
      summary: Query with cursor, search WellLogs by wellbore attribute
      description: "Get all WellLogs object using a specific attribute of Wellbores.\
        \  <p>All WellLogs linked to Wellbores\n            with this specific attribute\
        \ will be returned</p>\n            <p>The WellLogs kind is *:wks:work-product-component--WellLog:*\
        \ returns all records directly based on existing schemas</p>\n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: query_welllogs_bywellboreattribute_ddms_v3_query_wellbore__wellboreAttribute__welllogs_post
      parameters:
      - required: true
        schema:
          title: Wellboreattribute
          type: string
        name: wellboreAttribute
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQuery'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/query/wellbores/{wellboreId}/wellboremarkersets:
    post:
      tags:
      - search v3
      summary: Query with cursor, search wellbore markersets by wellbore ID
      description: "Get all Wellbore Markersets objects using its relationship Wellbore\
        \ ID.  <p>All Markers linked to this\n            specific ID will be returned</p>\n\
        \            <p>The Wellbore Markerset kind is *:wks:work-product-component--WellboreMarkerSet:*\
        \ returns all records directly based on existing schemas</p>\n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: query_markers_bywellbore_ddms_v3_query_wellbores__wellboreId__wellboremarkersets_post
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreId
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /alpha/ddms/v3/query/wellbores:
    post:
      tags:
      - 'ALPHA feature: search v3'
      summary: Query with cursor or offset, get wellbores
      description: "Get Wellbores object by name.  \n             The wellbore kind\
        \ is *:wks:master-data--Wellbore:*  \n             Returns all records directly\
        \ based on existing schemas. The query is done on data.FacilityName field\
        \  \n             \n<p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'\
        \ or 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: query_wellbores_by_name_alpha_ddms_v3_query_wellbores_post
      parameters:
      - description: You can search for several wellbore names combining wellbore
          name values with the bitwise inclusive OR operator "|".
        required: false
        schema:
          title: Names
          type: string
          description: You can search for several wellbore names combining wellbore
            name values with the bitwise inclusive OR operator "|".
        name: names
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /alpha/ddms/v3/query/wellbores/{wellboreId}/wellboretrajectories:
    post:
      tags:
      - 'ALPHA feature: search v3'
      summary: Query with cursor, search wellbore trajectories by wellbore ID
      description: "Get all Wellbore Trajectories objects using its relationship Wellbore\
        \ ID.  <p>All Wellbore Trajectories linked to this\n            specific ID\
        \ will be returned</p>\n            <p>The Wellbore Trajectories kind is *:wks:work-product-component--WellboreTrajectory:*\
        \ returns all records directly based on existing schemas</p>\n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: query_trajectories_bywellbore_alpha_ddms_v3_query_wellbores__wellboreId__wellboretrajectories_post
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreId
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /alpha/ddms/v3/query/welllogs:
    post:
      tags:
      - 'ALPHA feature: search v3'
      summary: Query with cursor, search WellLogs by name and optionally by wellbore
        ID and curves mnemonics
      description: "Get all WellLogs objects using its name and optionally relationship\
        \ Wellbore ID. Filtering can be done on curves mnemonics\n            <p>The\
        \ WellLogs kind is *:wks:work-product-component--WellLog:* returns all records\
        \ directly based on existing schemas. The query is done on data.Name field</p>\n\
        <p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors' or\
        \ 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: query_welllogs_by_name_alpha_ddms_v3_query_welllogs_post
      parameters:
      - required: false
        schema:
          title: Names
          type: string
        name: names
        in: query
      - required: false
        schema:
          title: Wellbore Id
          type: string
        name: wellbore_id
        in: query
      - required: false
        schema:
          title: Mnemonics
          type: string
        name: mnemonics
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              allOf:
              - $ref: '#/components/schemas/SearchQueryRequest'
              default: {}
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorQueryResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/records/delete:
    post:
      tags:
      - Delete records V3
      summary: 'Delete records. The API performs a logical deletion of the given records. '
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_del_multiple_osdu_records
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Record Ids
              type: array
              items:
                type: string
        required: true
      responses:
        '204':
          description: Records deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: record/s not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{record_id}/sessions:
    get:
      tags:
      - WellLog
      summary: list session of the given record.
      operationId: list_session_ddms_v3_welllogs__record_id__sessions_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Session Ddms V3 Welllogs  Record Id  Sessions
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - WellLog
      summary: Create a new session on the given record for writing bulk data.
      description: 'Initiate a session based on record version provided. The session
        is isolated from any other modifications. Inside a session, individual chunk
        doesn''t generate new individual version. A new single version is created
        only at session completion ''aggregating'' all updates. A typical workflow
        is:

        1. create a session

        2. send X chunks (can be parallelized)

        3. commit the session


        Session has an expiry time. If the session is not completed before, it''s
        automatically dropped. The session duration is specified in the request but
        cannot exceeds 24 hours.'
      operationId: create_session_ddms_v3_welllogs__record_id__sessions_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSessionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{record_id}/sessions/{session_id}:
    get:
      tags:
      - WellLog
      summary: get session.
      operationId: get_session_ddms_v3_welllogs__record_id__sessions__session_id__get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    patch:
      tags:
      - WellLog
      summary: Update a session, either commit or abandon.
      operationId: complete_session_ddms_v3_welllogs__record_id__sessions__session_id__patch
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionState'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitSessionResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{record_id}/data:
    get:
      tags:
      - WellLog
      summary: Returns the data according to the specified query parameters.
      description: "Returns the data according to the specified query parameters.\
        \  \nMultiple media types response are available (\"application/json\", \"\
        application/x-parquet\").  \nThe desired format can be specify in the \"Accept\"\
        \ header, default is Parquet.  \nWhen bulk statistics are requested using\
        \ __describe__ query parameter, the response is always provided in JSON. \
        \ \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_ddms_v3_welllogs__record_id__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - WellLog
      summary: Writes data as a whole bulk, creates a new version.
      description: '

        Writes data to the associated record. It creates a new version.

        Payload is expected to contain the entire bulk which will replace as latest
        version

        any previous bulk. Previous bulk versions are accessible via the get bulk
        data version API.

        Support JSON and Parquet format (''Content_Type'' must be set accordingly).

        Support http chunked encoding transfer.

        <p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_data_ddms_v3_welllogs__record_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /ddms/v3/welllogs/{record_id}/sessions/{session_id}/data:
    post:
      tags:
      - WellLog
      summary: Send a data chunk. Session must be complete/commit once all chunks
        are sent.
      description: 'Send a data chunk. Session must be complete/commit once all chunks
        are sent. This will create a new and single version aggregating all and previous
        bulk.Support JSON and Parquet format (''Content_Type'' must be set accordingly).
        Support http chunked encoding.<p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: post_chunk_data_ddms_v3_welllogs__record_id__sessions__session_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeBasicDescribe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Record not found
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /ddms/v3/welllogs/{record_id}/versions/{version}/data:
    get:
      tags:
      - WellLog
      summary: Returns data of the specified version.
      description: "Returns the data of a specific version according to the specified\
        \ query parameters.  \nMultiple media types response are available (\"application/json\"\
        , \"application/x-parquet\").  \nThe desired format can be specify in the\
        \ \"Accept\" header, default is Parquet.  \nWhen bulk statistics are requested\
        \ using __describe__ query parameter, the response is always provided in JSON.\
        \  \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_version_ddms_v3_welllogs__record_id__versions__version__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{record_id}/sessions:
    get:
      tags:
      - Trajectory v3
      summary: list session of the given record.
      operationId: list_session_ddms_v3_wellboretrajectories__record_id__sessions_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Session Ddms V3 Wellboretrajectories  Record
                  Id  Sessions Get
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - Trajectory v3
      summary: Create a new session on the given record for writing bulk data.
      description: 'Initiate a session based on record version provided. The session
        is isolated from any other modifications. Inside a session, individual chunk
        doesn''t generate new individual version. A new single version is created
        only at session completion ''aggregating'' all updates. A typical workflow
        is:

        1. create a session

        2. send X chunks (can be parallelized)

        3. commit the session


        Session has an expiry time. If the session is not completed before, it''s
        automatically dropped. The session duration is specified in the request but
        cannot exceeds 24 hours.'
      operationId: create_session_ddms_v3_wellboretrajectories__record_id__sessions_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSessionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{record_id}/sessions/{session_id}:
    get:
      tags:
      - Trajectory v3
      summary: get session.
      operationId: get_session_ddms_v3_wellboretrajectories__record_id__sessions__session_id__get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Trajectory v3
      summary: Update a session, either commit or abandon.
      operationId: complete_session_ddms_v3_wellboretrajectories__record_id__sessions__session_id__patch
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionState'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitSessionResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/wellboretrajectories/{record_id}/data:
    get:
      tags:
      - Trajectory v3
      summary: Returns the data according to the specified query parameters.
      description: "Returns the data according to the specified query parameters.\
        \  \nMultiple media types response are available (\"application/json\", \"\
        application/x-parquet\").  \nThe desired format can be specify in the \"Accept\"\
        \ header, default is Parquet.  \nWhen bulk statistics are requested using\
        \ __describe__ query parameter, the response is always provided in JSON. \
        \ \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_ddms_v3_wellboretrajectories__record_id__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - Trajectory v3
      summary: Writes data as a whole bulk, creates a new version.
      description: '

        Writes data to the associated record. It creates a new version.

        Payload is expected to contain the entire bulk which will replace as latest
        version

        any previous bulk. Previous bulk versions are accessible via the get bulk
        data version API.

        Support JSON and Parquet format (''Content_Type'' must be set accordingly).

        Support http chunked encoding transfer.

        <p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_data_ddms_v3_wellboretrajectories__record_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /ddms/v3/wellboretrajectories/{record_id}/sessions/{session_id}/data:
    post:
      tags:
      - Trajectory v3
      summary: Send a data chunk. Session must be complete/commit once all chunks
        are sent.
      description: 'Send a data chunk. Session must be complete/commit once all chunks
        are sent. This will create a new and single version aggregating all and previous
        bulk.Support JSON and Parquet format (''Content_Type'' must be set accordingly).
        Support http chunked encoding.<p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: post_chunk_data_ddms_v3_wellboretrajectories__record_id__sessions__session_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeBasicDescribe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Record not found
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /ddms/v3/wellboretrajectories/{record_id}/versions/{version}/data:
    get:
      tags:
      - Trajectory v3
      summary: Returns data of the specified version.
      description: "Returns the data of a specific version according to the specified\
        \ query parameters.  \nMultiple media types response are available (\"application/json\"\
        , \"application/x-parquet\").  \nThe desired format can be specify in the\
        \ \"Accept\" header, default is Parquet.  \nWhen bulk statistics are requested\
        \ using __describe__ query parameter, the response is always provided in JSON.\
        \  \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_version_ddms_v3_wellboretrajectories__record_id__versions__version__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{record_id}/data/statistics:
    get:
      tags:
      - WellLog
      summary: Returns statistics of record's data for selected curves
      description: "Returns the statistics on bulk data identified by the record in\
        \ its last version. \n\n    \nIf wanted curves is an array:  \n    - requests\
        \ \"ARRAY\" retrieves all dimensions of the array  \n    - requests \"ARRAY[M:N]\"\
        , retrieves all dimensions between M and N.\n  \n    \n    \nData types supported:\
        \  \n            - int  \n            - float  \n            - date  \n  \n\
        \      \n    No unit conversion is supported. Statistics will be returned\
        \ using the same units as recorded in Curves[].CurveUnit\n    "
      operationId: get_bulk_statistics_ddms_v3_welllogs__record_id__data_statistics_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: List of curves or array to be returned. All curves if empty
        required: false
        schema:
          title: Curves
          type: string
          description: List of curves or array to be returned. All curves if empty
        example: MD,GR
        name: curves
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDataStatisticsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
          content:
            application/json:
              examples:
                default:
                  summary: Record not found
                  value:
                    detail: Record not found
                data-not-found:
                  summary: Statistics data not found
                  value:
                    errorType: DATA_NOT_FOUND
                    message: Statistics do not exist
                stats-curves-error:
                  summary: Requested curves unknown
                  value:
                    errorType: CURVES_NOT_FOUND
                    message: Requested curves unknown
                stats-computation-error:
                  summary: Computation still running
                  value:
                    errorType: COMPUTATION_NOT_COMPLETE
                    message: Statistics computation not finished yet
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v3/welllogs/{record_id}/versions/{version}/data/statistics:
    get:
      tags:
      - WellLog
      summary: Returns statistics of record's data for selected curves at requested
        version
      description: "Returns the statistics on bulk data identified by the record and\
        \ given version.  \n    \nIf wanted curves is an array:  \n    - requests\
        \ \"ARRAY\" retrieves all dimensions of the array  \n    - requests \"ARRAY[M:N]\"\
        , retrieves all dimensions between M and N.\n  \n      \n    \nData types\
        \ supported:  \n            - int  \n            - float  \n            -\
        \ date  \n  \n    \n    No unit conversion is supported. Statistics will be\
        \ returned using the same units as recorded in Curves[].CurveUnit\n    "
      operationId: get_bulk_statistics_version_ddms_v3_welllogs__record_id__versions__version__data_statistics_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: List of curves or array to be returned. All curves if empty
        required: false
        schema:
          title: Curves
          type: string
          description: List of curves or array to be returned. All curves if empty
        example: MD,GR
        name: curves
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDataStatisticsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
          content:
            application/json:
              examples:
                default:
                  summary: Record not found
                  value:
                    detail: Record not found
                data-not-found:
                  summary: Statistics data not found
                  value:
                    errorType: DATA_NOT_FOUND
                    message: Statistics do not exist
                stats-curves-error:
                  summary: Requested curves unknown
                  value:
                    errorType: CURVES_NOT_FOUND
                    message: Requested curves unknown
                stats-computation-error:
                  summary: Computation still running
                  value:
                    errorType: COMPUTATION_NOT_COMPLETE
                    message: Statistics computation not finished yet
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    post:
      tags:
      - WellLog
      summary: Trigger computations of record's data statistics of record's data
      description: "Trigger the computation of statistics on bulk data for \n    the\
        \ record identified by the record_id at its last version   \n\n    No unit\
        \ conversion is supported. Statistics will be returned using the same units\
        \ as recorded in Curves[].CurveUnit\n    "
      operationId: compute_bulk_statistics_ddms_v3_welllogs__record_id__versions__version__data_statistics_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Statistics computation started
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Statistics or record not found
        '409':
          description: Statistics computation already running or complete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /log-recognition/family:
    post:
      tags:
      - log-recognition
      summary: Recognize family and unit
      description: Find the most probable family and unit using family assignment
        rule based catalogs. User defined catalog will have the priority.
      operationId: family
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuessRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuessResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Family not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /log-recognition/upload-catalog:
    put:
      tags:
      - log-recognition
      summary: Upload user-defined catalog with family assignment rules
      description: "Upload user-defined catalog with family assignment rules for specific\
        \ partition ID. \n            If there is an existing catalog, it will be\
        \ replaced. It takes maximum of 5 mins to replace the existing catalog. \n\
        \            Hence, any call to retrieve the family should be made after 5\
        \ mins of uploading the catalog. <p>Required roles: 'users.datalake.editors'\
        \ or 'users.datalake.admins'.</p>"
      operationId: upload-catalog
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogRecord'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /ddms/v2/wells/{wellid}:
    get:
      tags:
      - Well
      summary: Get the Well using wks:well:1.0.2 schema
      description: "Get the Well object using its **id**.  <p>If the well kind is\n\
        \        *wks:well:1.0.2* returns the record directly</p> <p>If the well\n\
        \        kind is different *wks:well:1.0.2* it will get the raw record and\n\
        \        convert the results to match the *wks:well:1.0.2*. If convertion\
        \ is\n        not possible returns an error **500**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_well
      parameters:
      - required: true
        schema:
          title: Wellid
          type: string
        name: wellid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/well'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Well
      summary: Delete the well. The API performs a logical deletion of the given record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_well
      parameters:
      - required: true
        schema:
          title: Wellid
          type: string
        name: wellid
        in: path
      - description: Whether or not to delete records children
        required: false
        schema:
          title: Recursive
          type: boolean
          description: Whether or not to delete records children
          default: false
        name: recursive
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wells/{wellid}/versions:
    get:
      tags:
      - Well
      summary: Get all versions of the Well
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_well_versions
      parameters:
      - required: true
        schema:
          title: Wellid
          type: string
        name: wellid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wells/{wellid}/versions/{version}:
    get:
      tags:
      - Well
      summary: Get the given version of the Well using wks:well:1.0.2 schema
      description: "\"Get the Well object using its **id**.  <p>If the well kind is\n\
        \        *wks:well:1.0.2* returns the record directly</p> <p>If the well\n\
        \        kind is different *wks:well:1.0.2* it will get the raw record and\n\
        \        convert the results to match the *wks:well:1.0.2*. If convertion\
        \ is\n        not possible returns an error **500**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_well_version
      parameters:
      - required: true
        schema:
          title: Wellid
          type: string
        name: wellid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/well'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Well not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wells:
    post:
      tags:
      - Well
      summary: Create or update the Wells using wks:well:1.0.2 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_well
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wells
              type: array
              items:
                $ref: '#/components/schemas/well'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
              data:
                name: myWell
                uwi: 00-000-00000-00
              id: '{{datapartitionid}}:well:myWell'
              kind: '{{datapartitionid}}:wks:well:1.0.2'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wellbores/{wellboreid}:
    get:
      tags:
      - Wellbore
      summary: Get the Wellbore using wks:wellbore:1.0.6 schema
      description: "Get the Wellbore object using its **id**.  <p>If the wellbore\
        \ kind is\n        *wks:wellbore:1.0.6* returns the record directly</p> <p>If\
        \ the wellbore\n        kind is different *wks:wellbore:1.0.6* it will get\
        \ the raw record and\n        convert the results to match the *wks:wellbore:1.0.6*.\
        \ If convertion is\n        not possible returns an error **500**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_wellbore
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wellbore'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Wellbore
      summary: Delete the wellbore. The API performs a logical deletion of the given
        record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_wellbore
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreid
        in: path
      - description: Whether or not to delete records children
        required: false
        schema:
          title: Recursive
          type: boolean
          description: Whether or not to delete records children
          default: false
        name: recursive
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wellbores/{wellboreid}/versions:
    get:
      tags:
      - Wellbore
      summary: Get all versions of the Wellbore
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_wellbore_versions
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wellbores/{wellboreid}/versions/{version}:
    get:
      tags:
      - Wellbore
      summary: Get the given version of the Wellbore using wks:wellbore:1.0.6 schema
      description: "\"Get the Wellbore object using its **id**.  <p>If the wellbore\
        \ kind is\n        *wks:wellbore:1.0.6* returns the record directly</p> <p>If\
        \ the wellbore\n        kind is different *wks:wellbore:1.0.6* it will get\
        \ the raw record and\n        convert the results to match the *wks:wellbore:1.0.6*.\
        \ If convertion is\n        not possible returns an error **500**. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_wellbore_version
      parameters:
      - required: true
        schema:
          title: Wellboreid
          type: string
        name: wellboreid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/wellbore'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Wellbore not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/wellbores:
    post:
      tags:
      - Wellbore
      summary: Create or update the Wellbores using wks:wellbore:1.0.6 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_wellbore
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Wellbores
              type: array
              items:
                $ref: '#/components/schemas/wellbore'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}
              data:
                name: myWellbore
                airGap:
                  unitKey: ft
                  value: 35.0
                country: United States of America
                dateCreated: '2013-03-22T11:16:03.123Z'
                dateModified: '2013-03-22T11:16:03.123Z'
                locationWGS84:
                  features:
                  - geometry:
                      coordinates:
                      - - -103.2380248
                        - 46.8925081
                        - 5301.0
                      - - -103.2380248
                        - 46.8925081
                        - 2801.0
                      - - -103.2378748
                        - 46.892608100000004
                        - 301.0
                      - - -103.23742477750001
                        - 46.89270811
                        - -2199.0
                      - - -103.23667470999663
                        - 46.892808120001
                        - -4699.0
                      - - -103.2356245974865
                        - 46.892908130002
                        - -7199.0
                      type: LineString
                    properties:
                      name: Newton 2-31-Lat-1
                    type: Feature
                  type: FeatureCollection
                propertyDictionary:
                  Country Name: UNITED STATES
                  Date First Report: 11-12-1982
                  Date Last Activity: 06-03-2016
                  Field Name: WILDCAT
                  Well Num: 34-14
                relationships:
                  well:
                    confidence: 1.0
                    id: '{datapartitionid}:well:myWell'
                    name: myWell
                uwi: 33-089-00300-00-01
                wellHeadGeographic:
                  crsKey: geographic
                  elevationFromMsl:
                    unitKey: ft
                    value: 2650.5
                  latitude: 46.89249512931594
                  longitude: -103.23756979739804
                wellHeadProjected:
                  crsKey: projected
                  elevationFromMsl:
                    unitKey: ft
                    value: 2650.5
                  x: 1315694.366039069
                  y: 458966.7531300551
                wellHeadWgs84:
                  latitude: 46.8925081
                  longitude: -103.2380248
                wellboreType: bypass
              meta:
              - kind: Unit
                name: Measure depth default unit
                persistableReference: persistableReference
                propertyNames:
                - symbol
                propertyValues:
                - ft
              - kind: CRS
                name: projected
                persistableReference: '{"lateBoundCRS":{"wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.1833333333333],PARAMETER[\"Standard_Parallel_2\",47.4833333333333],PARAMETER[\"Latitude_Of_Origin\",45.6666666666667],UNIT[\"Foot_US\",0.304800609601219],AUTHORITY[\"EPSG\",32021]]","ver":"PE_10_3_1","name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","authCode":{"auth":"EPSG","code":"32021"},"type":"LBC"},"singleCT":{"wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],AUTHORITY[\"EPSG\",15851]]","ver":"PE_10_3_1","name":"NAD_1927_To_WGS_1984_79_CONUS","authCode":{"auth":"EPSG","code":"15851"},"type":"ST"},"ver":"PE_10_3_1","name":"NAD27
                  * OGP-Usa Conus / North Dakota South [32021,15851]","authCode":{"auth":"SLB","code":"32021079"},"type":"EBC"}'
                propertyNames:
                - wellHeadProjected.x
                - wellHeadProjected.y
              id: '{{datapartitionid}}:wellbore:myWellbore'
              kind: '{{datapartitionid}}:wks:wellbore:1.0.6'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logsets/{logsetid}:
    get:
      tags:
      - Logset
      summary: Get the LogSet using wks:logSet:1.0.5 schema
      description: "Get the LogSet object using its **id**. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_logset
      parameters:
      - required: true
        schema:
          title: Logsetid
          type: string
        name: logsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logset'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: LogSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Logset
      summary: Delete the LogSet. The API performs a logical deletion of the given
        record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_logset
      parameters:
      - required: true
        schema:
          title: Logsetid
          type: string
        name: logsetid
        in: path
      - description: Whether or not to delete records children
        required: false
        schema:
          title: Recursive
          type: boolean
          description: Whether or not to delete records children
          default: false
        name: recursive
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: LogSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logsets/{logsetid}/versions:
    get:
      tags:
      - Logset
      summary: Get all versions of the logset.
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_logset_versions
      parameters:
      - required: true
        schema:
          title: Logsetid
          type: string
        name: logsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: LogSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logsets/{logsetid}/versions/{version}:
    get:
      tags:
      - Logset
      summary: Get the given version of LogSet using wks:logSet:1.0.5 schema
      description: "\"Get the LogSet object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_logset_version
      parameters:
      - required: true
        schema:
          title: Logsetid
          type: string
        name: logsetid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logset'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: LogSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logsets:
    post:
      tags:
      - Logset
      summary: Create or update the LogSets using wks:logSet:1.0.5 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_logset
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Logsets
              type: array
              items:
                $ref: '#/components/schemas/logset'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}.com
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}.com
              data:
                name: myLogset
                channelMnemonics:
                - GR
                - NPOR
                - RHOB
                channelNames:
                - Gamma Ray
                - Neutron Porosity
                - Bulk Density
                relationships:
                  well:
                    confidence: 1.0
                    id: '{{datapartitionid}}:well:myWell'
                    name: myWell
                  wellbore:
                    confidence: 1.0
                    id: '{{datapartitionid}}:wellbore:myWellbore'
                    name: myWellbore
                elevationReference:
                  elevationFromMsl:
                    unitKey: ft
                    value: 2680.5
                  name: KB
                reference:
                  dataType: number
                  dimension: 1
                  family: Measured Depth
                  familyType: Depth
                  format: float32
                  mnemonic: MD
                  name: Measured Depth
                  unitKey: ft
                referenceType: Measured Depth
              id: '{{datapartitionid}}:logSet:myLogset'
              kind: '{{datapartitionid}}:wks:logSet:1.0.5'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/trajectories/{trajectoryid}:
    get:
      tags:
      - Trajectory
      summary: Get the trajectory using wks:trajectory:1.0.5 schema
      description: "Get the Trajectory object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_trajectory
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trajectory'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Trajectory
      summary: Delete the Trajectory. The API performs a logical deletion of the given
        record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_trajectory
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/trajectories/{trajectoryid}/versions:
    get:
      tags:
      - Trajectory
      summary: Get all versions of the Trajectory
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_trajectory_versions
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/trajectories/{trajectoryid}/versions/{version}:
    get:
      tags:
      - Trajectory
      summary: Get the given version of Trajectory using wks:Trajectory:1.0.5 schema
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_trajectory_version
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trajectory'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/trajectories:
    post:
      tags:
      - Trajectory
      summary: Create or update the trajectories using wks:Trajectory:1.0.5 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_trajectory
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Trajectories
              type: array
              items:
                $ref: '#/components/schemas/trajectory'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}.com
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}.com
              data:
                azimuthReference: string
                channelMnemonics:
                - Measured Depth
                - True Vertical Depth
                - XOffset
                - YOffset
                channelNames:
                - MD
                - TVD
                - X
                - Y
                channels:
                - dimension: 1
                  family: Measured Depth
                  name: MD
                  unitKey: ft
                - dimension: 1
                  family: True Vertical Depth
                  name: TVD
                  unitKey: ft
                - dimension: 1
                  family: XOffset
                  name: X
                  unitKey: ft
                - dimension: 1
                  family: YOffset
                  name: Y
                  unitKey: ft
                name: myTrajectory
                relationships:
                  well:
                    confidence: 1.0
                    id: '{{datapartitionid}}:well:myWell'
                    name: myWell
                  wellbore:
                    confidence: 1.0
                    id: '{{datapartitionid}}:wellbore:myWellbore'
                    name: myWellbore
              id: '{{datapartitionid}}:trajectory:myTrajectory'
              kind: '{{datapartitionid}}:wks:trajectory:1.0.5'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/trajectories/{trajectoryid}/data:
    get:
      tags:
      - Trajectory
      summary: Returns all data within the specified filters. Strongly consistent.
      description: "return full bulk data. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_traj_data
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - description: List of channels to get. If not provided, return all channels.
        required: false
        schema:
          title: Channels
          type: array
          items:
            type: string
          description: List of channels to get. If not provided, return all channels.
        name: channels
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: "Get trajectory data of the given channels.\nIt uses [Pandas.Dataframe\
            \ json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
            \ Here're examples for data with 5 rows for channels MD, TVD, X, Y with\
            \ different _orient_: \n* split:  <br/>`{\"columns\":[\"MD\",\"TVD\",\"\
            X\",\"Y\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}`<br/>&nbsp;\n\
            * columns:  <br/>`{\"MD\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"\
            4\":2.0},\"TVD\":{\"0\":0.0,\"1\":0.5,\"2\":0.75,\"3\":1.0,\"4\":1.5},\"\
            X\":{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"4\":1005},\"Y\":{\"\
            0\":2001,\"1\":2002,\"2\":2003,\"3\":2004,\"4\":2005}}`<br/>&nbsp;"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogDataResponse'
              example: '{"columns":["MD","TVD","X","Y"],"index":[0,1,2,3,4],"data":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Record has an invalid bulkURI
        '404':
          description: trajectory not found
        '400':
          description: unknown channels
        '204':
          description: No bulkURI
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    post:
      tags:
      - Trajectory
      summary: Writes the specified data to the trajectory (atomic).
      description: 'Overwrite if exists. <p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: post_traj_data
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
      requestBody:
        description: "Write trajectory bulk data. Each column corresponds to a channel.\n\
          It uses [Pandas.Dataframe json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          \ Here're examples for data with 5 rows and 4 channels (MD, TVD, X, Y) with\
          \ different _orient_: \n* split: <br/>`{\"columns\":[\"MD\",\"TVD\",\"X\"\
          ,\"Y\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}`<br/>&nbsp;\n\
          * columns: <br/>`{\"MD\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"4\"\
          :2.0},\"TVD\":{\"0\":0.0,\"1\":0.5,\"2\":0.75,\"3\":1.0,\"4\":1.5},\"X\"\
          :{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"4\":1005},\"Y\":{\"0\":2001,\"\
          1\":2002,\"2\":2003,\"3\":2004,\"4\":2005}}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: '{"columns":["MD","TVD","X","Y"],"index":[0,1,2,3,4],"data":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}'
              oneOf:
              - title: SplitFormat
                type: object
                properties:
                  data:
                    title: Data
                    anyOf:
                    - type: array
                      items:
                        anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    - type: array
                      items:
                        type: array
                        items:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: number
                  columns:
                    title: Columns
                    type: array
                    items:
                      anyOf:
                      - type: string
                      - type: integer
                      - type: number
                  index:
                    title: Index
                    type: array
                    items:
                      anyOf:
                      - type: string
                      - type: integer
                      - type: number
                required:
                - data
              - title: ColumnFormat
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    anyOf:
                    - type: string
                    - type: integer
                    - type: number
  /ddms/v2/trajectories/{trajectoryid}/versions/{version}/data:
    get:
      tags:
      - Trajectory
      summary: Returns all data within the specified filters. Strongly consistent.
      description: "return full bulk data. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_trajectory_data_by_version
      parameters:
      - required: true
        schema:
          title: Trajectoryid
          type: string
        name: trajectoryid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: List of channels to get. If not provided, return all channels.
        required: false
        schema:
          title: Channels
          type: array
          items:
            type: string
          description: List of channels to get. If not provided, return all channels.
        name: channels
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: "Get trajectory bulk data in format in the given _orient_ value.\n\
            It uses [Pandas.Dataframe json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
            \ Here're examples for data with 5 rows and 4 columns with different _orient_:\
            \ \n* split:  <br/>`{\"columns\":[\"MD\",\"TVD\",\"X\",\"Y\"],\"index\"\
            :[0,1,2,3,4],\"data\":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}`<br/>&nbsp;\n\
            * columns:  <br/>`{\"MD\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"\
            4\":2.0},\"TVD\":{\"0\":0.0,\"1\":0.5,\"2\":0.75,\"3\":1.0,\"4\":1.5},\"\
            X\":{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"4\":1005},\"Y\":{\"\
            0\":2001,\"1\":2002,\"2\":2003,\"3\":2004,\"4\":2005}}`<br/>&nbsp;"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrajectoryDataResponse'
              example: '{"columns":["MD","TVD","X","Y"],"index":[0,1,2,3,4],"data":[[0.0,0.0,1001,2001],[0.5,0.5,1002,2002],[1.0,0.75,1003,2003],[1.5,1.0,1004,2004],[2.0,1.5,1005,2005]]}'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: trajectory not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/markers/{markerid}:
    get:
      tags:
      - Marker
      summary: Get the marker using wks:marker:1.0.4 schema
      description: "Get the Marker object using its **id**. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_marker
      parameters:
      - required: true
        schema:
          title: Markerid
          type: string
        name: markerid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marker'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: marker not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Marker
      summary: Delete the marker. The API performs a logical deletion of the given
        record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_marker
      parameters:
      - required: true
        schema:
          title: Markerid
          type: string
        name: markerid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Marker not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/markers/{markerid}/versions:
    get:
      tags:
      - Marker
      summary: Get all versions of the marker
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_marker_versions
      parameters:
      - required: true
        schema:
          title: Markerid
          type: string
        name: markerid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: marker not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/markers/{markerid}/versions/{version}:
    get:
      tags:
      - Marker
      summary: Get the given version of marker using wks:marker:1.0.4 schema
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_marker_version
      parameters:
      - required: true
        schema:
          title: Markerid
          type: string
        name: markerid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marker'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: marker not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/markers:
    post:
      tags:
      - Marker
      summary: Create or update the markers using wks:marker:1.0.4 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_marker
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Markers
              type: array
              items:
                $ref: '#/components/schemas/marker'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}.com
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}.com
              data:
                depth:
                  unitKey: ft
                  value: 150
                md:
                  unitKey: ft
                  value: 150
                tvd:
                  unitKey: ft
                  value: 200
                name: myMarker
                relationships:
                  well:
                    confidence: 1.0
                    id: '{{datapartitionid}}:well:myWell'
                    name: myWell
                  wellbore:
                    confidence: 1.0
                    id: '{{datapartitionid}}:wellbore:myWellbore'
                    name: myWellbore
              id: '{{datapartitionid}}:marker:myMarker'
              kind: '{{datapartitionid}}:wks:marker:1.0.4'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}:
    get:
      tags:
      - Log
      summary: Get the Log using wks:log:1.0.5 schema
      description: "Get the log object using its data ecosystem **id**.  <p>If the\
        \ log\n                kind is *wks:log:1.0.5* returns the record directly</p>\
        \ <p>If the\n                wellbore kind is different *wks:log:1.0.5* it\
        \ will get the raw\n                record and convert the results to match\
        \ the *wks:log:1.0.5*. If\n                conversion is not possible returns\
        \ an error **500**.</p>\n<p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'\
        \ or 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: get_log
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Log
      summary: Delete the log. The API performs a logical deletion of the given record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_log
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs:
    post:
      tags:
      - Log
      summary: Create or update the logs using wks:log:1.0.5 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_log
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Logs
              type: array
              items:
                $ref: '#/components/schemas/log'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}.com
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}.com
              data:
                name: myLog_GR
                history:
                - date: '2019-02-01T11:16:03Z'
                  description: Fake example
                  user: BWillis
                log:
                  dataType: number
                  dimension: 1
                  family: Gamma Ray
                  familyType: Gamma Ray
                  format: float32
                  mnemonic: GR
                  name: myLog_GR
                  properties:
                  - description: Linear depth offset of the channel sensor relative
                      to some reference point, typically the toolstring zero
                    name: MEASURE_POINT_OFFSET
                    unitKey: m
                    value: 0.264922
                  unitKey: gAPI
                reference:
                  dataType: number
                  dimension: 1
                  family: Measured Depth
                  familyType: Depth
                  format: float32
                  mnemonic: MD
                  name: Measured Depth
                  unitKey: ft
                referenceType: Measured Depth
                relationships:
                  logSet:
                    confidence: 1.0
                    id: '{{datapartitionid}}:logSet:myLogset'
                    name: myLogset
                  well:
                    confidence: 1.0
                    id: '{{datapartitionid}}:well:myWell'
                    name: myWell
                  wellbore:
                    confidence: 1.0
                    id: '{{datapartitionid}}:wellbore:myWellbore'
                    name: myWellbore
              id: '{{datapartitionid}}:log:myLog_GR'
              kind: '{{datapartitionid}}:wks:log:1.0.5'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/versions:
    get:
      tags:
      - Log
      summary: Get all versions of the log
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_log_versions
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/versions/{version}:
    get:
      tags:
      - Log
      summary: Get the given version of log using wks:log:1.0.5 schema
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_log_version
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/data:
    get:
      tags:
      - Log
      summary: Returns all data within the specified filters. Strongly consistent.
      description: "return full bulk data. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_log_data
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: "Get log bulk data in format in the given _orient_ value.\n\
            It uses [Pandas.Dataframe json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
            \ Here're examples for data with 5 rows and 3 columns with different _orient_:\
            \ \n* split:  <br/>`{\"columns\":[\"Ref\",\"col_100X\",\"col_200X\"],\"\
            index\":[0,1,2,3,4],\"data\":[[0.0,1001,2001],[0.5,1002,2002],[1.0,1003,2003],[1.5,1004,2004],[2.0,1005,2005]]}`<br/>&nbsp;\n\
            * columns:  <br/>`{\"Ref\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"\
            4\":2.0},\"col_100X\":{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"\
            4\":1005},\"col_200X\":{\"0\":2001,\"1\":2002,\"2\":2003,\"3\":2004,\"\
            4\":2005}}`<br/>&nbsp;"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogDataResponse'
              example: '{"columns":["Ref","col_100X","col_200X"],"index":[0,1,2,3,4],"data":[[0.0,1001,2001],[0.5,1002,2002],[1.0,1003,2003],[1.5,1004,2004],[2.0,1005,2005]]}'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    post:
      tags:
      - Log
      summary: Writes the specified data to the log (atomic).
      description: 'Overwrite if exists. <p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: write_log_data
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
      requestBody:
        description: "Write log bulk data.\nIt uses [Pandas.Dataframe json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          \ Here're examples for data with 5 rows and 3 columns with different _orient_:\
          \ \n* split:  <br/>`{\"columns\":[\"Ref\",\"col_100X\",\"col_200X\"],\"\
          index\":[0,1,2,3,4],\"data\":[[0.0,1001,2001],[0.5,1002,2002],[1.0,1003,2003],[1.5,1004,2004],[2.0,1005,2005]]}`<br/>&nbsp;\n\
          * columns:  <br/>`{\"Ref\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"4\"\
          :2.0},\"col_100X\":{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"4\":1005},\"\
          col_200X\":{\"0\":2001,\"1\":2002,\"2\":2003,\"3\":2004,\"4\":2005}}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example:
                columns:
                - Ref
                - col_100X
                - col_200X
                index:
                - 0
                - 1
                - 2
                - 3
                - 4
                data:
                - - 0.0
                  - 1001
                  - 2001
                - - 0.5
                  - 1002
                  - 2002
                - - 1.0
                  - 1003
                  - 2003
                - - 1.5
                  - 1004
                  - 2004
                - - 2.0
                  - 1005
                  - 2005
              oneOf:
              - title: SplitFormat
                type: object
                properties:
                  data:
                    title: Data
                    anyOf:
                    - type: array
                      items:
                        anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    - type: array
                      items:
                        type: array
                        items:
                          anyOf:
                          - type: string
                          - type: integer
                          - type: number
                  columns:
                    title: Columns
                    type: array
                    items:
                      anyOf:
                      - type: string
                      - type: integer
                      - type: number
                  index:
                    title: Index
                    type: array
                    items:
                      anyOf:
                      - type: string
                      - type: integer
                      - type: number
                required:
                - data
              - title: ColumnFormat
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    anyOf:
                    - type: string
                    - type: integer
                    - type: number
  /ddms/v2/logs/{logid}/upload_data:
    post:
      tags:
      - Log
      summary: Writes the data to the log. Support json file (then orient must be
        provided) and parquet
      description: 'Overwrite if exists. <p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: upload_log_data
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_log_data_file_ddms_v2_logs__logid__upload_data_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: invalid request
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/statistics:
    get:
      tags:
      - Log
      summary: Data statistics
      description: "This API will return count, mean, std, min, max and percentiles\
        \ of each column. \n<p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'\
        \ or 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: get_log_data_statistics_ddms_v2_logs__logid__statistics_get
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Log Data Statistics Ddms V2 Logs  Logid  Statistics
                  Get
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/StatsColumn'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/versions/{version}/data:
    get:
      tags:
      - Log
      summary: Returns all data within the specified filters. Strongly consistent.
      description: "return full bulk data. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_log_data_by_version
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: "Get log bulk data in format in the given _orient_ value.\n\
            It uses [Pandas.Dataframe json format](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
            \ Here're examples for data with 5 rows and 3 columns with different _orient_:\
            \ \n* split:  <br/>`{\"columns\":[\"Ref\",\"col_100X\",\"col_200X\"],\"\
            index\":[0,1,2,3,4],\"data\":[[0.0,1001,2001],[0.5,1002,2002],[1.0,1003,2003],[1.5,1004,2004],[2.0,1005,2005]]}`<br/>&nbsp;\n\
            * columns:  <br/>`{\"Ref\":{\"0\":0.0,\"1\":0.5,\"2\":1.0,\"3\":1.5,\"\
            4\":2.0},\"col_100X\":{\"0\":1001,\"1\":1002,\"2\":1003,\"3\":1004,\"\
            4\":1005},\"col_200X\":{\"0\":2001,\"1\":2002,\"2\":2003,\"3\":2004,\"\
            4\":2005}}`<br/>&nbsp;"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogDataResponse'
              example: '{"columns":["Ref","col_100X","col_200X"],"index":[0,1,2,3,4],"data":[[0.0,1001,2001],[0.5,1002,2002],[1.0,1003,2003],[1.5,1004,2004],[2.0,1005,2005]]}'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/logs/{logid}/decimated:
    get:
      tags:
      - Log
      summary: Returns a decimated version of all data within the specified filters.
        Eventually consistent.
      description: "TODO\n            Note: row order is not preserved. \n<p>Required\
        \ roles: 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_log_decimated
      parameters:
      - required: true
        schema:
          title: Logid
          type: string
        name: logid
        in: path
      - description: Number of division desired
        required: false
        schema:
          title: Quantiles
          type: integer
          description: Number of division desired
        name: quantiles
        in: query
      - description: The start value for the log decimation
        required: false
        schema:
          title: Start
          type: number
          description: The start value for the log decimation
        name: start
        in: query
      - description: The stop value for the log decimation
        required: false
        schema:
          title: Stop
          type: number
          description: The stop value for the log decimation
        name: stop
        in: query
      - description: response format JSON. Only "values" is allowed.
        required: false
        schema:
          title: Orient
          pattern: values
          type: string
          description: response format JSON. Only "values" is allowed.
          default: values
        name: orient
        in: query
      - description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
          Required for non wks:log.
        required: false
        schema:
          title: Bulk-Path
          type: string
          description: The json path to the bulk reference (see https://goessner.net/articles/JsonPath/).
            Required for non wks:log.
        name: bulk-path
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: log not found
        '422':
          description: log is not compatible with decimation
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets:
    post:
      tags:
      - Dipset
      summary: Create or update the DipSets using wks:dipSet:1.0.0 schema
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_dipset
      parameters:
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Dipsets
              type: array
              items:
                $ref: '#/components/schemas/dipset'
            example:
            - acl:
                viewers:
                - data.default.viewers@{{datapartitionid}}.{{domain}}.com
                owners:
                - data.default.owners@{{datapartitionid}}.{{domain}}.com
              data:
                classification: Externally Processed LogSet
                name: myDipSet
                relationships:
                  well:
                    confidence: 1.0
                    id: '{{datapartitionid}}:well:myWell'
                    name: myWell
                  wellbore:
                    confidence: 1.0
                    id: '{{datapartitionid}}:wellbore:myWellbore'
                    name: myWellbore
              id: '{{datapartitionid}}:dipSet:myDipSet'
              kind: '{{datapartitionid}}:wks:dipSet:1.0.0'
              legal:
                legaltags:
                - '{{legaltags}}'
                otherRelevantDataCountries:
                - FR
                - US
                status: compliant
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateRecordsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Missing mandatory parameter or unknown parameter
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/versions/{version}:
    get:
      tags:
      - Dipset
      summary: Get the given version of DipSet using wks:dipset:1.0.0 schema
      description: "\"Get the DipSet object using its **id**. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_dipset_version
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dipset'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/versions:
    get:
      tags:
      - Dipset
      summary: Get all versions of the dipset
      description: '

        <p>Required roles: ''users.datalake.viewers'' or ''users.datalake.editors''
        or ''users.datalake.admins''.

        "In addition, users must be a member of data groups to access the data.</p>

        '
      operationId: get_dipset_versions
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordVersions'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}:
    get:
      tags:
      - Dipset
      summary: Get the DipSet using wks:dipSet:1.0.0 schema
      description: "Get the DipSet object using its **id**. \n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_dipset
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dipset'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Dipset
      summary: Delete the DipSet. The API performs a logical deletion of the given
        record
      description: '<p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: del_dipset
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - description: Whether or not to delete records children
        required: false
        schema:
          title: Recursive
          type: boolean
          description: Whether or not to delete records children
          default: false
        name: recursive
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '204':
          description: Record deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/dips:
    get:
      tags:
      - Dips
      summary: Get dips
      description: "Return dips from dipset from the given index until the given number\
        \ of dips specifed in query parameters. \n    If not specified returns all\
        \ dips from dipset. \n<p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'\
        \ or 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: get_dips
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - required: false
        schema:
          title: Index
          minimum: 0.0
          type: integer
        name: index
        in: query
      - required: false
        schema:
          title: Limit
          minimum: 0.0
          type: integer
        name: limit
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Dips Ddms V2 Dipsets  Dipsetid  Dips Get
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    post:
      tags:
      - Dips
      summary: Define the dips of the dipset
      description: 'Replace previous dips by provided dips. Sort dips by reference
        and azimuth. <p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_dips
      parameters:
      - description: The ID of the dipset
        required: true
        schema:
          title: Dipsetid
          type: string
          description: The ID of the dipset
        name: dipsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Dips
              type: array
              items:
                $ref: '#/components/schemas/Dip'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Post Dips Ddms V2 Dipsets  Dipsetid  Dips Post
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/dips/insert:
    post:
      tags:
      - Dips
      summary: insert dip in  a dipset
      description: "Insert dips in dipset. \n    Existing dips are not replaced. \n\
        \    Several dip can have same reference. \n    Operation will sort by reference\
        \ all dips in dipset (may modify dip indexes). <p>Required roles: 'users.datalake.editors'\
        \ or 'users.datalake.admins'.</p>"
      operationId: insert_dips
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Dips
              type: array
              items:
                $ref: '#/components/schemas/Dip'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Insert Dips Ddms V2 Dipsets  Dipsetid  Dips Insert
                  Post
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/dips/query:
    get:
      tags:
      - Dips
      summary: Query dip from dipset
      description: "Search dip within reference interval and specific classification.\
        \ \n<p>Required roles: 'users.datalake.viewers' or 'users.datalake.editors'\
        \ or 'users.datalake.admins'.\n\"In addition, users must be a member of data\
        \ groups to access the data.</p>\n"
      operationId: query_dip
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - description: Min reference for the dips to search in the dipset
        required: false
        schema:
          title: Minreference
          type: number
          description: Min reference for the dips to search in the dipset
        name: minReference
        in: query
      - required: false
        schema:
          title: Max reference for the dips to search in the dipset
          type: number
        name: maxReference
        in: query
      - required: false
        schema:
          title: Classification for the dip to search in the dipset
          type: string
        name: classification
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Query Dip Ddms V2 Dipsets  Dipsetid  Dips Query Get
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /ddms/v2/dipsets/{dipsetid}/dips/{index}:
    get:
      tags:
      - Dips
      summary: Get a dip at index
      description: "\"Return dip from dipset at the given index. \n<p>Required roles:\
        \ 'users.datalake.viewers' or 'users.datalake.editors' or 'users.datalake.admins'.\n\
        \"In addition, users must be a member of data groups to access the data.</p>\n"
      operationId: get_dip_by_index
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - required: true
        schema:
          title: Index
          type: integer
        name: index
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet or index not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Dips
      summary: Delete a dip
      description: 'Removes the dip at index. <p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: delete_dip_by_index
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - required: true
        schema:
          title: Index
          type: integer
        name: index
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Delete Dip By Index Ddms V2 Dipsets  Dipsetid  Dips  Index  Delete
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet or index not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Dips
      summary: Update dip
      description: "\"Update dip at index     \n    Operation will sort by reference\
        \ all dips in dipset (may modify dip indexes)."
      operationId: patch_dip
      parameters:
      - required: true
        schema:
          title: Dipsetid
          type: string
        name: dipsetid
        in: path
      - required: true
        schema:
          title: Index
          type: integer
        name: index
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dip'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Patch Dip Ddms V2 Dipsets  Dipsetid  Dips  Index  Patch
                type: array
                items:
                  $ref: '#/components/schemas/Dip'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: DipSet not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /alpha/ddms/v2/logs/{record_id}/sessions:
    get:
      tags:
      - DEPRECATED
      summary: list session of the given record.
      operationId: list_session_alpha_ddms_v2_logs__record_id__sessions_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Session Alpha Ddms V2 Logs  Record Id  Sessions
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    post:
      tags:
      - DEPRECATED
      summary: Create a new session on the given record for writing bulk data.
      description: 'Initiate a session based on record version provided. The session
        is isolated from any other modifications. Inside a session, individual chunk
        doesn''t generate new individual version. A new single version is created
        only at session completion ''aggregating'' all updates. A typical workflow
        is:

        1. create a session

        2. send X chunks (can be parallelized)

        3. commit the session


        Session has an expiry time. If the session is not completed before, it''s
        automatically dropped. The session duration is specified in the request but
        cannot exceeds 24 hours.'
      operationId: create_session_alpha_ddms_v2_logs__record_id__sessions_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSessionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /alpha/ddms/v2/logs/{record_id}/sessions/{session_id}:
    get:
      tags:
      - DEPRECATED
      summary: get session.
      operationId: get_session_alpha_ddms_v2_logs__record_id__sessions__session_id__get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    patch:
      tags:
      - DEPRECATED
      summary: Update a session, either commit or abandon.
      operationId: complete_session_alpha_ddms_v2_logs__record_id__sessions__session_id__patch
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionState'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitSessionResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /alpha/ddms/v2/logs/{record_id}/data:
    get:
      tags:
      - DEPRECATED
      summary: Returns the data according to the specified query parameters.
      description: "Returns the data according to the specified query parameters.\
        \  \nMultiple media types response are available (\"application/json\", \"\
        application/x-parquet\").  \nThe desired format can be specify in the \"Accept\"\
        \ header, default is Parquet.  \nWhen bulk statistics are requested using\
        \ __describe__ query parameter, the response is always provided in JSON. \
        \ \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_alpha_ddms_v2_logs__record_id__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
    post:
      tags:
      - DEPRECATED
      summary: Writes data as a whole bulk, creates a new version.
      description: '

        Writes data to the associated record. It creates a new version.

        Payload is expected to contain the entire bulk which will replace as latest
        version

        any previous bulk. Previous bulk versions are accessible via the get bulk
        data version API.

        Support JSON and Parquet format (''Content_Type'' must be set accordingly).

        Support http chunked encoding transfer.

        <p>Required roles: ''users.datalake.editors'' or ''users.datalake.admins''.</p>'
      operationId: post_data_alpha_ddms_v2_logs__record_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /alpha/ddms/v2/logs/{record_id}/sessions/{session_id}/data:
    post:
      tags:
      - DEPRECATED
      summary: Send a data chunk. Session must be complete/commit once all chunks
        are sent.
      description: 'Send a data chunk. Session must be complete/commit once all chunks
        are sent. This will create a new and single version aggregating all and previous
        bulk.Support JSON and Parquet format (''Content_Type'' must be set accordingly).
        Support http chunked encoding.<p>Required roles: ''users.datalake.editors''
        or ''users.datalake.admins''.</p>'
      operationId: post_chunk_data_alpha_ddms_v2_logs__record_id__sessions__session_id__data_post
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Session Id
          type: string
          format: uuid
        name: session_id
        in: path
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeBasicDescribe'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '400':
          description: Record not found
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
      requestBody:
        description: "\nContains the data corresponding to the dataframe. The header\
          \ \"Content-Type\" must be set accordingly to the format sent:\n<br/>&nbsp;**Parquet**\
          \ format(*application/x-parquet*): see [Apache parquet website](https://parquet.apache.org/).\n\
          <br/>&nbsp;**JSON** format (*application/json*): see [Pandas.Dataframe JSON\
          \ format orient \"split\"](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html).\n\
          .\n Examples in JSON for data with 5 rows and 3 columns: \n<br/>`{\"columns\"\
          :[\"Ref\",\"col_1\",\"col_2\"],\"index\":[0,1,2,3,4],\"data\":[[0.0,1111.1,2222.1],[0.5,1111.2,2222.2],[1.0,1111.3,2222.3],[1.5,1111.4,2222.4],[2.0,1111.5,2222.5]]}`<br/>&nbsp;"
        required: true
        content:
          application/json:
            schema:
              example: "{\n  \"columns\":[\n    \"Ref\",\n    \"col_1\",\n    \"col_2\"\
                \n  ],\n  \"index\":[\n    0,\n    1,\n    2,\n    3,\n    4\n  ],\n\
                \  \"data\":[\n    [\n      0.0,\n      1111.1,\n      2222.1\n  \
                \  ],\n    [\n      0.5,\n      1111.2,\n      2222.2\n    ],\n  \
                \  [\n      1.0,\n      1111.3,\n      2222.3\n    ],\n    [\n   \
                \   1.5,\n      1111.4,\n      2222.4\n    ],\n    [\n      2.0,\n\
                \      1111.5,\n      2222.5\n    ]\n  ]\n}"
          application/x-parquet:
            schema:
              type: string
              format: binary
  /alpha/ddms/v2/logs/{record_id}/versions/{version}/data:
    get:
      tags:
      - DEPRECATED
      summary: Returns data of the specified version.
      description: "Returns the data of a specific version according to the specified\
        \ query parameters.  \nMultiple media types response are available (\"application/json\"\
        , \"application/x-parquet\").  \nThe desired format can be specify in the\
        \ \"Accept\" header, default is Parquet.  \nWhen bulk statistics are requested\
        \ using __describe__ query parameter, the response is always provided in JSON.\
        \  \nThe requested columns must not exceed 500. The query parameter __curves__\
        \ can be use to limit the number of columns.\n<p>Required roles: 'users.datalake.viewers'\
        \ or 'users.datalake.editors' or 'users.datalake.admins'.\n\"In addition,\
        \ users must be a member of data groups to access the data.</p>\n"
      operationId: get_data_version_alpha_ddms_v2_logs__record_id__versions__version__data_get
      parameters:
      - required: true
        schema:
          title: Record Id
          type: string
        name: record_id
        in: path
      - required: true
        schema:
          title: Version
          type: integer
        name: version
        in: path
      - description: The number of rows that are to be skipped and not included in
          the result.
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: The number of rows that are to be skipped and not included
            in the result.
        example: 5
        name: offset
        in: query
      - description: The maximum number of rows to be returned.
        required: false
        schema:
          title: Limit
          minimum: 1.0
          type: integer
          description: The maximum number of rows to be returned.
        example: 100
        name: limit
        in: query
      - description: Filters curves. List of curves to be returned. The curves are
          returned in the same order as it is given.
        required: false
        schema:
          title: Curves
          type: string
          description: Filters curves. List of curves to be returned. The curves are
            returned in the same order as it is given.
        example: MD,GR
        name: curves
        in: query
      - description: The "describe" query option allows clients to request a description
          of the matching result. (number of rows, columns name)
        required: false
        schema:
          title: Describe
          type: boolean
          description: The "describe" query option allows clients to request a description
            of the matching result. (number of rows, columns name)
          default: false
        example: 'false'
        name: describe
        in: query
      - description: '

          The "filter" query parameter allows clients to filter data following the
          pattern `$column_name:$operator:$value`.

          If the column name contains '':'', enclose it in double quotation marks
          (").

          <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        required: false
        schema:
          title: Filter
          pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
          type: array
          items:
            pattern: ^(".+"|[^:]+):(lt|lte|gt|gte|eq|neq|in):.*$
            type: string
          description: '

            The "filter" query parameter allows clients to filter data following the
            pattern `$column_name:$operator:$value`.

            If the column name contains '':'', enclose it in double quotation marks
            (").

            <br/>The supported operators are : lt, lte, gt, gte, eq, neq, in'
        example: MD:lt:1000
        name: filter
        in: query
      - description: format for JSON only.
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JSONOrient'
          description: format for JSON only.
          default: split
        name: orient
        in: query
      - description: identifier of the data partition to query
        required: false
        schema:
          title: data partition id
          minLength: 1
          type: string
          description: identifier of the data partition to query
        name: data-partition-id
        in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            application/x-parquet: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
        '404':
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
      - HTTPBearer: []
  /metrics:
    get:
      summary: Metrics
      description: Endpoint that serves Prometheus metrics.
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    AboutResponse:
      title: AboutResponse
      type: object
      properties:
        service:
          title: Service
          type: string
        version:
          title: Version
          type: string
        buildNumber:
          title: Buildnumber
          type: string
        cloudEnvironment:
          title: Cloudenvironment
          type: string
    AbstractAccessControlList100:
      title: AbstractAccessControlList100
      required:
      - owners
      - viewers
      type: object
      properties:
        owners:
          title: List of Owners
          type: array
          items:
            $ref: '#/components/schemas/Owner'
          description: The list of owners of this data record formatted as an email
            (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
        viewers:
          title: List of Viewers
          type: array
          items:
            $ref: '#/components/schemas/Viewer'
          description: The list of viewers to which this data record is accessible/visible/discoverable
            formatted as an email (core.common.model.storage.validation.ValidationDoc.EMAIL_REGEX).
      additionalProperties: false
      description: The access control tags associated with this entity.
    AbstractAliasNames100:
      title: AbstractAliasNames100
      type: object
      properties:
        AliasName:
          title: Aliasname
          type: string
          description: Alternative Name value of defined name type for an object.
        AliasNameTypeID:
          title: Aliasnametypeid
          pattern: ^[\w\-\.]+:reference-data\-\-AliasNameType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A classification of alias names such as by role played or type
            of source, such as regulatory name, regulatory code, company code, international
            standard name, etc.
        DefinitionOrganisationID:
          title: Definitionorganisationid
          pattern: ^[\w\-\.]+:(reference-data\-\-StandardsOrganisation|master-data\-\-Organisation):[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The StandardsOrganisation (reference-data) or Organisation
            (master-data) that provided the name (the source).
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time when an alias name becomes effective.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The data and time when an alias name is no longer in effect.
          format: date-time
      additionalProperties: false
      description: A list of alternative names for an object.  The preferred name
        is in a separate, scalar property.  It may or may not be repeated in the alias
        list, though a best practice is to include it if the list is present, but
        to omit the list if there are no other names.  Note that the abstract entity
        is an array so the $ref to it is a simple property reference.
    AbstractAnyCrsFeatureCollection100:
      title: AbstractAnyCrsFeatureCollection100
      required:
      - type
      - persistableReferenceCrs
      - features
      type: object
      properties:
        type:
          $ref: '#/components/schemas/app__model__osdu_model__Type'
        CoordinateReferenceSystemID:
          title: Coordinate Reference System ID
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The CRS reference into the CoordinateReferenceSystem catalog.
          example: 'namespace:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
        VerticalCoordinateReferenceSystemID:
          title: Vertical Coordinate Reference System ID
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The explicit VerticalCRS reference into the CoordinateReferenceSystem
            catalog. This property stays empty for 2D geometries. Absent or empty
            values for 3D geometries mean the context may be provided by a CompoundCRS
            in 'CoordinateReferenceSystemID' or implicitly EPSG:5714 MSL height
          example: 'namespace:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
        persistableReferenceCrs:
          title: CRS Reference
          type: string
          description: The CRS reference as persistableReference string. If populated,
            the CoordinateReferenceSystemID takes precedence.
          example: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
            * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
        persistableReferenceVerticalCrs:
          title: Vertical CRS Reference
          type: string
          description: The VerticalCRS reference as persistableReference string. If
            populated, the VerticalCoordinateReferenceSystemID takes precedence. The
            property is null or empty for 2D geometries. For 3D geometries and absent
            or null persistableReferenceVerticalCrs the vertical CRS is either provided
            via persistableReferenceCrs's CompoundCRS or it is implicitly defined
            as EPSG:5714 MSL height.
          example: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
        persistableReferenceUnitZ:
          title: Z-Unit Reference
          type: string
          description: The unit of measure for the Z-axis (only for 3-dimensional
            coordinates, where the CRS does not describe the vertical unit). Note
            that the direction is upwards positive, i.e. Z means height.
          example: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
        features:
          title: Features
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The original or 'as ingested' coordinates (Point, MultiPoint, LineString,
        MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates'
        was chosen to contrast it to 'OriginalCoordinates', which carries the uncertainty
        whether any coordinate operations took place before ingestion. In cases where
        the original CRS is different from the as-ingested CRS, the AppliedOperations
        can also contain the list of operations applied to the coordinate prior to
        ingestion. The data structure is similar to GeoJSON FeatureCollection, however
        in a CRS context explicitly defined within the AbstractAnyCrsFeatureCollection.
        The coordinate sequence follows GeoJSON standard, i.e. 'eastward/longitude',
        'northward/latitude' {, 'upward/height' unless overridden by an explicit direction
        in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
    AbstractAnyCrsFeatureCollection110:
      title: AbstractAnyCrsFeatureCollection110
      required:
      - type
      - persistableReferenceCrs
      - features
      type: object
      properties:
        type:
          $ref: '#/components/schemas/app__model__osdu_model__Type'
        CoordinateReferenceSystemID:
          title: Coordinate Reference System ID
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The CRS reference into the CoordinateReferenceSystem catalog.
          example: 'namespace:reference-data--CoordinateReferenceSystem:BoundProjected:EPSG::32021_EPSG::15851:'
        VerticalCoordinateReferenceSystemID:
          title: Vertical Coordinate Reference System ID
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The explicit VerticalCRS reference into the CoordinateReferenceSystem
            catalog. This property stays empty for 2D geometries. Absent or empty
            values for 3D geometries mean the context may be provided by a CompoundCRS
            in 'CoordinateReferenceSystemID' or implicitly EPSG:5714 MSL height
          example: 'namespace:reference-data--CoordinateReferenceSystem:Vertical:EPSG::5714:'
        VerticalUnitID:
          title: Vertical Unit ID
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The explicit vertical unit ID, referring to a reference-data--UnitOfMeasure
            record; this is only required for features containing 3-dimensional coordinates
            and undefined vertical CoordinateReferenceSystems; if a VerticalCoordinateReferenceSystemID
            is populated, the VerticalUnitID is given by the VerticalCoordinateReferenceSystemID's
            data.CoordinateSystem.VerticalAxisUnitID. The VerticalUnitID definition
            overrides any self-contained definition in persistableReferenceUnitZ.
          example: 'namespace:reference-data--UnitOfMeasure:m:'
        persistableReferenceCrs:
          title: CRS Reference
          type: string
          description: The CRS reference as persistableReference string. If populated,
            the CoordinateReferenceSystemID takes precedence.
          example: '{"authCode":{"auth":"OSDU","code":"32021079"},"lateBoundCRS":{"authCode":{"auth":"EPSG","code":"32021"},"name":"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302","type":"LBC","ver":"PE_10_9_1","wkt":"PROJCS[\"NAD_1927_StatePlane_North_Dakota_South_FIPS_3302\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic\"],PARAMETER[\"False_Easting\",2000000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-100.5],PARAMETER[\"Standard_Parallel_1\",46.18333333333333],PARAMETER[\"Standard_Parallel_2\",47.48333333333333],PARAMETER[\"Latitude_Of_Origin\",45.66666666666666],UNIT[\"Foot_US\",0.3048006096012192],AUTHORITY[\"EPSG\",32021]]"},"name":"NAD27
            * OGP-Usa Conus / North Dakota CS27 South zone [32021,15851]","singleCT":{"authCode":{"auth":"EPSG","code":"15851"},"name":"NAD_1927_To_WGS_1984_79_CONUS","type":"ST","ver":"PE_10_9_1","wkt":"GEOGTRAN[\"NAD_1927_To_WGS_1984_79_CONUS\",GEOGCS[\"GCS_North_American_1927\",DATUM[\"D_North_American_1927\",SPHEROID[\"Clarke_1866\",6378206.4,294.9786982]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"NADCON\"],PARAMETER[\"Dataset_conus\",0.0],OPERATIONACCURACY[5.0],AUTHORITY[\"EPSG\",15851]]"},"type":"EBC","ver":"PE_10_9_1"}'
        persistableReferenceVerticalCrs:
          title: Vertical CRS Reference
          type: string
          description: The VerticalCRS reference as persistableReference string. If
            populated, the VerticalCoordinateReferenceSystemID takes precedence. The
            property is null or empty for 2D geometries. For 3D geometries and absent
            or null persistableReferenceVerticalCrs the vertical CRS is either provided
            via persistableReferenceCrs's CompoundCRS or it is implicitly defined
            as EPSG:5714 MSL height.
          example: '{"authCode":{"auth":"EPSG","code":"5714"},"name":"MSL_Height","type":"LBC","ver":"PE_10_9_1","wkt":"VERTCS[\"MSL_Height\",VDATUM[\"Mean_Sea_Level\"],PARAMETER[\"Vertical_Shift\",0.0],PARAMETER[\"Direction\",1.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",5714]]"}'
        persistableReferenceUnitZ:
          title: Z-Unit Reference
          type: string
          description: The unit of measure for the Z-axis (only for 3-dimensional
            coordinates, where the CRS does not describe the vertical unit). Note
            that the direction is upwards positive, i.e. Z means height.
          example: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
        features:
          title: Features
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The original or 'as ingested' coordinates (Point, MultiPoint, LineString,
        MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates'
        was chosen to contrast it to 'OriginalCoordinates', which carries the uncertainty
        whether any coordinate operations took place before ingestion. In cases where
        the original CRS is different from the as-ingested CRS, the AppliedOperations
        can also contain the list of operations applied to the coordinate prior to
        ingestion. The data structure is similar to GeoJSON FeatureCollection, however
        in a CRS context explicitly defined within the AbstractAnyCrsFeatureCollection.
        The coordinate sequence follows GeoJSON standard, i.e. 'eastward/longitude',
        'northward/latitude' {, 'upward/height' unless overridden by an explicit direction
        in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
    AbstractContact100:
      title: AbstractContact100
      type: object
      properties:
        EmailAddress:
          title: Email Address
          type: string
          description: Contact email address. Property may be left empty where it
            is inappropriate to provide personally identifiable information.
          example: support@company.com
        PhoneNumber:
          title: Phone Number
          type: string
          description: Contact phone number. Property may be left empty where it is
            inappropriate to provide personally identifiable information.
          example: 1-555-281-5555
        RoleTypeID:
          title: Role Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-ContactRoleType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The identifier of a reference value for the role of the contact
            within the associated organisation, such as Account owner, Sales Representative,
            Technical Support, Project Manager, Party Chief, Client Representative,
            Senior Observer.
        Comment:
          title: Comment
          type: string
          description: Additional information about the contact
        OrganisationID:
          title: Organisation ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Reference to the company the contact is associated with.
        Name:
          title: Name
          type: string
          description: Name of the individual contact. Property may be left empty
            where it is inappropriate to provide personally identifiable information.
      additionalProperties: false
      description: An object with properties that describe a specific person or other
        point-of-contact (like an email distribution list) that is relevant in this
        context (like a given data set or business project). The contact specified
        may be either internal or external to the organisation (something denoted
        via the Organisation object that is referenced). Note that some properties
        contain personally identifiable information, so it might not be appropriate
        to populate all properties in all scenarios.
    AbstractFacilityEvent100:
      title: AbstractFacilityEvent100
      type: object
      properties:
        FacilityEventTypeID:
          title: Facilityeventtypeid
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityEventType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'The facility event type is a picklist. Examples: ''Permit'',
            ''Spud'', ''Abandon'', etc.'
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which the event took place or takes effect.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which the event is no longer in effect.
            For point-in-time events the 'TerminationDateTime' must be set equal to
            'EffectiveDateTime'. Open time intervals have an absent 'TerminationDateTime'.
          format: date-time
      additionalProperties: false
      description: A significant occurrence in the life of a facility, which often
        changes its state, or the state of one of its components. It can describe
        a point-in-time (event) or a time interval of a specific type (FacilityEventType).
    AbstractFacilityOperator100:
      title: AbstractFacilityOperator100
      type: object
      properties:
        FacilityOperatorID:
          title: Facility Operator ID
          type: string
          description: Internal, unique identifier for an item 'AbstractFacilityOperator'.
            This identifier is used by 'AbstractFacility.CurrentOperatorID' and 'AbstractFacility.InitialOperatorID'.
        FacilityOperatorOrganisationID:
          title: Facilityoperatororganisationid
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The company that currently operates, or previously operated
            the facility
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which the facility operator becomes effective.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which the facility operator is no longer
            in effect. If the operator is still effective, the 'TerminationDateTime'
            is left absent.
          format: date-time
      additionalProperties: false
      description: The organisation that was responsible for a facility at some point
        in time.
    AbstractFacilitySpecification100:
      title: AbstractFacilitySpecification100
      type: object
      properties:
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which the facility specification instance
            becomes effective.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which the facility specification instance
            is no longer in effect.
          format: date-time
        FacilitySpecificationQuantity:
          title: Facilityspecificationquantity
          type: number
          description: The value for the specified parameter type.
        FacilitySpecificationDateTime:
          title: Facilityspecificationdatetime
          type: string
          description: The actual date and time value of the parameter.
          format: date-time
        FacilitySpecificationIndicator:
          title: Facilityspecificationindicator
          type: boolean
          description: The actual indicator value of the parameter.
        FacilitySpecificationText:
          title: Facilityspecificationtext
          type: string
          description: The actual text value of the parameter.
        UnitOfMeasureID:
          title: Unitofmeasureid
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The unit for the quantity parameter, like metre (m in SI units
            system) for quantity Length.
        ParameterTypeID:
          title: Parametertypeid
          pattern: ^[\w\-\.]+:reference-data\-\-ParameterType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Parameter type of property or characteristic.
      additionalProperties: false
      description: A property, characteristic, or attribute about a facility that
        is not described explicitly elsewhere.
    AbstractFacilityState100:
      title: AbstractFacilityState100
      type: object
      properties:
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which the facility state becomes effective.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which the facility state is no longer
            in effect.
          format: date-time
        FacilityStateTypeID:
          title: Facilitystatetypeid
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityStateType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Life Cycle [Facility State Type] is a set of major phases that
            are significant to regulators and/or business stakeholders. Life Cycle
            may apply to a well or its components [or other facility].
      additionalProperties: false
      description: The life cycle status of a facility at some point in time.
    AbstractFacilityVerticalMeasurement100:
      title: AbstractFacilityVerticalMeasurement100
      type: object
      properties:
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which a vertical measurement instance
            becomes effective.
          format: date-time
        VerticalMeasurement:
          title: Verticalmeasurement
          type: number
          description: The value of the elevation or depth. Depth is positive downwards
            from a vertical reference or geodetic datum along a path, which can be
            vertical; elevation is positive upwards from a geodetic datum along a
            vertical path. Either can be negative.
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which a vertical measurement instance
            is no longer in effect.
          format: date-time
        VerticalMeasurementTypeID:
          title: Verticalmeasurementtypeid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies the type of vertical measurement (TD, Plugback, Kickoff,
            Drill Floor, Rotary Table...).
        VerticalMeasurementPathID:
          title: Verticalmeasurementpathid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementPath:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Measured Depth, True Vertical Depth, or Elevation.
        VerticalMeasurementSourceID:
          title: Verticalmeasurementsourceid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementSource:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Driller vs Logger.
        WellboreTVDTrajectoryID:
          title: Wellboretvdtrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies what directional survey or wellpath was used to calculate
            the TVD.
        VerticalMeasurementUnitOfMeasureID:
          title: Verticalmeasurementunitofmeasureid
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The unit of measure for the vertical measurement. If a unit
            of measure and a vertical CRS are provided, the unit of measure provided
            is taken over the unit of measure from the CRS.
        VerticalCRSID:
          title: Verticalcrsid
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A vertical coordinate reference system defines the origin for
            height or depth values. It is expected that either VerticalCRSID or VerticalReferenceID
            reference is provided in a given vertical measurement array object, but
            not both.
        VerticalReferenceID:
          title: Verticalreferenceid
          type: string
          description: The reference point from which the relative vertical measurement
            is made. This is only populated if the measurement has no VerticalCRSID
            specified. The value entered must match the VerticalMeasurementID for
            another vertical measurement array element in Wellbore or Well or in a
            related parent facility. The relationship should be  declared explicitly
            in VerticalReferenceEntityID. Any chain of measurements must ultimately
            resolve to a Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID
            is provided in a given vertical measurement array object, but not both.
        VerticalReferenceEntityID:
          title: Verticalreferenceentityid
          pattern: ^[\w\-\.]+:(master-data\-\-Wellbore|master-data\-\-Well|master-data\-\-Rig):[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: This relationship identifies the entity (aka record) in which
            the VerticalReferenceID is found; It could be a different OSDU entity
            or a self-reference. For example, a Wellbore VerticalMeasurement may reference
            a member of a VerticalMeasurements[] array in its parent Well record.
            Alternatively, VerticalReferenceEntityID may be populated with the ID
            of its own Wellbore record to make explicit that VerticalReferenceID is
            intended to be found in this record, not another.
        VerticalMeasurementDescription:
          title: Verticalmeasurementdescription
          type: string
          description: Text which describes a vertical measurement in detail.
      additionalProperties: false
      description: A location along a wellbore, _usually_ associated with some aspect
        of the drilling of the wellbore, but not with any intersecting _subsurface_
        natural surfaces.
    AbstractFeatureCollection100:
      title: AbstractFeatureCollection100
      required:
      - type
      - features
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type9'
        features:
          title: Features
          type: array
          items:
            $ref: '#/components/schemas/Feature1'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The normalized coordinates (Point, MultiPoint, LineString, MultiLineString,
        Polygon or MultiPolygon) based on WGS 84 (EPSG:4326 for 2-dimensional coordinates,
        EPSG:4326 + EPSG:5714 (MSL) for 3-dimensional coordinates). This derived coordinate
        representation is intended for global discoverability only. The schema of
        this substructure is identical to the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json.
        The coordinate sequence follows GeoJSON standard, i.e. longitude, latitude
        {, height}
    AbstractGeoContext100:
      title: AbstractGeoContext100
      additionalProperties: false
      description: A geographic context to an entity. It can be either a reference
        to a GeoPoliticalEntity, Basin, Field, Play or Prospect.
    AbstractLegalParentList100:
      title: AbstractLegalParentList100
      type: object
      properties:
        parents:
          title: Parents
          type: array
          items:
            $ref: '#/components/schemas/Parent'
          description: An array of none, one or many entity references of 'direct
            parents' in the data platform, which mark the current record as a derivative.
            In contrast to other relationships, the source record version is required.
            During record creation or update the ancestry.parents[] relationships
            are used to collect the legal tags from the sources and aggregate them
            in the legal.legaltags[] array. As a consequence, should e.g., one or
            more of the legal tags of the source data expire, the access to the derivatives
            is also terminated. For details, see ComplianceService tutorial, 'Creating
            derivative Records'.
          example: []
      additionalProperties: false
      description: The links to data, which constitute the inputs, from which this
        record instance is derived.
    AbstractLegalTags100:
      title: AbstractLegalTags100
      required:
      - legaltags
      - otherRelevantDataCountries
      type: object
      properties:
        legaltags:
          title: Legal Tags
          type: array
          items:
            type: string
          description: The list of legal tags, which resolve to legal properties (like
            country of origin, export classification code, etc.) and rules with the
            help of the Compliance Service.
        otherRelevantDataCountries:
          title: Other Relevant Data Countries
          type: array
          items:
            $ref: '#/components/schemas/OtherRelevantDataCountry'
          description: The list of other relevant data countries as an array of two-letter
            country codes, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
        status:
          title: Legal Status
          pattern: ^(compliant|uncompliant)$
          type: string
          description: The legal status. Set by the system after evaluation against
            the compliance rules associated with the "legaltags" using the Compliance
            Service.
      additionalProperties: false
      description: The entity's legal tags and compliance status. The actual contents
        associated with the legal tags is managed by the Compliance Service.
    AbstractSpatialLocation100:
      title: AbstractSpatialLocation100
      type: object
      properties:
        SpatialLocationCoordinatesDate:
          title: Spatiallocationcoordinatesdate
          type: string
          description: Date when coordinates were measured or retrieved.
          format: date-time
        QuantitativeAccuracyBandID:
          title: Quantitativeaccuracybandid
          pattern: ^[\w\-\.]+:reference-data\-\-QuantitativeAccuracyBand:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: An approximate quantitative assessment of the quality of a
            location (accurate to > 500 m (i.e. not very accurate)), to < 1 m, etc.
        QualitativeSpatialAccuracyTypeID:
          title: Qualitativespatialaccuracytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-QualitativeSpatialAccuracyType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A qualitative description of the quality of a spatial location,
            e.g. unverifiable, not verified, basic validation.
        CoordinateQualityCheckPerformedBy:
          title: Coordinatequalitycheckperformedby
          type: string
          description: The user who performed the Quality Check.
        CoordinateQualityCheckDateTime:
          title: Coordinatequalitycheckdatetime
          type: string
          description: The date of the Quality Check.
          format: date-time
        CoordinateQualityCheckRemarks:
          title: Coordinatequalitycheckremarks
          type: array
          items:
            type: string
          description: Freetext remarks on Quality Check.
        AsIngestedCoordinates:
          title: As Ingested Coordinates
          allOf:
          - $ref: '#/components/schemas/AbstractAnyCrsFeatureCollection100'
          description: The original or 'as ingested' coordinates (Point, MultiPoint,
            LineString, MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates'
            was chosen to contrast it to 'OriginalCoordinates', which carries the
            uncertainty whether any coordinate operations took place before ingestion.
            In cases where the original CRS is different from the as-ingested CRS,
            the AppliedOperations can also contain the list of operations applied
            to the coordinate prior to ingestion. The data structure is similar to
            GeoJSON FeatureCollection, however in a CRS context explicitly defined
            within the AbstractAnyCrsFeatureCollection. The coordinate sequence follows
            GeoJSON standard, i.e. 'eastward/longitude', 'northward/latitude' {, 'upward/height'
            unless overridden by an explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
        Wgs84Coordinates:
          title: WGS 84 Coordinates
          allOf:
          - $ref: '#/components/schemas/AbstractFeatureCollection100'
          description: The normalized coordinates (Point, MultiPoint, LineString,
            MultiLineString, Polygon or MultiPolygon) based on WGS 84 (EPSG:4326 for
            2-dimensional coordinates, EPSG:4326 + EPSG:5714 (MSL) for 3-dimensional
            coordinates). This derived coordinate representation is intended for global
            discoverability only. The schema of this substructure is identical to
            the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json.
            The coordinate sequence follows GeoJSON standard, i.e. longitude, latitude
            {, height}
        AppliedOperations:
          title: Operations Applied
          type: array
          items:
            type: string
          description: The audit trail of operations applied to the coordinates from
            the original state to the current state. The list may contain operations
            applied prior to ingestion as well as the operations applied to produce
            the Wgs84Coordinates. The text elements refer to ESRI style CRS and Transformation
            names, which may have to be translated to EPSG standard names.
          example:
          - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points converted
          - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
            1 points successfully transformed
        SpatialParameterTypeID:
          title: Spatialparametertypeid
          pattern: ^[\w\-\.]+:reference-data\-\-SpatialParameterType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A type of spatial representation of an object, often general
            (e.g. an Outline, which could be applied to Field, Reservoir, Facility,
            etc.) or sometimes specific (e.g. Onshore Outline, State Offshore Outline,
            Federal Offshore Outline, 3 spatial representations that may be used by
            Countries).
        SpatialGeometryTypeID:
          title: Spatialgeometrytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-SpatialGeometryType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Indicates the expected look of the SpatialParameterType, e.g.
            Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon.
            The value constrains the type of geometries in the GeoJSON Wgs84Coordinates
            and AsIngestedCoordinates.
      additionalProperties: false
      description: A polygon boundary that reflects the locale of the content of the
        work product component (location of the subject matter).
    AbstractSpatialLocation110:
      title: AbstractSpatialLocation110
      type: object
      properties:
        SpatialLocationCoordinatesDate:
          title: Spatiallocationcoordinatesdate
          type: string
          description: Date when coordinates were measured or retrieved.
          format: date-time
        QuantitativeAccuracyBandID:
          title: Quantitativeaccuracybandid
          pattern: ^[\w\-\.]+:reference-data\-\-QuantitativeAccuracyBand:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: An approximate quantitative assessment of the quality of a
            location (accurate to > 500 m (i.e. not very accurate)), to < 1 m, etc.
        QualitativeSpatialAccuracyTypeID:
          title: Qualitativespatialaccuracytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-QualitativeSpatialAccuracyType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A qualitative description of the quality of a spatial location,
            e.g. unverifiable, not verified, basic validation.
        CoordinateQualityCheckPerformedBy:
          title: Coordinatequalitycheckperformedby
          type: string
          description: The user who performed the Quality Check.
        CoordinateQualityCheckDateTime:
          title: Coordinatequalitycheckdatetime
          type: string
          description: The date of the Quality Check.
          format: date-time
        CoordinateQualityCheckRemarks:
          title: Coordinatequalitycheckremarks
          type: array
          items:
            type: string
          description: Freetext remarks on Quality Check.
        AsIngestedCoordinates:
          title: As Ingested Coordinates
          allOf:
          - $ref: '#/components/schemas/AbstractAnyCrsFeatureCollection110'
          description: The original or 'as ingested' coordinates (Point, MultiPoint,
            LineString, MultiLineString, Polygon or MultiPolygon). The name 'AsIngestedCoordinates'
            was chosen to contrast it to 'OriginalCoordinates', which carries the
            uncertainty whether any coordinate operations took place before ingestion.
            In cases where the original CRS is different from the as-ingested CRS,
            the AppliedOperations can also contain the list of operations applied
            to the coordinate prior to ingestion. The data structure is similar to
            GeoJSON FeatureCollection, however in a CRS context explicitly defined
            within the AbstractAnyCrsFeatureCollection. The coordinate sequence follows
            GeoJSON standard, i.e. 'eastward/longitude', 'northward/latitude' {, 'upward/height'
            unless overridden by an explicit direction in the AsIngestedCoordinates.VerticalCoordinateReferenceSystemID}.
        Wgs84Coordinates:
          title: WGS 84 Coordinates
          allOf:
          - $ref: '#/components/schemas/AbstractFeatureCollection100'
          description: The normalized coordinates (Point, MultiPoint, LineString,
            MultiLineString, Polygon or MultiPolygon) based on WGS 84 (EPSG:4326 for
            2-dimensional coordinates, EPSG:4326 + EPSG:5714 (MSL) for 3-dimensional
            coordinates). This derived coordinate representation is intended for global
            discoverability only. The schema of this substructure is identical to
            the GeoJSON FeatureCollection https://geojson.org/schema/FeatureCollection.json.
            The coordinate sequence follows GeoJSON standard, i.e. longitude, latitude
            {, height}
        AppliedOperations:
          title: Operations Applied
          type: array
          items:
            type: string
          description: The audit trail of operations applied to the coordinates from
            the original state to the current state. The list may contain operations
            applied prior to ingestion as well as the operations applied to produce
            the Wgs84Coordinates. The text elements refer to ESRI style CRS and Transformation
            names, which may have to be translated to EPSG standard names.
          example:
          - conversion from ED_1950_UTM_Zone_31N to GCS_European_1950; 1 points converted
          - transformation GCS_European_1950 to GCS_WGS_1984 using ED_1950_To_WGS_1984_24;
            1 points successfully transformed
        SpatialParameterTypeID:
          title: Spatialparametertypeid
          pattern: ^[\w\-\.]+:reference-data\-\-SpatialParameterType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A type of spatial representation of an object, often general
            (e.g. an Outline, which could be applied to Field, Reservoir, Facility,
            etc.) or sometimes specific (e.g. Onshore Outline, State Offshore Outline,
            Federal Offshore Outline, 3 spatial representations that may be used by
            Countries).
        SpatialGeometryTypeID:
          title: Spatialgeometrytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-SpatialGeometryType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Indicates the expected look of the SpatialParameterType, e.g.
            Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon.
            The value constrains the type of geometries in the GeoJSON Wgs84Coordinates
            and AsIngestedCoordinates.
      additionalProperties: false
      description: A polygon boundary that reflects the locale of the content of the
        work product component (location of the subject matter).
    AbstractTechnicalAssurance100:
      title: AbstractTechnicalAssurance100
      required:
      - TechnicalAssuranceTypeID
      type: object
      properties:
        TechnicalAssuranceTypeID:
          title: Technical Assurance Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'Describes a record''s overall suitability for general business
            consumption based on data quality. Clarifications: Since Certified is
            the highest classification of suitable quality, any further change or
            versioning of a Certified record should be carefully considered and justified.
            If a Technical Assurance value is not populated then one can assume the
            data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
          example: 'namespace:reference-data--TechnicalAssuranceType:Trusted:'
        Reviewers:
          title: Reviewers
          type: array
          items:
            $ref: '#/components/schemas/AbstractContact100'
          description: The individuals, or roles, that reviewed and determined the
            technical assurance value
          example:
          - RoleTypeID: 'namespace:reference-data--ContactRoleType:AccountOwner:'
            OrganisationID: 'namespace:master-data--Organisation:SomeUniqueOrganisationID:'
            Name: Example Name
        AcceptableUsage:
          title: Acceptable Usage
          type: array
          items:
            $ref: '#/components/schemas/AcceptableUsageItem'
          description: List of workflows and/or personas that the technical assurance
            value is valid for (e.g., This data is trusted for Seismic Processing)
          example:
          - WorkflowUsage: 'namespace:reference-data--WorkflowUsageType:SeismicProcessing:'
            WorkflowPersona: 'namespace:reference-data--WorkflowPersonaType:SeismicProcessor:'
        UnacceptableUsage:
          title: Unacceptable Usage
          type: array
          items:
            $ref: '#/components/schemas/UnacceptableUsageItem'
          description: List of workflows and/or personas that the technical assurance
            value is not valid for (e.g., This data is not trusted for seismic interpretation)
          example:
          - WorkflowUsage: 'namespace:reference-data--WorkflowUsageType:SeismicInterpretation:'
            WorkflowPersona: 'namespace:reference-data--WorkflowPersonaType:SeismicInterpreter:'
        EffectiveDate:
          title: Effective Date
          type: string
          description: Date when the technical assurance determination for this record
            has taken place
          format: date
          example: '2020-02-13'
        Comment:
          title: Comment
          type: string
          description: Any additional context to support the determination of technical
            assurance
          example: This is free form text from reviewer, e.g. restrictions on use
      description: Describes a record's overall suitability for general business consumption
        based on level of trust.
    AbstractWellboreDrillingReason100:
      title: AbstractWellboreDrillingReason100
      type: object
      properties:
        DrillingReasonTypeID:
          title: Drillingreasontypeid
          pattern: ^[\w\-\.]+:reference-data\-\-DrillingReasonType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Identifier of the drilling reason type for the corresponding
            time period.
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which the event becomes effective.
          format: date-time
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which the event is no longer in effect.
          format: date-time
      additionalProperties: false
      description: Purpose for drilling a wellbore, which often is an indication of
        the level of risk.
    AcceptableUsageItem:
      title: AcceptableUsageItem
      type: object
      properties:
        WorkflowUsage:
          title: Workflow Usage
          pattern: ^[\w\-\.]+:reference-data\-\-WorkflowUsageType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Name of the business activities, processes, and/or workflows
            that the record is technical assurance value is valid for.
          example: 'namespace:reference-data--WorkflowUsageType:SeismicProcessing:'
        WorkflowPersona:
          title: Workflow Persona
          pattern: ^[\w\-\.]+:reference-data\-\-WorkflowPersonaType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Name of the role or personas that the record is technical assurance
            value is valid for.
          example: 'namespace:reference-data--WorkflowPersonaType:SeismicProcessor:'
      additionalProperties: false
      description: Describes the workflows and/or personas that the technical assurance
        value is valid for (e.g., This data has a technical assurance property of
        "trusted" and it is suitable for Seismic Interpretation).
    Artefact:
      title: Artefact
      type: object
      properties:
        RoleID:
          title: Roleid
          pattern: ^[\w\-\.]+:reference-data\-\-ArtefactRole:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The SRN of this artefact's role.
        ResourceKind:
          title: Resourcekind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The kind or schema ID of the artefact. Resolvable with the
            Schema Service.
        ResourceID:
          title: Resourceid
          pattern: ^[\w\-\.]+:dataset\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The SRN which identifies this OSDU Artefact resource.
      additionalProperties: false
      description: An array of Artefacts - each artefact has a Role, Resource tuple.
        An artefact is distinct from the file, in the sense certain valuable information
        is generated during loading process (Artefact generation process). Examples
        include retrieving location data, performing an OCR which may result in the
        generation of artefacts which need to be preserved distinctly
    AvailableMarkerProperty:
      title: AvailableMarkerProperty
      type: object
      properties:
        MarkerPropertyTypeID:
          title: Marker Property Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-MarkerPropertyType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The reference to a marker property type - or if interpreted
            as CSV columns, the 'well-known column type. It is a relationship to a
            reference-data--MarkerPropertyType record id.
          example: 'partition-id:reference-data--MarkerPropertyType:MissingThickness:'
        MarkerPropertyUnitID:
          title: Marker Property Unit ID
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Unit of Measure for the marker properties of type MarkerPropertyType.
          example: 'partition-id:reference-data--UnitOfMeasure:ft:'
        Name:
          title: Name
          type: string
          description: The name of the marker property (e.g. column in a CSV document)
            as originally found. If absent The name of the MarkerPropertyType is intended
            to be used.
          example: MissingThickness
      additionalProperties: false
      description: A set of properties describing a marker property which is available
        for this instance of a WellboreMarkerSet.
    AvailableTrajectoryStationProperty:
      title: AvailableTrajectoryStationProperty
      type: object
      properties:
        TrajectoryStationPropertyTypeID:
          title: Trajectory Station Property Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-TrajectoryStationPropertyType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The reference to a trajectory station property type - of if
            interpreted as channels, the curve or channel name type, identifying e.g.
            MD, Inclination, Azimuth. This is a relationship to a reference-data--TrajectoryStationPropertyType
            record id.
          example: 'partition-id:reference-data--TrajectoryStationPropertyType:AzimuthTN:'
        StationPropertyUnitID:
          title: Station Property Unit ID
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Unit of Measure for the station properties of type TrajectoryStationPropertyType.
          example: 'partition-id:reference-data--UnitOfMeasure:dega:'
        Name:
          title: Name
          type: string
          description: The name of the curve (e.g. column in a CSV document) as originally
            found. If absent The name of the TrajectoryCurveType is intended to be
            used.
          example: AzimuthTN
      additionalProperties: false
      description: A set of properties describing a trajectory station property which
        is available for this instance of a WellboreTrajectory.
    Body_upload_log_data_file_ddms_v2_logs__logid__upload_data_post:
      title: Body_upload_log_data_file_ddms_v2_logs__logid__upload_data_post
      required:
      - file
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
    BulkDataStatisticsResponse:
      title: BulkDataStatisticsResponse
      required:
      - computationStartDatetime
      - recordId
      - recordVersion
      - computationStatus
      - data
      type: object
      properties:
        computationStartDatetime:
          title: Statistics computation start datetime in ISO format
          type: string
          format: date-time
        recordId:
          title: Recordid
          type: string
        recordVersion:
          title: Recordversion
          type: integer
        computationStatus:
          $ref: '#/components/schemas/BulkStatisticsStatus'
        data:
          title: Curves statistics' values
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CurveStatistics'
          example:
            CurveName:
              mean: '450.8438'
              std: '318.27778186518816'
              min: '-100.0'
              10%: '9.0'
              50%: '451.0'
              90%: '893.0'
              max: '999.0'
              totalCount: '100000'
              nonAbsentValuesCount: '100000.0'
      description: 'Response for bulk data statistics and its meta-data '
      example:
        computationStartDatetime: '2022-05-18T16:22:16.010582'
        recordId: osdu:work-product-component--WellLog:6d9c95c972254bbbaeaecbfa67fd1cf3
        recordVersion: '1998222529528913770053504387865218642'
        computationStatus: complete
        data:
          ARR[0]:
            mean: '450.8438'
            std: '318.27778186518816'
            min: '-100.0'
            10%: '9.0'
            50%: '451.0'
            90%: '893.0'
            max: '999.0'
            totalCount: '100000'
            nonAbsentValuesCount: '100000.0'
          ARR[1]:
            mean: '448.06855'
            std: '316.8023859891449'
            min: '-100.0'
            10%: '10.0'
            50%: '446.0'
            90%: '889.0'
            max: '999.0'
            totalCount: '100000'
            nonAbsentValuesCount: '100000.0'
          ARR[2]:
            mean: '451.01309'
            std: '317.40833668820653'
            min: '-100.0'
            10%: '11.0'
            50%: '453.0'
            90%: '890.0'
            max: '999.0'
            totalCount: '100000'
            nonAbsentValuesCount: '100000.0'
          ARR[3]:
            mean: '449.16661'
            std: '317.7767589547625'
            min: '-100.0'
            10%: '8.900000000001455'
            50%: '450.0'
            90%: '890.0'
            max: '999.0'
            totalCount: '100000'
            nonAbsentValuesCount: '100000.0'
    BulkStatisticsStatus:
      title: BulkStatisticsStatus
      enum:
      - error
      - started
      - running
      - complete
      type: string
      description: Status available for computation of bulk data statistics
    Catalog:
      title: Catalog
      required:
      - family_catalog
      type: object
      properties:
        family_catalog:
          title: Family Catalog
          type: array
          items:
            $ref: '#/components/schemas/CatalogItem'
        main_family_catalog:
          title: Main Family Catalog
          type: array
          items:
            $ref: '#/components/schemas/MainFamilyCatalogItem'
    CatalogItem:
      title: CatalogItem
      required:
      - unit
      - rule
      type: object
      properties:
        unit:
          title: Unit
          type: string
        family:
          title: Family
          type: string
          default: ''
        rule:
          title: Rule
          type: string
    CatalogRecord:
      title: CatalogRecord
      required:
      - acl
      - legal
      - data
      type: object
      properties:
        acl:
          $ref: '#/components/schemas/StorageAcl'
        legal:
          $ref: '#/components/schemas/odes_storage__models__Legal'
        data:
          $ref: '#/components/schemas/Catalog'
      example:
        acl:
          viewers:
          - abc@domain.com, cde@domain.com
          owners:
          - abc@domain.com, cde@domain.com
        legal:
          legaltags:
          - opendes-public-usa-dataset-1
          otherRelevantDataCountries:
          - US
        data:
          family_catalog:
          - unit: ohm.m
            family: Medium Resistivity
            rule: MEDR
          main_family_catalog:
          - MainFamily: Resistivity
            Family: Medium Resistivity
            Unit: OHMM
    CommitSessionResponse:
      title: CommitSessionResponse
      required:
      - id
      - recordId
      - fromVersion
      - mode
      - expiry
      - createdTime
      - updatedTime
      - state
      type: object
      properties:
        id:
          title: Id
          type: string
          description: identifier of the current session.
          format: uuid
        recordId:
          title: Recordid
          type: string
          description: identifier of the record of which the session is attached to.
        fromVersion:
          title: Fromversion
          type: integer
          description: record version on top of which the session is based.
        mode:
          allOf:
          - $ref: '#/components/schemas/SessionUpdateMode'
          description: merge mode at commit. If 'update', existing data will be merged
            with the data sent during the session. If 'overrride', existing data will
            be ignored, the final result will only contains data sent within the session.
        expiry:
          title: Expiry
          type: string
          description: If the session is not committed before this dead line, session
            is automatically abandoned.
          format: date-time
        createdTime:
          title: Createdtime
          type: string
          description: creation date
          format: date-time
        updatedTime:
          title: Updatedtime
          type: string
          description: updated date
          format: date-time
        state:
          $ref: '#/components/schemas/SessionState'
        meta:
          title: Meta
          type: object
          additionalProperties:
            type: string
          description: miscellaneous metadata associated to the session. The session
            creator can set some data here.
        version:
          title: Version Number
          type: integer
          description: Record version in case of successful commit
          example: 1562066009929332
      description: 'model of session exposed  '
      example:
        id: xx1234
        recordId: opendes:log:991234
        fromVersion: 25686567113
        mode: update
        createdTime: '2021-03-07T15:49:01+00:00'
        updatedTime: '2021-03-07T15:58:01+00:00'
        expiry: '2021-03-08T15:49:01+00:00'
        state: open
        meta:
          creatorCustom: someValue
        version: 123456789
    Coordinate:
      title: Coordinate
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate1:
      title: Coordinate1
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate2:
      title: Coordinate2
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate3:
      title: Coordinate3
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate4:
      title: Coordinate4
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate5:
      title: Coordinate5
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate6:
      title: Coordinate6
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate7:
      title: Coordinate7
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate8:
      title: Coordinate8
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Coordinate9:
      title: Coordinate9
      type: array
      items: {}
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    CreateDataSessionRequest:
      title: CreateDataSessionRequest
      required:
      - mode
      type: object
      properties:
        fromVersion:
          title: Fromversion
          type: integer
          description: specify the version on top of which update will be applied.
            By default use the latest one (0). Not relevant if overwrite is set to
            True.
          default: 0
        timeToLive:
          title: Timetolive
          type: integer
          description: optional - time to live in minutes.
          default: 1440
        mode:
          allOf:
          - $ref: '#/components/schemas/SessionUpdateMode'
          description: merge mode at commit. If 'update', existing data will be merged
            with the data sent during the session. If 'overwrite', existing data will
            be ignored, the final result will only contains data sent within the session.
        meta:
          title: Meta
          type: object
          additionalProperties:
            type: string
          description: dictionary all values, stored in the session
      description: "Note:\nif fromVersion is provided, should we:\n    force mode\
        \ to 'update'\n    raise an error if mode is overwrite"
    CreateUpdateRecordsResponse:
      title: CreateUpdateRecordsResponse
      type: object
      properties:
        recordCount:
          title: Recordcount
          type: integer
        recordIdVersions:
          title: Recordidversions
          type: array
          items:
            type: string
        recordIds:
          title: Recordids
          type: array
          items:
            type: string
        skippedRecordIds:
          title: Skippedrecordids
          type: array
          items:
            type: string
    CursorQueryResponse:
      title: CursorQueryResponse
      type: object
      properties:
        cursor:
          title: Cursor
          type: string
        results:
          title: Results
          type: array
          items:
            type: object
        totalCount:
          title: Totalcount
          type: integer
    Curve120:
      title: Curve120
      type: object
      properties:
        CurveID:
          title: Curveid
          type: string
          description: The ID of the Well Log Curve
        DateStamp:
          title: Datestamp
          type: string
          description: Date curve was created in the database
          format: date-time
        CurveVersion:
          title: Curveversion
          type: string
          description: The Version of the Log Curve.
        CurveQuality:
          title: Curvequality
          type: string
          description: The Quality of the Log Curve.
        InterpreterName:
          title: Interpretername
          type: string
          description: The name of person who interpreted this Log Curve.
        IsProcessed:
          title: Isprocessed
          type: boolean
          description: Indicates if the curve has been (pre)processed or if it is
            a raw recording
        NullValue:
          title: Nullvalue
          type: boolean
          description: Indicates that there is no measurement within the curve
        DepthCoding:
          title: Depthcoding
          pattern: ^REGULAR|DISCRETE$
          type: string
          description: 'DEPRECATED: Replaced by boolean data.IsRegular. The Coding
            of the depth.'
        Interpolate:
          title: Interpolate
          type: boolean
          description: Whether curve can be interpolated or not
        TopDepth:
          title: Topdepth
          type: number
          description: The curve's minimum 'depth', i.e., the reference value at which
            the curve has its first non-absent value. The curve may contain further
            absent values in between TopDepth and BaseDepth. Note that the SamplingDomainType
            may not be a depth as the property name indicates.
        BaseDepth:
          title: Basedepth
          type: number
          description: The curve's maximum 'depth' i.e., the reference value at which
            the curve has its last non-absent value. The curve may contain further
            absent values in between TopDepth and BaseDepth. Note that the SamplingDomainType
            may not be a depth as the property name indicates.
        DepthUnit:
          title: Depthunit
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Unit of Measure for TopDepth and BaseDepth.
        CurveUnit:
          title: Curveunit
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Unit of Measure for the Log Curve
        Mnemonic:
          title: Mnemonic
          type: string
          description: The Mnemonic of the Log Curve is the value as received either
            from Raw Providers or from Internal Processing team
          example: PRES_HDRB.BAR
        LogCurveTypeID:
          title: Logcurvetypeid
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The related record id of the Log Curve Type - which is the
            standard mnemonic chosen by the company - OSDU provides an initial list
        LogCurveBusinessValueID:
          title: Logcurvebusinessvalueid
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveBusinessValue:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The related record id of the Log Curve Business Value Type.
        LogCurveMainFamilyID:
          title: Logcurvemainfamilyid
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveMainFamily:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The related record id of the Log Curve Main Family Type - which
            is the Geological Physical Quantity measured - such as porosity.
        LogCurveFamilyID:
          title: Logcurvefamilyid
          pattern: ^[\w\-\.]+:reference-data\-\-LogCurveFamily:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The related record id of the Log Curve Family - which is the
            detailed Geological Physical Quantity Measured - such as neutron porosity
        NumberOfColumns:
          title: Number Of Columns
          type: integer
          description: The number of columns present in this Curve for a single reference
            value. For simple logs this is typically 1; for image logs this holds
            the number of image traces or property series. Further information about
            the columns can be obtained via the respective log or curve APIs of the
            Domain Data Management Service.
          example: 192
        CurveSampleTypeID:
          title: Curve Sample Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-CurveSampleType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The value type to be expected as curve sample values.
          example: 'namespace:reference-data--CurveSampleType:float:'
        CurveDescription:
          title: Curve Description
          type: string
          description: Mnemonic-level curve description is used during parsing or
            reading and ingesting LAS or DLIS files, to explain the type of measurement
            being looked at, specifically for that moment. Curve description is specific
            to that single (log) mnemonic and for the entire log (acquisition run)
            interval. In essence, curve description defines the internal factors such
            as what the "curve" or measurement ideally is representing, how is it
            calculated, what are the assumptions and the "constants".
          example: CBL Adjustment Factor, Resistivity Inversion Selection, Detector
            1 Barite Constant
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    CurveStatistics:
      title: CurveStatistics
      required:
      - mean
      - std
      - min
      - 10%
      - 50%
      - 90%
      - max
      - totalCount
      - nonAbsentValuesCount
      type: object
      properties:
        mean:
          title: Mean value
          type: string
        std:
          title: Standard deviation value
          type: string
        min:
          title: Maximum value
          type: string
        10%:
          title: 10th percentiles
          type: string
        50%:
          title: 50th percentiles
          type: string
        90%:
          title: 50th percentiles
          type: string
        max:
          title: Minimum value
          type: string
        totalCount:
          title: Number of values in the curve
          type: string
        nonAbsentValuesCount:
          title: Number of valid values in the curve
          type: string
    DataType:
      title: DataType
      enum:
      - string
      - number
      - integer
      - boolean
      description: An enumeration.
    DataType_1:
      title: DataType_1
      enum:
      - string
      - number
      - integer
      - boolean
      description: An enumeration.
    DataType_2:
      title: DataType_2
      enum:
      - string
      - number
      - integer
      - boolean
      - date-time
      description: An enumeration.
    DataframeBasicDescribe:
      title: DataframeBasicDescribe
      required:
      - rowCount
      - columnCount
      - columns
      - indexStart
      - indexEnd
      - indexType
      type: object
      properties:
        rowCount:
          title: Rowcount
          type: integer
        columnCount:
          title: Columncount
          type: integer
        columns:
          title: Columns
          type: array
          items:
            type: string
          description: list of column. May be truncated if too many columns, then
            contains the firsts and lasts once
        indexStart:
          title: Indexstart
          type: string
        indexEnd:
          title: Indexend
          type: string
        indexType:
          title: Indextype
          type: string
    Dataset:
      title: Dataset
      pattern: ^[\w\-\.]+:dataset\-\-[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
      type: string
      additionalProperties: false
      description: The SRN which identifies this OSDU File resource.
    Dip:
      title: Dip
      required:
      - reference
      - azimuth
      - inclination
      type: object
      properties:
        reference:
          title: Reference of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only Measured Depth in meter is supported for the moment
        azimuth:
          title: Azimuth value of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only degrees unit is supported for the moment
        inclination:
          title: Inclination value of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only degrees unit is supported for the moment
        quality:
          title: Quality of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Decimal number between 0 and 1
        xCoordinate:
          title: The X coordinate of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
        yCoordinate:
          title: The Y coordinate of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
        zCoordinate:
          title: The Z coordinate of the dip
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Only meter unit is supported for the moment
        classification:
          title: Classification of the dip
          type: string
          description: Any string is accepted.
      example:
        reference:
          unitKey: meter
          value: 1000.5
        azimuth:
          unitKey: dega
          value: 42
        inclination:
          unitKey: dega
          value: 9
        quality:
          unitKey: unitless
          value: 0.5
        xCoordinate:
          unitKey: meter
          value: 2
        yCoordinate:
          unitKey: meter
          value: 45
        zCoordinate:
          unitKey: meter
          value: 7
        classification: fracture
    DirectionWell:
      title: DirectionWell
      enum:
      - huff-n-puff
      - injector
      - producer
      - uncertain
      - unknown
      description: An enumeration.
    Feature:
      title: Feature
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type1'
        properties:
          title: Properties
          type: object
        geometry:
          title: Geometry
          anyOf:
          - $ref: '#/components/schemas/GeometryItem'
          - $ref: '#/components/schemas/GeometryItem1'
          - $ref: '#/components/schemas/GeometryItem2'
          - $ref: '#/components/schemas/GeometryItem3'
          - $ref: '#/components/schemas/GeometryItem4'
          - $ref: '#/components/schemas/GeometryItem5'
          - $ref: '#/components/schemas/GeometryItem6'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Feature1:
      title: Feature1
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type10'
        properties:
          title: Properties
          type: object
        geometry:
          title: Geometry
          anyOf:
          - $ref: '#/components/schemas/GeometryItem7'
          - $ref: '#/components/schemas/GeometryItem8'
          - $ref: '#/components/schemas/GeometryItem9'
          - $ref: '#/components/schemas/GeometryItem10'
          - $ref: '#/components/schemas/GeometryItem11'
          - $ref: '#/components/schemas/GeometryItem12'
          - $ref: '#/components/schemas/GeometryItem13'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    FluidWell:
      title: FluidWell
      enum:
      - air
      - condensate
      - dry
      - gas
      - gas-water
      - non HC gas
      - non HC gas -- CO2
      - oil
      - oil-gas
      - oil-water
      - steam
      - water
      - water -- brine
      - water -- fresh water
      - unknown
      description: An enumeration.
    Format:
      title: Format
      enum:
      - date
      - date-time
      - time
      - byte
      - binary
      - boolean
      - email
      - uuid
      - uri
      - int8
      - int16
      - int32
      - int64
      - float32
      - float64
      - float128
      description: An enumeration.
    Format_1:
      title: Format_1
      enum:
      - date
      - date-time
      - time
      - byte
      - binary
      - boolean
      - email
      - uuid
      - uri
      - int8
      - int16
      - int32
      - int64
      - float32
      - float64
      - float128
      description: An enumeration.
    Format_2:
      title: Format_2
      enum:
      - date
      - date-time
      - time
      - byte
      - binary
      - email
      - uuid
      - uri
      - int8
      - int16
      - int32
      - int64
      - float32
      - float64
      - float128
      description: An enumeration.
    GeoJsonFeature:
      title: GeoJsonFeature
      required:
      - geometry
      - properties
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        geometry:
          title: Geometry
          anyOf:
          - $ref: '#/components/schemas/GeoJsonPoint'
          - $ref: '#/components/schemas/GeoJsonMultiPoint'
          - $ref: '#/components/schemas/GeoJsonLineString'
          - $ref: '#/components/schemas/GeoJsonMultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/GeoJsonMultiPolygon'
          - $ref: '#/components/schemas/geometryItem14'
        properties:
          title: Properties
          type: object
        type:
          $ref: '#/components/schemas/Type_1'
      additionalProperties: false
      description: 'GeoJson Feature

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.2'
    GeoJsonFeatureCollection:
      title: GeoJsonFeatureCollection
      required:
      - features
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        features:
          title: Features
          type: array
          items:
            $ref: '#/components/schemas/GeoJsonFeature'
        type:
          $ref: '#/components/schemas/Type_2'
      additionalProperties: false
      description: 'GeoJson Feature Collection

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.3'
    GeoJsonLineString:
      title: GeoJsonLineString
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: number
        type:
          $ref: '#/components/schemas/Type_3'
      additionalProperties: false
      description: 'GeoJson MultiLineString

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.4'
    GeoJsonMultiLineString:
      title: GeoJsonMultiLineString
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number
        type:
          $ref: '#/components/schemas/Type_4'
      additionalProperties: false
      description: 'GeoJson MultilineString

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.5'
    GeoJsonMultiPoint:
      title: GeoJsonMultiPoint
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: number
        type:
          $ref: '#/components/schemas/Type_5'
      additionalProperties: false
      description: 'GeoJson MultiPoint

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.3'
    GeoJsonMultiPolygon:
      title: GeoJsonMultiPolygon
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
          description: Bounding box in longitude, latitude WGS 84.
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  type: number
          description: Array of polygons (minimum 2D), containing an array of point
            coordinates (longitude, latitude, (optionally elevation and other properties).
        type:
          $ref: '#/components/schemas/Type_6'
      additionalProperties: false
      description: 'GeoJson MultiPolygon

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.7'
    GeoJsonPoint:
      title: GeoJsonPoint
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        coordinates:
          title: Coordinates
          type: array
          items:
            type: number
        type:
          $ref: '#/components/schemas/Type_7'
      additionalProperties: false
      description: 'GeoJson Point

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.2'
    GeometryItem:
      title: GeometryItem
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type2'
        coordinates:
          title: Coordinates
          minItems: 2
          type: array
          items:
            type: number
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem1:
      title: GeometryItem1
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type3'
        coordinates:
          title: Coordinates
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem10:
      title: GeometryItem10
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type14'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate7'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem11:
      title: GeometryItem11
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type15'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate8'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem12:
      title: GeometryItem12
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type16'
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Coordinate9'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem13:
      title: GeometryItem13
      required:
      - type
      - geometries
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type17'
        geometries:
          title: Geometries
          type: array
          items: {}
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem2:
      title: GeometryItem2
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type4'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate1'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem3:
      title: GeometryItem3
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type5'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate2'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem4:
      title: GeometryItem4
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate3'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem5:
      title: GeometryItem5
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type7'
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Coordinate4'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem6:
      title: GeometryItem6
      required:
      - type
      - geometries
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type8'
        geometries:
          title: Geometries
          type: array
          items: {}
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem7:
      title: GeometryItem7
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type11'
        coordinates:
          title: Coordinates
          minItems: 2
          type: array
          items:
            type: number
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem8:
      title: GeometryItem8
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type12'
        coordinates:
          title: Coordinates
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Coordinate5'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GeometryItem9:
      title: GeometryItem9
      required:
      - type
      - coordinates
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type13'
        coordinates:
          title: Coordinates
          type: array
          items:
            $ref: '#/components/schemas/Coordinate6'
        bbox:
          title: Bbox
          minItems: 4
          type: array
          items:
            type: number
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GuessRequest:
      title: GuessRequest
      required:
      - label
      type: object
      properties:
        label:
          title: Label
          type: string
        log_unit:
          title: Log Unit
          type: string
        description:
          title: Description
          type: string
      example:
        label: GRD
        log_unit: GAPI
        description: LDTD Gamma Ray
    GuessResponse:
      title: GuessResponse
      type: object
      properties:
        family:
          title: Family
          type: string
        family_type:
          title: Family Type
          type: array
          items:
            type: string
        log_unit:
          title: Log Unit
          type: string
        base_unit:
          title: Base Unit
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HistoricalInterest:
      title: HistoricalInterest
      type: object
      properties:
        InterestTypeID:
          title: Interest Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-WellInterestType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Business Interest [Well Interest Type] describes whether a
            company currently considers a well or its data to be a real or planned
            asset, and if so, the nature of and motivation for that company's interest.
        EffectiveDateTime:
          title: Effective Date Time
          type: string
          description: The date and time at which the well interest type becomes effective.
          format: date
        TerminationDateTime:
          title: Termination Date Time
          type: string
          description: The date and time at which the well interest type is no longer
            in effect.
          format: date
      additionalProperties: false
      description: A 'well interest' at some time period as defined by effective and
        termination date.
    JSONOrient:
      title: JSONOrient
      enum:
      - split
      - columns
      type: string
      description: An enumeration.
    Kind:
      title: Kind
      enum:
      - CRS
      - Unit
      - Measurement
      - AzimuthReference
      - DateTime
      type: string
      description: An enumeration.
    LineageAssertion:
      title: LineageAssertion
      type: object
      properties:
        ID:
          title: Id
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The object reference identifying the DIRECT, INDIRECT, REFERENCE
            dependency.
        LineageRelationshipType:
          title: Lineagerelationshiptype
          pattern: ^[\w\-\.]+:reference-data\-\-LineageRelationshipType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Used by LineageAssertion to describe the nature of the line
            of descent of a work product component from a prior Resource, such as
            DIRECT, INDIRECT, REFERENCE.  It is not for proximity (number of nodes
            away), it is not to cover all the relationships in a full ontology or
            graph, and it is not to describe the type of activity that created the
            asserting WPC.  LineageAssertion does not encompass a full provenance,
            process history, or activity model.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    LinkList:
      title: LinkList
      type: object
      properties: {}
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    LogServiceDateInterval:
      title: LogServiceDateInterval
      type: object
      properties:
        StartDate:
          title: Startdate
          type: string
          format: date-time
        EndDate:
          title: Enddate
          type: string
          format: date-time
      additionalProperties: false
      description: 'An interval built from two nested values : StartDate and EndDate.
        It applies to the whole log services and may apply to composite logs as [start
        of the first run job] and [end of the last run job]Log Service Date'
    MainFamilyCatalogItem:
      title: MainFamilyCatalogItem
      required:
      - MainFamily
      - Family
      - Unit
      type: object
      properties:
        MainFamily:
          title: Mainfamily
          type: string
        Family:
          title: Family
          type: string
        Unit:
          title: Unit
          type: string
    Marker121:
      title: Marker121
      type: object
      properties:
        MarkerName:
          title: Markername
          type: string
          description: Name of the Marker
        MarkerID:
          title: Marker ID
          type: string
          description: A unique identifier of the marker in the list of data.Markers[],
            ideally a UUID. If unpopulated, the string-converted element index number
            is used. The first index is "0".
        InterpretationID:
          title: Interpretation ID
          pattern: ^[\w\-\.]+:(work-product-component\-\-HorizonInterpretation|work-product-component\-\-FaultInterpretation|work-product-component\-\-GeobodyBoundaryInterpretation):[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The optional relationship to a HorizonInterpretation, GeobodyBoundaryInterpretation
            or FaultInterpretation.
        MarkerMeasuredDepth:
          title: Markermeasureddepth
          type: number
          description: The depth at which the Marker was noted.
        MarkerSubSeaVerticalDepth:
          title: Markersubseaverticaldepth
          type: number
          description: The Marker's TVD converted to a Sub-Sea Vertical depth, i.e.,
            below Mean Sea Level. Note that TVD values above MSL are negative. This
            is the same as true vertical depth referenced to the vertical CRS MSL
            depth.
        MarkerDate:
          title: Markerdate
          type: string
          description: Timestamp of the date and time when the when the Marker was
            interpreted.
          format: date-time
        MarkerObservationNumber:
          title: Markerobservationnumber
          type: number
          description: Any observation number that distinguishes a Marker observation
            from others with same Marker name, date.
        MarkerInterpreter:
          title: Markerinterpreter
          type: string
          description: The name of the Marker interpreter (could be a person or vendor).
        MarkerTypeID:
          title: Markertypeid
          pattern: ^[\w\-\.]+:reference-data\-\-MarkerType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Marker Type Reference Type. Possible values - Biostratigraphy,
            Lithostratigraphy, seismic, depth of well, sequence, flow unit
        FeatureTypeID:
          title: Featuretypeid
          pattern: ^[\w\-\.]+:reference-data\-\-FeatureType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Feature Type Reference Type. Possible values - Base, top, fault,
            salt, reef, sea floor
        FeatureName:
          title: Featurename
          type: string
          description: Name of the feature the marker is characterizing
        PositiveVerticalDelta:
          title: Positiveverticaldelta
          type: number
          description: The distance vertically above the Marker position that marks
            the limit of the high confidence range for the Marker pick.
        NegativeVerticalDelta:
          title: Negativeverticaldelta
          type: number
          description: The distance vertically below the Marker position that marks
            the limit of the high confidence range for the Marker pick.
        SurfaceDipAngle:
          title: Surfacedipangle
          type: number
          description: Dip angle for the Wellbore Marker.
        SurfaceDipAzimuth:
          title: Surfacedipazimuth
          type: number
          description: Dip azimuth for the Wellbore Marker.
        Missing:
          title: Missing
          type: string
          description: 'The geologic reason why a portion of material (typically a
            rock formation) is missing from the real world material/rock being measured,
            compared to what was expected based on offset wells. Examples: fault,
            unconformity, fold. This property corresponds to marker property type
            reference-data--MarkerPropertyType:MissingReason.'
        GeologicalAge:
          title: Geologicalage
          type: string
          description: Associated geological age
      additionalProperties: false
      description: The array of marker meta data in this set.
    MetaItem:
      title: MetaItem
      required:
      - kind
      - persistableReference
      type: object
      properties:
        kind:
          title: Reference Kind
          allOf:
          - $ref: '#/components/schemas/Kind'
          description: The kind of reference, unit, measurement, CRS or azimuth reference.
        name:
          title: Name or Symbol
          type: string
          description: The name of the CRS or the symbol/name of the unit
        persistableReference:
          title: Persistable Reference
          type: string
          description: The persistable reference string uniquely identifying the CRS
            or Unit
        propertyNames:
          title: Attribute Names
          type: array
          items:
            type: string
          description: The list of property names, to which this meta data item provides
            Unit/CRS context to. Data structures, which come in a single frame of
            reference, can register the property name, others require a full path
            like "data.structureA.propertyB" to define a unique context.
        propertyValues:
          title: Attribute Names
          type: array
          items:
            type: string
          description: The list of property values, to which this meta data item provides
            Unit/CRS context to. Typically a unit symbol is a value to a data structure;
            this symbol is then registered in this propertyValues array and the persistableReference
            provides the absolute reference.
        uncertainty:
          title: Uncertainty
          type: number
          description: The uncertainty of the values measured given the unit or CRS
            unit.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    OtherRelevantDataCountry:
      title: OtherRelevantDataCountry
      pattern: ^[A-Z]{2}$
      type: string
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Owner:
      title: Owner
      pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
      type: string
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Parent:
      title: Parent
      pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.\:\%]+:[0-9]+$
      type: string
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    PlssLocation:
      title: PlssLocation
      required:
      - range
      - section
      - township
      type: object
      properties:
        aliquotPart:
          title: Aliquot Part
          type: string
          description: A terse, hierarchical reference to a piece of land, in which
            successive subdivisions of some larger area.
        range:
          title: Range
          type: string
          description: Range, also known as Rng, R; a measure of the distance east
            or west from a referenced principal meridian, in units of six miles.
        section:
          title: Section Number
          type: integer
          description: Section number (between 1 and 36)
        township:
          title: Township
          type: string
          description: Township, also known as T or Twp; (1) Synonym for survey township,
            i.e., a square parcel of land of 36 square miles, or (2) A measure of
            the distance north or south from a referenced baseline, in units of six
            miles
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Point3dNonGeoJson:
      title: Point3dNonGeoJson
      required:
      - coordinates
      - crsKey
      - unitKey
      type: object
      properties:
        coordinates:
          title: 3D Point
          type: array
          items:
            type: number
          description: 3-dimensional point; the first coordinate is typically pointing
            east (easting or longitude), the second coordinate typically points north
            (northing or latitude). The third coordinate is an elevation (upwards
            positive, downwards negative). The point's CRS is given by the container.
        crsKey:
          title: CRS Key
          type: string
          description: The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
        unitKey:
          title: Unit Key
          type: string
          description: The 'unitKey' for the 3rd coordinate, which can be looked up
            in the 'frameOfReference.unit' for further details.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Polygon:
      title: Polygon
      required:
      - coordinates
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number
        type:
          $ref: '#/components/schemas/Type_8'
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    RecordVersions:
      title: RecordVersions
      type: object
      properties:
        recordId:
          title: Recordid
          type: string
        versions:
          title: Versions
          type: array
          items:
            type: integer
    ReferenceType:
      title: ReferenceType
      enum:
      - Date
      - Date Time
      - Measured Depth
      - Core depth
      - True Vertical Depth
      - True Vertical Depth Sub Sea
      - One-Way Time
      - Two-Way Time
      description: An enumeration.
    ResourceHostRegionID:
      title: ResourceHostRegionID
      pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
      type: string
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    SearchQuery:
      title: SearchQuery
      type: object
      properties:
        query:
          title: Query
          type: string
    SearchQueryRequest:
      title: SearchQueryRequest
      type: object
      properties:
        limit:
          title: Limit
          type: integer
        query:
          title: Query
          type: string
        cursor:
          title: Cursor
          type: string
        offset:
          title: Offset
          type: integer
    Session:
      title: Session
      required:
      - id
      - recordId
      - fromVersion
      - mode
      - expiry
      - createdTime
      - updatedTime
      - state
      type: object
      properties:
        id:
          title: Id
          type: string
          description: identifier of the current session.
          format: uuid
        recordId:
          title: Recordid
          type: string
          description: identifier of the record of which the session is attached to.
        fromVersion:
          title: Fromversion
          type: integer
          description: record version on top of which the session is based.
        mode:
          allOf:
          - $ref: '#/components/schemas/SessionUpdateMode'
          description: merge mode at commit. If 'update', existing data will be merged
            with the data sent during the session. If 'overrride', existing data will
            be ignored, the final result will only contains data sent within the session.
        expiry:
          title: Expiry
          type: string
          description: If the session is not committed before this dead line, session
            is automatically abandoned.
          format: date-time
        createdTime:
          title: Createdtime
          type: string
          description: creation date
          format: date-time
        updatedTime:
          title: Updatedtime
          type: string
          description: updated date
          format: date-time
        state:
          $ref: '#/components/schemas/SessionState'
        meta:
          title: Meta
          type: object
          additionalProperties:
            type: string
          description: miscellaneous metadata associated to the session. The session
            creator can set some data here.
      description: 'model of session exposed  '
      example:
        id: xx1234
        recordId: opendes:log:991234
        fromVersion: 25686567113
        mode: update
        createdTime: '2021-03-07T15:49:01+00:00'
        updatedTime: '2021-03-07T15:58:01+00:00'
        expiry: '2021-03-08T15:49:01+00:00'
        state: open
        meta:
          creatorCustom: someValue
    SessionState:
      title: SessionState
      enum:
      - open
      - committing
      - abandoning
      - committed
      - abandoned
      type: string
      description: An enumeration.
    SessionUpdateMode:
      title: SessionUpdateMode
      enum:
      - overwrite
      - update
      type: string
      description: An enumeration.
    Shape:
      title: Shape
      enum:
      - build and hold
      - deviated
      - double kickoff
      - horizontal
      - S-shaped
      - vertical
      - unknown
      description: An enumeration.
    SimpleElevationReference:
      title: SimpleElevationReference
      required:
      - elevationFromMsl
      type: object
      properties:
        elevationFromMsl:
          title: Elevation from MSL
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The elevation above mean sea level (MSL), at which the vertical
            origin is 0.0. The 'unitKey' is further defined in 'frameOfReference.units'.
        name:
          title: Elevation Reference Name
          type: string
          description: The name of the Elevation Reference.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    StatsColumn:
      title: StatsColumn
      required:
      - count
      - mean
      - std
      - min
      - 25%
      - 50%
      - 75%
      - max
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: Count number of non-NA/null observations
        mean:
          title: Mean
          type: number
          description: Mean of the values
        std:
          title: Std
          type: number
          description: Standard deviation of the observations
        min:
          title: Min
          type: number
          description: Minimum of the values in the object
        25%:
          title: 25%
          type: number
        50%:
          title: 50%
          type: number
        75%:
          title: 75%
          type: number
        max:
          title: Max
          type: number
          description: Maximum of the values in the object
    StorageAcl:
      title: StorageAcl
      required:
      - viewers
      - owners
      type: object
      properties:
        viewers:
          title: Viewers
          type: array
          items:
            type: string
        owners:
          title: Owners
          type: array
          items:
            type: string
    TagDictionary:
      title: TagDictionary
      type: object
      properties: {}
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    ToOneRelationship:
      title: ToOneRelationship
      type: object
      properties:
        confidence:
          title: Relationship Confidence
          type: number
          description: The confidence of the relationship. If the property is absent
            a well-known relation is implied.
        id:
          title: Related Object Id
          type: string
          description: The id of the related object in the Data Ecosystem. If set,
            the id has priority over the natural key in the name property.
        name:
          title: Related Object Name
          type: string
          description: The name or natural key of the related object. This property
            is required if the target object id could not (yet) be identified.
        version:
          title: Entity Version Number
          type: number
          description: The version number of the related entity. If no version number
            is specified, the last version is implied.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Type1:
      title: Type1
      enum:
      - AnyCrsFeature
      description: An enumeration.
    Type10:
      title: Type10
      enum:
      - Feature
      description: An enumeration.
    Type11:
      title: Type11
      enum:
      - Point
      description: An enumeration.
    Type12:
      title: Type12
      enum:
      - LineString
      description: An enumeration.
    Type13:
      title: Type13
      enum:
      - Polygon
      description: An enumeration.
    Type14:
      title: Type14
      enum:
      - MultiPoint
      description: An enumeration.
    Type15:
      title: Type15
      enum:
      - MultiLineString
      description: An enumeration.
    Type16:
      title: Type16
      enum:
      - MultiPolygon
      description: An enumeration.
    Type17:
      title: Type17
      enum:
      - GeometryCollection
      description: An enumeration.
    Type2:
      title: Type2
      enum:
      - AnyCrsPoint
      description: An enumeration.
    Type3:
      title: Type3
      enum:
      - AnyCrsLineString
      description: An enumeration.
    Type4:
      title: Type4
      enum:
      - AnyCrsPolygon
      description: An enumeration.
    Type5:
      title: Type5
      enum:
      - AnyCrsMultiPoint
      description: An enumeration.
    Type6:
      title: Type6
      enum:
      - AnyCrsMultiLineString
      description: An enumeration.
    Type7:
      title: Type7
      enum:
      - AnyCrsMultiPolygon
      description: An enumeration.
    Type8:
      title: Type8
      enum:
      - AnyCrsGeometryCollection
      description: An enumeration.
    Type9:
      title: Type9
      enum:
      - FeatureCollection
      description: An enumeration.
    Type_1:
      title: Type_1
      enum:
      - Feature
      description: An enumeration.
    Type_2:
      title: Type_2
      enum:
      - FeatureCollection
      description: An enumeration.
    Type_3:
      title: Type_3
      enum:
      - LineString
      description: An enumeration.
    Type_4:
      title: Type_4
      enum:
      - MultiLineString
      description: An enumeration.
    Type_5:
      title: Type_5
      enum:
      - MultiPoint
      description: An enumeration.
    Type_6:
      title: Type_6
      enum:
      - MultiPolygon
      description: An enumeration.
    Type_7:
      title: Type_7
      enum:
      - Point
      description: An enumeration.
    Type_8:
      title: Type_8
      enum:
      - Polygon
      description: An enumeration.
    UnacceptableUsageItem:
      title: UnacceptableUsageItem
      type: object
      properties:
        WorkflowUsage:
          title: Workflow Usage
          pattern: ^[\w\-\.]+:reference-data\-\-WorkflowUsageType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Name of the business activities, processes, and/or workflows
            that the record is technical assurance value is not valid for.
          example: 'namespace:reference-data--WorkflowUsageType:SeismicInterpretation:'
        WorkflowPersona:
          title: Workflow Persona
          pattern: ^[\w\-\.]+:reference-data\-\-WorkflowPersonaType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Name of the role or personas that the record is technical assurance
            value is not valid for.
          example: 'namespace:reference-data--WorkflowPersonaType:SeismicInterpreter:'
      additionalProperties: false
      description: Describes the workflows and/or personas that the technical assurance
        value is not valid for (e.g., This data has a technical assurance property
        of "trusted", but it is not suitable for Seismic Interpretation).
    UpdateSessionState:
      title: UpdateSessionState
      required:
      - state
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/UpdateSessionStateValue'
          description: '`commit` or `abandon` a session'
    UpdateSessionStateValue:
      title: UpdateSessionStateValue
      enum:
      - commit
      - abandon
      type: string
      description: An enumeration.
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    ValueWithUnit:
      title: ValueWithUnit
      required:
      - unitKey
      - value
      type: object
      properties:
        unitKey:
          title: Unit Key
          type: string
          description: Unit for value of the corresponding attribute for the domain
            object in question. The key can be looked up in the 'frameOfReference.units'
            for further details.
        value:
          title: Value
          type: number
          description: Value of the corresponding attribute for the domain object
            in question.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    VersionDetailsResponse:
      title: VersionDetailsResponse
      type: object
      properties:
        service:
          title: Service
          type: string
        version:
          title: Version
          type: string
        buildNumber:
          title: Buildnumber
          type: string
        details:
          title: Details
          type: object
          additionalProperties:
            type: string
    VerticalMeasurementWell110:
      title: VerticalMeasurementWell110
      type: object
      properties:
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which a vertical measurement instance
            becomes effective.
          format: date-time
        VerticalMeasurement:
          title: Verticalmeasurement
          type: number
          description: The value of the elevation or depth. Depth is positive downwards
            from a vertical reference or geodetic datum along a path, which can be
            vertical; elevation is positive upwards from a geodetic datum along a
            vertical path. Either can be negative.
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which a vertical measurement instance
            is no longer in effect.
          format: date-time
        VerticalMeasurementTypeID:
          title: Verticalmeasurementtypeid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies the type of vertical measurement (TD, Plugback, Kickoff,
            Drill Floor, Rotary Table...).
        VerticalMeasurementPathID:
          title: Verticalmeasurementpathid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementPath:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Measured Depth, True Vertical Depth, or Elevation.
        VerticalMeasurementSourceID:
          title: Verticalmeasurementsourceid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementSource:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Driller vs Logger.
        WellboreTVDTrajectoryID:
          title: Wellboretvdtrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies what directional survey or wellpath was used to calculate
            the TVD.
        VerticalMeasurementUnitOfMeasureID:
          title: Verticalmeasurementunitofmeasureid
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The unit of measure for the vertical measurement. If a unit
            of measure and a vertical CRS are provided, the unit of measure provided
            is taken over the unit of measure from the CRS.
        VerticalCRSID:
          title: Verticalcrsid
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A vertical coordinate reference system defines the origin for
            height or depth values. It is expected that either VerticalCRSID or VerticalReferenceID
            reference is provided in a given vertical measurement array object, but
            not both.
        VerticalReferenceID:
          title: Verticalreferenceid
          type: string
          description: The reference point from which the relative vertical measurement
            is made. This is only populated if the measurement has no VerticalCRSID
            specified. The value entered must match the VerticalMeasurementID for
            another vertical measurement array element in Wellbore or Well or in a
            related parent facility. The relationship should be  declared explicitly
            in VerticalReferenceEntityID. Any chain of measurements must ultimately
            resolve to a Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID
            is provided in a given vertical measurement array object, but not both.
        VerticalReferenceEntityID:
          title: Verticalreferenceentityid
          pattern: ^[\w\-\.]+:(master-data\-\-Wellbore|master-data\-\-Well|master-data\-\-Rig):[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: This relationship identifies the entity (aka record) in which
            the VerticalReferenceID is found; It could be a different OSDU entity
            or a self-reference. For example, a Wellbore VerticalMeasurement may reference
            a member of a VerticalMeasurements[] array in its parent Well record.
            Alternatively, VerticalReferenceEntityID may be populated with the ID
            of its own Wellbore record to make explicit that VerticalReferenceID is
            intended to be found in this record, not another.
        VerticalMeasurementDescription:
          title: Verticalmeasurementdescription
          type: string
          description: Text which describes a vertical measurement in detail.
        VerticalMeasurementID:
          title: Verticalmeasurementid
          type: string
          description: The ID for a distinct vertical measurement within the Wellbore
            VerticalMeasurements array so that it may be referenced by other vertical
            measurements if necessary.
        RigID:
          title: Rig ID
          pattern: ^[\w\-\.]+:master-data\-\-Rig:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The relationship to the rig, which was used while this vertical
            measurement was in active use.
      additionalProperties: false
      description: A location along a wellbore, _usually_ associated with some aspect
        of the drilling of the wellbore, but not with any intersecting _subsurface_
        natural surfaces.
    VerticalMeasurementWellbore110:
      title: VerticalMeasurementWellbore110
      type: object
      properties:
        EffectiveDateTime:
          title: Effectivedatetime
          type: string
          description: The date and time at which a vertical measurement instance
            becomes effective.
          format: date-time
        VerticalMeasurement:
          title: Verticalmeasurement
          type: number
          description: The value of the elevation or depth. Depth is positive downwards
            from a vertical reference or geodetic datum along a path, which can be
            vertical; elevation is positive upwards from a geodetic datum along a
            vertical path. Either can be negative.
        TerminationDateTime:
          title: Terminationdatetime
          type: string
          description: The date and time at which a vertical measurement instance
            is no longer in effect.
          format: date-time
        VerticalMeasurementTypeID:
          title: Verticalmeasurementtypeid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies the type of vertical measurement (TD, Plugback, Kickoff,
            Drill Floor, Rotary Table...).
        VerticalMeasurementPathID:
          title: Verticalmeasurementpathid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementPath:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Measured Depth, True Vertical Depth, or Elevation.
        VerticalMeasurementSourceID:
          title: Verticalmeasurementsourceid
          pattern: ^[\w\-\.]+:reference-data\-\-VerticalMeasurementSource:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies Driller vs Logger.
        WellboreTVDTrajectoryID:
          title: Wellboretvdtrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Specifies what directional survey or wellpath was used to calculate
            the TVD.
        VerticalMeasurementUnitOfMeasureID:
          title: Verticalmeasurementunitofmeasureid
          pattern: ^[\w\-\.]+:reference-data\-\-UnitOfMeasure:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The unit of measure for the vertical measurement. If a unit
            of measure and a vertical CRS are provided, the unit of measure provided
            is taken over the unit of measure from the CRS.
        VerticalCRSID:
          title: Verticalcrsid
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A vertical coordinate reference system defines the origin for
            height or depth values. It is expected that either VerticalCRSID or VerticalReferenceID
            reference is provided in a given vertical measurement array object, but
            not both.
        VerticalReferenceID:
          title: Verticalreferenceid
          type: string
          description: The reference point from which the relative vertical measurement
            is made. This is only populated if the measurement has no VerticalCRSID
            specified. The value entered must match the VerticalMeasurementID for
            another vertical measurement array element in Wellbore or Well or in a
            related parent facility. The relationship should be  declared explicitly
            in VerticalReferenceEntityID. Any chain of measurements must ultimately
            resolve to a Vertical CRS. It is expected that a VerticalCRSID or a VerticalReferenceID
            is provided in a given vertical measurement array object, but not both.
        VerticalReferenceEntityID:
          title: Verticalreferenceentityid
          pattern: ^[\w\-\.]+:(master-data\-\-Wellbore|master-data\-\-Well|master-data\-\-Rig):[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: This relationship identifies the entity (aka record) in which
            the VerticalReferenceID is found; It could be a different OSDU entity
            or a self-reference. For example, a Wellbore VerticalMeasurement may reference
            a member of a VerticalMeasurements[] array in its parent Well record.
            Alternatively, VerticalReferenceEntityID may be populated with the ID
            of its own Wellbore record to make explicit that VerticalReferenceID is
            intended to be found in this record, not another.
        VerticalMeasurementDescription:
          title: Verticalmeasurementdescription
          type: string
          description: Text which describes a vertical measurement in detail.
        VerticalMeasurementID:
          title: Verticalmeasurementid
          type: string
          description: The ID for a distinct vertical measurement within the Wellbore
            VerticalMeasurements array so that it may be referenced by other vertical
            measurements if necessary.
        RigID:
          title: Rig ID
          pattern: ^[\w\-\.]+:master-data\-\-Rig:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The relationship to the rig, which was used while this vertical
            measurement was in active use.
      additionalProperties: false
      description: A location along a wellbore, _usually_ associated with some aspect
        of the drilling of the wellbore, but not with any intersecting _subsurface_
        natural surfaces.
    Viewer:
      title: Viewer
      pattern: ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
      type: string
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    Well110:
      title: Well110
      required:
      - kind
      - acl
      - legal
      type: object
      properties:
        id:
          title: Entity ID
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+$
          type: string
          description: Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:master-data--Well:6c60ceb0-3521-57b7-9bd8-e1d7c9f66230
        kind:
          title: Entity Kind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The schema identification for the OSDU resource object following
            the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning, https://semver.org/.
          example: osdu:wks:master-data--Well:1.1.0
        version:
          title: Version Number
          type: integer
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/AbstractLegalTags100'
          description: The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs, from which
            this record instance is derived.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items: {}
          description: The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
        data:
          $ref: '#/components/schemas/WellData110'
      additionalProperties: false
      description: The origin of a set of wellbores.
    WellBoreData111:
      title: WellBoreData111
      type: object
      properties:
        FacilityID:
          title: External Facility Identifier
          type: string
          description: Native identifier from a Master Data Management System or other
            trusted source external to OSDU - stored here in order to allow for multi-system
            connection and synchronization. If used, the "Source" property should
            identify that source system.
        FacilityTypeID:
          title: Facilitytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The definition of a kind of capability to perform a business
            function or a service.
        FacilityOperators:
          title: Facilityoperators
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityOperator100'
          description: The history of operator organizations of the facility.
        InitialOperatorID:
          title: Initial Operator ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A initial operator organization ID; the organization ID may
            also be found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
        CurrentOperatorID:
          title: Current Operator ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The current operator organization ID; the organization ID may
            also be found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
        DataSourceOrganisationID:
          title: Datasourceorganisationid
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The main source of the header information.
        OperatingEnvironmentID:
          title: Operatingenvironmentid
          pattern: ^[\w\-\.]+:reference-data\-\-OperatingEnvironment:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Identifies the Facility's general location as being onshore
            vs. offshore.
        FacilityName:
          title: Facilityname
          type: string
          description: Name of the Facility.
        FacilityNameAliases:
          title: Facilitynamealiases
          type: array
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          description: 'DEPRECATED: please use data.NameAliases. Alternative names,
            including historical, by which this facility is/has been known.'
        FacilityStates:
          title: Facilitystates
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityState100'
          description: The history of life cycle states the facility has been through.
        FacilityEvents:
          title: Facilityevents
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityEvent100'
          description: A list of key facility events.
        FacilitySpecifications:
          title: Facilityspecifications
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilitySpecification100'
          description: facilitySpecification maintains the specification like slot
            name, wellbore drilling permit number, rig name etc.
        NameAliases:
          title: Namealiases
          type: array
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          description: Alternative names, including historical, by which this master
            data is/has been known (it should include all the identifiers).
        GeoContexts:
          title: Geocontexts
          type: array
          items:
            $ref: '#/components/schemas/AbstractGeoContext100'
          description: List of geographic entities which provide context to the master
            data. This may include multiple types or multiple values of the same type.
        SpatialLocation:
          title: Spatiallocation
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: The spatial location information such as coordinates, CRS information
            (left empty when not appropriate).
        VersionCreationReason:
          title: Versioncreationreason
          type: string
          description: This describes the reason that caused the creation of a new
            version of this master data.
        TechnicalAssuranceTypeID:
          title: Technical Assurance Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'Describes a master-data record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
          example: 'namespace:reference-data--TechnicalAssuranceType:Certified:'
        ResourceHomeRegionID:
          title: Resource Home Region ID
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The name of the home [cloud environment] region for this OSDU
            resource object.
        ResourceHostRegionIDs:
          title: Resource Host Region ID
          type: array
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          description: The name of the host [cloud environment] region(s) for this
            OSDU resource object.
        ResourceCurationStatus:
          title: Resource Curation Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Curation status.
        ResourceLifecycleStatus:
          title: Resource Lifecycle Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Resource Lifecycle status.
        ResourceSecurityClassification:
          title: Resource Security Classification
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Classifies the security level of the resource.
        Source:
          title: Data Source
          type: string
          description: The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or individual.
            For informational purposes only, the list of sources is not governed.
        ExistenceKind:
          title: Existence Kind
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Where does this data resource sit in the cradle-to-grave span
            of its existence?
        TechnicalAssuranceID:
          title: Technical Assurance ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Describes a record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        WellID:
          title: Wellid
          pattern: ^[\w\-\.]+:master-data\-\-Well:[\w\-\.\:\%]+:[0-9]*$
          type: string
        SequenceNumber:
          title: Sequencenumber
          type: integer
          description: A number that indicates the order in which wellbores were drilled.
        VerticalMeasurements:
          title: Verticalmeasurements
          type: array
          items:
            $ref: '#/components/schemas/VerticalMeasurementWellbore110'
          description: List of all depths and elevations pertaining to the wellbore,
            like, plug back measured depth, total measured depth, KB elevation
        DrillingReasons:
          title: Drillingreasons
          type: array
          items:
            $ref: '#/components/schemas/AbstractWellboreDrillingReason100'
          description: The history of drilling reasons of the wellbore.
        KickOffWellbore:
          title: Kickoffwellbore
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: This is a pointer to the parent wellbore. The wellbore that
            starts from top has no parent.
        TrajectoryTypeID:
          title: Trajectorytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellboreTrajectoryType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Profile Type [Wellbore Trajectory Type] is the general geometry
            of the wellbore relative to the vertical plane. The specific criteria
            for Profile Type may vary by operator or regulator. The facet value may
            change if conditions encountered during drilling are not what was planned
            or permitted.
        DefinitiveTrajectoryID:
          title: Definitivetrajectoryid
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: SRN of Wellbore Trajectory which is considered the authoritative
            or preferred version.
        TargetFormation:
          title: Targetformation
          pattern: ^[\w\-\.]+:reference-data\-\-GeologicalFormation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The Formation of interest for which the Wellbore is drilled
            to interact with. The Wellbore may terminate in a lower formation if the
            requirement is to drill through the entirety of the target formation,
            therefore this is not necessarily the Formation at TD.
        PrimaryMaterialID:
          title: Primarymaterialid
          pattern: ^[\w\-\.]+:reference-data\-\-MaterialType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Please use PrimaryProductTypeID instead, which
            refers to the narrower WellProductType. The primary material injected/produced
            from the wellbore.'
        DefaultVerticalMeasurementID:
          title: Defaultverticalmeasurementid
          type: string
          description: The default datum reference point, or zero depth point, used
            to determine other points vertically in a wellbore.  References an entry
            in the Vertical Measurements array of this wellbore.
        ProjectedBottomHoleLocation:
          title: Projectedbottomholelocation
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: The bottom hole location of the wellbore denoted by a projected
            horizontal coordinate reference system (Horizontal CRS), such a UTM zone.
            'Projected' in this property does not mean 'planned' or 'projected-to-bit'.
            If both GeographicBottomHoleLocation and ProjectedBottomHoleLocation properties
            are populated on this wellbore, they must identify the same point, just
            in different CRSs.
        GeographicBottomHoleLocation:
          title: Geographicbottomholelocation
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: The bottom hole location of the wellbore denoted by a specified
            geographic horizontal coordinate reference system (Horizontal CRS), such
            as WGS84, NAD27, or ED50. If both GeographicBottomHoleLocation and ProjectedBottomHoleLocation
            properties are populated on this wellbore, they must identify the same
            point, just in different CRSs.
        BusinessIntentionID:
          title: Businessintentionid
          pattern: ^[\w\-\.]+:reference-data\-\-WellBusinessIntention:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Business Intention [Well Business Intention] is the general
            purpose for which resources are approved for drilling a new well or subsequent
            wellbore(s).
        RoleID:
          title: Roleid
          pattern: ^[\w\-\.]+:reference-data\-\-WellRole:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Role [Well Role] is the current purpose, whether planned or
            actual. If there are multiple Roles among a wellbore's components, the
            well may be assigned the facet value with the highest significance. The
            value of Role may change over the Life Cycle.
        InterestTypeID:
          title: Interesttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellInterestType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Business Interest [Well Interest Type] describes whether a
            company currently considers a wellbore entity or its data to be a real
            or planned asset, and if so, the nature of and motivation for that company's
            interest.
        HistoricalInterests:
          title: Historicalinterests
          type: array
          items:
            $ref: '#/components/schemas/HistoricalInterest'
          description: The list of past and present interests associated with the
            time period they were/are valid
        WasBusinessInterestFinancialOperated:
          title: Wasbusinessinterestfinancialoperated
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this Well has ever been FinancialOperated
            in the past.
        WasBusinessInterestFinancialNonOperated:
          title: Wasbusinessinterestfinancialnonoperated
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this Well has ever been FinancialNonOperated
            in the past.
        WasBusinessInterestObligatory:
          title: Wasbusinessinterestobligatory
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this Well has ever been Obligatory in
            the past.
        WasBusinessInterestTechnical:
          title: Wasbusinessinteresttechnical
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this Well has ever been Technical in
            the past.
        WellboreTrajectoryTypeID:
          title: Wellboretrajectorytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellboreTrajectoryType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Added accidentally in version 1.1.0. Please use
            the original TrajectoryTypeID instead. Profile Type [Wellbore Trajectory
            Type] is the general geometry of the wellbore relative to the vertical
            plane. The specific criteria for Profile Type may vary by operator or
            regulator. The facet value may change if conditions encountered during
            drilling are not what was planned or permitted.'
        PrimaryProductTypeID:
          title: Primaryproducttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellProductType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Product Type [Well Product Type] is the physical product(s)
            that can be attributed to any wellbore component. A Primary Product Significance
            identifies the Product Type that is most significant.
        SecondaryProductTypeID:
          title: Secondaryproducttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellProductType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Product Type [Well Product Type] is the physical product(s)
            that can be attributed to any wellbore component. A Secondary Product
            Significance identifies the Product Type that is the second most significant.
        TertiaryProductTypeID:
          title: Tertiaryproducttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellProductType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Product Type [Well Product Type] is the physical product(s)
            that can be attributed to any wellbore component. A Tertiary Product Significance
            identifies the Product Type that is the third most significant.
        ShowProductTypeID:
          title: Showproducttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellProductType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Product Type [Well Product Type] is the physical product(s)
            that can be attributed to any wellbore component. A Show Product Significance
            identifies a Product Type present in non-commercial quantity.
        ConditionID:
          title: Conditionid
          pattern: ^[\w\-\.]+:reference-data\-\-WellCondition:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Condition [Well Condition] is the operational state of a wellbore
            component relative to the Role [Well Role].
        FluidDirectionID:
          title: Fluiddirectionid
          pattern: ^[\w\-\.]+:reference-data\-\-WellFluidDirection:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Fluid Direction [Well Fluid Direction] is the flow direction
            of the wellhead stream. The facet value can change over the life of the
            wellbore.
        OutcomeID:
          title: Outcomeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellBusinessIntentionOutcome:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Outcome [Well Drilling Outcome] is the result of attempting
            to accomplish the Business Intention [Well Business Intention].
        StatusSummaryID:
          title: Statussummaryid
          pattern: ^[\w\-\.]+:reference-data\-\-WellStatusSummary:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Identifies the status of a wellbore component in a way that
            may combine and-or summarize concepts found in other status facets. For
            example, a Wellbore Status Summary of Gas Injector Shut-in, which contains
            commonly desired business information, combines concepts from Product
            Type, Fluid Direction, and Condition.
        ExtensionProperties:
          title: Extensionproperties
          type: object
      additionalProperties: false
      description: Common resources to be injected at root 'data' level for every
        entity, which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
    WellData110:
      title: WellData110
      type: object
      properties:
        FacilityID:
          title: External Facility Identifier
          type: string
          description: Native identifier from a Master Data Management System or other
            trusted source external to OSDU - stored here in order to allow for multi-system
            connection and synchronization. If used, the "Source" property should
            identify that source system.
        FacilityTypeID:
          title: Facilitytypeid
          pattern: ^[\w\-\.]+:reference-data\-\-FacilityType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The definition of a kind of capability to perform a business
            function or a service.
        FacilityOperators:
          title: Facilityoperators
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityOperator100'
          description: The history of operator organizations of the facility.
        InitialOperatorID:
          title: Initial Operator ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A initial operator organization ID; the organization ID may
            also be found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
        CurrentOperatorID:
          title: Current Operator ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The current operator organization ID; the organization ID may
            also be found in the FacilityOperatorOrganisationID of the FacilityOperator
            array providing the actual dates.
        DataSourceOrganisationID:
          title: Datasourceorganisationid
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The main source of the header information.
        OperatingEnvironmentID:
          title: Operatingenvironmentid
          pattern: ^[\w\-\.]+:reference-data\-\-OperatingEnvironment:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Identifies the Facility's general location as being onshore
            vs. offshore.
        FacilityName:
          title: Facilityname
          type: string
          description: Name of the Facility.
        FacilityNameAliases:
          title: Facilitynamealiases
          type: array
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          description: 'DEPRECATED: please use data.NameAliases. Alternative names,
            including historical, by which this facility is/has been known.'
        FacilityStates:
          title: Facilitystates
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityState100'
          description: The history of life cycle states the facility has been through.
        FacilityEvents:
          title: Facilityevents
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilityEvent100'
          description: A list of key facility events.
        FacilitySpecifications:
          title: Facilityspecifications
          type: array
          items:
            $ref: '#/components/schemas/AbstractFacilitySpecification100'
          description: facilitySpecification maintains the specification like slot
            name, wellbore drilling permit number, rig name etc.
        NameAliases:
          title: Namealiases
          type: array
          items:
            $ref: '#/components/schemas/AbstractAliasNames100'
          description: Alternative names, including historical, by which this master
            data is/has been known (it should include all the identifiers).
        GeoContexts:
          title: Geocontexts
          type: array
          items:
            $ref: '#/components/schemas/AbstractGeoContext100'
          description: List of geographic entities which provide context to the master
            data. This may include multiple types or multiple values of the same type.
        SpatialLocation:
          title: Spatiallocation
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: The spatial location information such as coordinates, CRS information
            (left empty when not appropriate).
        VersionCreationReason:
          title: Versioncreationreason
          type: string
          description: This describes the reason that caused the creation of a new
            version of this master data.
        TechnicalAssuranceTypeID:
          title: Technical Assurance Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'Describes a master-data record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
          example: 'namespace:reference-data--TechnicalAssuranceType:Certified:'
        ResourceHomeRegionID:
          title: Resource Home Region ID
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The name of the home [cloud environment] region for this OSDU
            resource object.
        ResourceHostRegionIDs:
          title: Resource Host Region ID
          type: array
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          description: The name of the host [cloud environment] region(s) for this
            OSDU resource object.
        ResourceCurationStatus:
          title: Resource Curation Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Curation status.
        ResourceLifecycleStatus:
          title: Resource Lifecycle Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Resource Lifecycle status.
        ResourceSecurityClassification:
          title: Resource Security Classification
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Classifies the security level of the resource.
        Source:
          title: Data Source
          type: string
          description: The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or individual.
            For informational purposes only, the list of sources is not governed.
        ExistenceKind:
          title: Existence Kind
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Where does this data resource sit in the cradle-to-grave span
            of its existence?
        TechnicalAssuranceID:
          title: Technical Assurance ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Describes a record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        DefaultVerticalMeasurementID:
          title: Defaultverticalmeasurementid
          type: string
          description: The default datum reference point, or zero depth point, used
            to determine other points vertically in a well.  References an entry in
            the VerticalMeasurements array.
        DefaultVerticalCRSID:
          title: Defaultverticalcrsid
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The default vertical coordinate reference system used in the
            vertical measurements for a well or wellbore if absent from input vertical
            measurements and there is no other recourse for obtaining a valid CRS.
        VerticalMeasurements:
          title: Verticalmeasurements
          type: array
          items:
            $ref: '#/components/schemas/VerticalMeasurementWell110'
          description: List of all depths and elevations pertaining to the well, like,
            water depth, mud line elevation, etc.
        InterestTypeID:
          title: Interesttypeid
          pattern: ^[\w\-\.]+:reference-data\-\-WellInterestType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Business Interest [Well Interest Type] describes whether a
            company currently considers a well or its data to be a real or planned
            asset, and if so, the nature of and motivation for that company's interest.
        BusinessIntentionID:
          title: Business Intention ID
          pattern: ^[\w\-\.]+:reference-data\-\-WellBusinessIntention:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Business Intention [Well Business Intention] is the general
            purpose for which resources are approved for drilling a new well or subsequent
            wellbore(s).
        RoleID:
          title: Role ID
          pattern: ^[\w\-\.]+:reference-data\-\-WellRole:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Role [Well Role] is the current purpose, whether planned or
            actual. If there are multiple Roles among a well's components, the well
            may be assigned the facet value with the highest significance. The value
            of Role may change over the Life Cycle.
        HistoricalInterests:
          title: Historical Interests
          type: array
          items:
            $ref: '#/components/schemas/HistoricalInterest'
          description: The list of past and present interests associated with the
            time period they were/are valid
        WasBusinessInterestFinancialOperated:
          title: BusinessInterestFinancialOperatedFormerly
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this well has ever been FinancialOperated
            in the past.
        WasBusinessInterestFinancialNonOperated:
          title: BusinessInterestFinancialNonOperatedFormerly
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this well has ever been FinancialNonOperated
            in the past.
        WasBusinessInterestObligatory:
          title: BusinessInterestObligatoryFormerly
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this well has ever been Obligatory in
            the past.
        WasBusinessInterestTechnical:
          title: BusinessInterestTechnicalFormerly
          type: boolean
          description: Identifies, for the purpose of current use, if the Business
            Interest [Well Interest Type] for this well has ever been Technical in
            the past.
        ConditionID:
          title: ConditionID
          pattern: ^[\w\-\.]+:reference-data\-\-WellCondition:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Condition [Well Condition] is the operational state of a well
            component relative to the Role [Well Role].
        OutcomeID:
          title: OutcomeID
          pattern: ^[\w\-\.]+:reference-data\-\-WellBusinessIntentionOutcome:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Outcome [Well Drilling Outcome] is the result of attempting
            to accomplish the Business Intention [Well Business Intention].
        StatusSummaryID:
          title: StatusSummaryID
          pattern: ^[\w\-\.]+:reference-data\-\-WellStatusSummary:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Identifies the status of a well component in a way that may
            combine and-or summarize concepts found in other status facets. For example,
            a Well Status Summary of Gas Injector Shut-in, which contains commonly
            desired business information, combines concepts from Product Type, Fluid
            Direction, and Condition.
        ExtensionProperties:
          title: Extensionproperties
          type: object
      additionalProperties: false
      description: Common resources to be injected at root 'data' level for every
        entity, which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
    WellLocationType:
      title: WellLocationType
      enum:
      - Onshore
      - Offshore
      - unknown
      description: An enumeration.
    WellLog120:
      title: WellLog120
      required:
      - kind
      - acl
      - legal
      type: object
      properties:
        id:
          title: Entity ID
          pattern: ^[\w\-\.]+:work-product-component\-\-WellLog:[\w\-\.\:\%]+$
          type: string
          description: Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:work-product-component--WellLog:c2c79f1c-90ca-5c92-b8df-04dbe438f414
        kind:
          title: Entity Kind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The schema identification for the OSDU resource object following
            the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning, https://semver.org/.
          example: osdu:wks:work-product-component--WellLog:1.2.0
        version:
          title: Version Number
          type: integer
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/AbstractLegalTags100'
          description: The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs, from which
            this record instance is derived.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items: {}
          description: The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
        data:
          $ref: '#/components/schemas/WellLogData120'
      additionalProperties: false
      description: A well log is a data type that correlates a particular measurement
        or multiple measurements in a wellbore against depth and/or time within that
        wellbore. When plotted visually, well logs are typically long line graphs
        (called "curves") but may sometimes be discrete points or intervals. This
        schema object is intended for digital well logs, not raster log files or raster
        calibration files, but may be used for the latter in the absence of a defined
        OSDU schema for these use cases.
    WellLogData120:
      title: WellLogData120
      type: object
      properties:
        Name:
          title: Name
          type: string
          description: Name
        Description:
          title: Description
          type: string
          description: Description.  Summary of the work product component.  Not the
            same as Remark which captures thoughts of creator about the wpc.
        CreationDateTime:
          title: Creationdatetime
          type: string
          description: Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
        Tags:
          title: Tags
          type: array
          items:
            type: string
          description: Array of key words to identify the work product, especially
            to help in search.
        SpatialPoint:
          title: Spatialpoint
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: A centroid point that reflects the locale of the content of
            the work product component (location of the subject matter).
        SpatialArea:
          title: Spatialarea
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: A polygon boundary that reflects the locale of the content
            of the work product component (location of the subject matter).
        GeoContexts:
          title: Geocontexts
          type: array
          items:
            $ref: '#/components/schemas/AbstractGeoContext100'
          description: List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
        SubmitterName:
          title: Submittername
          type: string
          description: Name of the person that first submitted the work product component
            to OSDU.
        BusinessActivities:
          title: Businessactivities
          type: array
          items:
            type: string
          description: Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
        AuthorIDs:
          title: Author IDs
          type: array
          items:
            type: string
          description: Array of Authors' names of the work product component.  Could
            be a person or company entity.
        LineageAssertions:
          title: Lineageassertions
          type: array
          items:
            $ref: '#/components/schemas/LineageAssertion'
          description: Defines relationships with other objects (any kind of Resource)
            upon which this work product component depends.  The assertion is directed
            only from the asserting WPC to ancestor objects, not children.  It should
            not be used to refer to files or artefacts within the WPC -- the association
            within the WPC is sufficient and Artefacts are actually children of the
            main WPC file. They should be recorded in the data.Artefacts[] array.
        Datasets:
          title: Datasets
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          description: The record id, which identifies this OSDU File or dataset resource.
        Artefacts:
          title: Artefacts
          type: array
          items:
            $ref: '#/components/schemas/Artefact'
          description: An array of Artefacts - each artefact has a Role, Resource
            tuple. An artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation process).
            Examples include retrieving location data, performing an OCR which may
            result in the generation of artefacts which need to be preserved distinctly
        IsExtendedLoad:
          title: Isextendedload
          type: boolean
          description: A flag that indicates if the work product component is undergoing
            an extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
        IsDiscoverable:
          title: Isdiscoverable
          type: boolean
          description: A flag that indicates if the work product component is searchable,
            which means covered in the search index.
        TechnicalAssurances:
          title: Technical Assurances
          type: array
          items:
            $ref: '#/components/schemas/AbstractTechnicalAssurance100'
          description: 'Describes a record''s overall suitability for general business
            consumption based on data quality. Clarifications: Since Certified is
            the highest classification of suitable quality, any further change or
            versioning of a Certified record should be carefully considered and justified.
            If a Technical Assurance value is not populated then one can assume the
            data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        ResourceHomeRegionID:
          title: Resource Home Region ID
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The name of the home [cloud environment] region for this OSDU
            resource object.
        ResourceHostRegionIDs:
          title: Resource Host Region ID
          type: array
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          description: The name of the host [cloud environment] region(s) for this
            OSDU resource object.
        ResourceCurationStatus:
          title: Resource Curation Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Curation status.
        ResourceLifecycleStatus:
          title: Resource Lifecycle Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Resource Lifecycle status.
        ResourceSecurityClassification:
          title: Resource Security Classification
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Classifies the security level of the resource.
        Source:
          title: Data Source
          type: string
          description: The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or individual.
            For informational purposes only, the list of sources is not governed.
        ExistenceKind:
          title: Existence Kind
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Where does this data resource sit in the cradle-to-grave span
            of its existence?
        TechnicalAssuranceID:
          title: Technical Assurance ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Describes a record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        WellboreID:
          title: Wellboreid
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The Wellbore where the Well Log Work Product Component was
            recorded
        WellLogTypeID:
          title: Welllogtypeid
          pattern: ^[\w\-\.]+:reference-data\-\-LogType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Well Log Type short Description such as Raw; Evaluated; Composite;....
        TopMeasuredDepth:
          title: Top Measured Depth
          type: number
          description: Informational Top Measured Depth of the Well Log. Always populate
            SamplingStart and SamplingStop, which represents the real sampling of
            the WellLog, including  non-depth sampling.
        BottomMeasuredDepth:
          title: Bottom Measured Depth
          type: number
          description: Informational Bottom Measured Depth of the Well Log. Always
            populate SamplingStart and SamplingStop, which represents the real sampling
            of the WellLog, including  non-depth sampling.
        ServiceCompanyID:
          title: Servicecompanyid
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The relationship to a Service Company, typically the producer
            or logging contractor.
        LogSource:
          title: Logsource
          type: string
          description: OSDU Native Log Source - will be updated for later releases
            - not to be used yet
        LogActivity:
          title: Logactivity
          type: string
          description: Log Activity, used to describe the type of pass such as Calibration
            Pass - Main Pass - Repeated Pass
        LogRun:
          title: Logrun
          type: string
          description: Log Run - describe the run of the log - can be a number, but
            may be also a alphanumeric description such as a version name
        LogVersion:
          title: Logversion
          type: string
          description: Log Version
        LoggingService:
          title: Loggingservice
          type: string
          description: Logging Service - mainly a short concatenation of the names
            of the tools
        LogServiceDateInterval:
          title: LogServiceDateInterval
          allOf:
          - $ref: '#/components/schemas/LogServiceDateInterval'
          description: 'An interval built from two nested values : StartDate and EndDate.
            It applies to the whole log services and may apply to composite logs as
            [start of the first run job] and [end of the last run job]Log Service
            Date'
        ToolStringDescription:
          title: Toolstringdescription
          type: string
          description: Tool String Description - a long concatenation of the tools
            used for logging services such as GammaRay+NeutronPorosity
        LoggingDirection:
          title: Loggingdirection
          type: string
          description: Specifies whether curves were collected downward or upward
        PassNumber:
          title: Passnumber
          type: integer
          description: Indicates if the Pass is the Main one (1) or a repeated one
            - and it's level repetition
        ActivityType:
          title: Activitytype
          type: string
          description: General method or circumstance of logging - MWD, completion,
            ...
        DrillingFluidProperty:
          title: Drillingfluidproperty
          type: string
          description: Type of mud at time of logging (oil, water based,...)
        HoleTypeLogging:
          title: Holetypelogging
          pattern: ^OPENHOLE|CASEDHOLE|CEMENTEDHOLE$
          type: string
          description: 'Description of the hole related type of logging - POSSIBLE
            VALUE : OpenHole / CasedHole / CementedHole'
        VerticalMeasurementID:
          title: Verticalmeasurementid
          type: string
          description: 'DEPRECATED: Use data.VerticalMeasurement.VerticalReferenceID
            instead. References an entry in the Vertical Measurement array for the
            Wellbore identified by WellboreID, which defines the vertical reference
            datum for all curve measured depths. Either VerticalMeasurementID or VerticalMeasurement
            are populated.'
        VerticalMeasurement:
          title: Verticalmeasurement
          allOf:
          - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: The vertical measurement reference for the log curves, which
            defines the vertical reference datum for the logged depths. Either VerticalMeasurement
            or VerticalMeasurementID are populated.
        Curves:
          title: Curves
          type: array
          items:
            $ref: '#/components/schemas/Curve120'
        FrameIdentifier:
          title: Frame Identifier
          type: string
          description: For multi-frame or multi-section files, this identifier defines
            the source frame in the file. If the identifier is an index number the
            index starts with zero and is converted to a string for this property.
          example: 0
        SamplingInterval:
          title: Sampling Interval
          type: number
          description: For regularly sampled curves this property holds the sampling
            interval. For non regular sampling rate this property is not set. The
            IsRegular flag indicates whether SamplingInterval is required.
          example: 0.0254
        ReferenceCurveID:
          title: Reference Curve ID
          type: string
          description: The data.Curves[].CurveID, which holds the primary index (reference)
            values.
          example: MD
        SamplingStart:
          title: Sampling Start
          type: number
          description: The start value/first value of the ReferenceCurveID, typically
            the start depth of the logging.
          example: 2500
        SamplingStop:
          title: Sampling Stop
          type: number
          description: The stop value/last value of the ReferenceCurveID, typically
            the end depth of the logging.
          example: 7500
        SamplingDomainTypeID:
          title: Sampling Domain Type ID
          pattern: ^[\w\-\.]+:reference-data\-\-WellLogSamplingDomainType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The sampling domain, e.g. measured depth, true vertical, travel-time,
            calendar-time.
          example: 'namespace:reference-data--WellLogSamplingDomainType:Depth:'
        CompanyID:
          title: Company ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The relationship to company who engaged the service company
            (ServiceCompanyID) to perform the logging.
        CandidateReferenceCurveIDs:
          title: Candidatereferencecurveids
          type: array
          items:
            type: string
          description: Secondary index curves, which are alternative candidates to
            act as ReferenceCurveID. Generally not populated, except in the cases
            where multiple reference curves are present, e.g. measured depth and time.
        ZeroTime:
          title: Zerotime
          type: string
          description: Optional time reference for (calender) time logs. The ISO date
            time string representing zero time. Not to be confused with seismic travel
            time zero. The latter is defined by SeismicReferenceDatum.
          format: date-time
        SeismicReferenceElevation:
          title: Seismicreferenceelevation
          allOf:
          - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: 'Populated only if the WellLog represents time-depth relationships
            or checkshots. It is expressed via the standard AbstractFacilityVerticalMeasurement.
            The following properties are expected to be present: VerticalMeasurementPathID
            (typically elevation), VerticalMeasurementTypeID as SeismicReferenceDatum,
            VerticalMeasurement holding the offset to either the VerticalCRSID or
            the chained VerticalReferenceID in the parent Wellbore.'
        IsRegular:
          title: Is Regular Flag
          type: boolean
          description: Boolean property indicating the sampling mode of the ReferenceCurveID.
            True means all reference curve values are regularly spaced (see SamplingInterval);
            false means irregular or discrete sample spacing.
        LogRemark:
          title: Log Remark
          type: string
          description: Log remark provides contextual information during the actual
            log object acquisition. Explains how the measurement in the wellbore is
            taken on a point in time or depth. Additional information may be included
            such as bad weather, tool failure, etc. Usually a part of the log header,
            log remark contains info specific for an acquisition run, specific for
            a given logging tool (multiple measurements) and/or a specific interval.
            In essence, log remark represents the external factors and operational
            environment, directly or indirectly affecting the measurement quality/uncertainty
            (dynamically over time/depth) - adding both noise and bias to the measurements.
          example: tool failure, bad weather
        ExtensionProperties:
          title: Extensionproperties
          type: object
      additionalProperties: false
      description: Common resources to be injected at root 'data' level for every
        entity, which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
    WellPurpose:
      title: WellPurpose
      enum:
      - appraisal
      - appraisal -- confirmation appraisal
      - appraisal -- exploratory appraisal
      - exploration
      - exploration -- deeper-pool wildcat
      - exploration -- new-field wildcat
      - exploration -- new-pool wildcat
      - exploration -- outpost wildcat
      - exploration -- shallower-pool wildcat
      - development
      - development -- infill development
      - development -- injector
      - development -- producer
      - fluid storage
      - fluid storage -- gas storage
      - general srvc
      - general srvc -- borehole re-acquisition
      - general srvc -- observation
      - general srvc -- relief
      - general srvc -- research
      - general srvc -- research -- drill test
      - general srvc -- research -- strat test
      - general srvc -- waste disposal
      - mineral
      - unknown
      description: An enumeration.
    WellStatus:
      title: WellStatus
      enum:
      - abandoned
      - active
      - active -- injecting
      - active -- producing
      - completed
      - drilling
      - partially plugged
      - permitted
      - plugged and abandoned
      - proposed
      - sold
      - suspended
      - temporarily abandoned
      - testing
      - tight
      - working over
      - unknown
      description: An enumeration.
    WellType:
      title: WellType
      enum:
      - bypass
      - initial
      - redrill
      - reentry
      - respud
      - sidetrack
      - unknown
      description: An enumeration.
    Wellbore111:
      title: Wellbore111
      required:
      - kind
      - acl
      - legal
      type: object
      properties:
        id:
          title: Entity ID
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+$
          type: string
          description: Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:master-data--Wellbore:c7c421a7-f496-5aef-8093-298c32bfdea9
        kind:
          title: Entity Kind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The schema identification for the OSDU resource object following
            the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning, https://semver.org/.
          example: osdu:wks:master-data--Wellbore:1.1.1
        version:
          title: Version Number
          type: integer
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/AbstractLegalTags100'
          description: The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs, from which
            this record instance is derived.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items: {}
          description: The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
        data:
          $ref: '#/components/schemas/WellBoreData111'
      additionalProperties: false
      description: A hole in the ground extending from a point at the earth's surface
        to the maximum point of penetration.
    WellboreMarkerSet121:
      title: WellboreMarkerSet121
      required:
      - kind
      - acl
      - legal
      type: object
      properties:
        id:
          title: Entity ID
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreMarkerSet:[\w\-\.\:\%]+$
          type: string
          description: Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:work-product-component--WellboreMarkerSet:d5303b79-7904-5bfe-9c44-9a3ff41b6d6c
        kind:
          title: Entity Kind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The schema identification for the OSDU resource object following
            the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning, https://semver.org/.
          example: osdu:wks:work-product-component--WellboreMarkerSet:1.2.1
        version:
          title: Version Number
          type: integer
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/AbstractLegalTags100'
          description: The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs, from which
            this record instance is derived.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items: {}
          description: The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
        data:
          $ref: '#/components/schemas/WellboreMarkerSetData121'
      additionalProperties: false
      description: Wellbore Markers identify the depth in a wellbore, measured below
        a reference elevation, at which a person or an automated process identifies
        a noteworthy observation, which is usually a change in the rock that intersects
        that wellbore. Formation Marker data includes attributes/properties that put
        these depths in context. Formation Markers are sometimes known as picks or
        formation tops.
    WellboreMarkerSetData121:
      title: WellboreMarkerSetData121
      type: object
      properties:
        Name:
          title: Name
          type: string
          description: Name
        Description:
          title: Description
          type: string
          description: Description.  Summary of the work product component.  Not the
            same as Remark which captures thoughts of creator about the wpc.
        CreationDateTime:
          title: Creationdatetime
          type: string
          description: Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
        Tags:
          title: Tags
          type: array
          items:
            type: string
          description: Array of key words to identify the work product, especially
            to help in search.
        SpatialPoint:
          title: Spatialpoint
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: A centroid point that reflects the locale of the content of
            the work product component (location of the subject matter).
        SpatialArea:
          title: Spatialarea
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation110'
          description: A polygon boundary that reflects the locale of the content
            of the work product component (location of the subject matter).
        GeoContexts:
          title: Geocontexts
          type: array
          items:
            $ref: '#/components/schemas/AbstractGeoContext100'
          description: List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
        SubmitterName:
          title: Submittername
          type: string
          description: Name of the person that first submitted the work product component
            to OSDU.
        BusinessActivities:
          title: Businessactivities
          type: array
          items:
            type: string
          description: Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
        AuthorIDs:
          title: Author IDs
          type: array
          items:
            type: string
          description: Array of Authors' names of the work product component.  Could
            be a person or company entity.
        LineageAssertions:
          title: Lineageassertions
          type: array
          items:
            $ref: '#/components/schemas/LineageAssertion'
          description: Defines relationships with other objects (any kind of Resource)
            upon which this work product component depends.  The assertion is directed
            only from the asserting WPC to ancestor objects, not children.  It should
            not be used to refer to files or artefacts within the WPC -- the association
            within the WPC is sufficient and Artefacts are actually children of the
            main WPC file. They should be recorded in the data.Artefacts[] array.
        Datasets:
          title: Datasets
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          description: The record id, which identifies this OSDU File or dataset resource.
        Artefacts:
          title: Artefacts
          type: array
          items:
            $ref: '#/components/schemas/Artefact'
          description: An array of Artefacts - each artefact has a Role, Resource
            tuple. An artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation process).
            Examples include retrieving location data, performing an OCR which may
            result in the generation of artefacts which need to be preserved distinctly
        IsExtendedLoad:
          title: Isextendedload
          type: boolean
          description: A flag that indicates if the work product component is undergoing
            an extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
        IsDiscoverable:
          title: Isdiscoverable
          type: boolean
          description: A flag that indicates if the work product component is searchable,
            which means covered in the search index.
        TechnicalAssurances:
          title: Technical Assurances
          type: array
          items:
            $ref: '#/components/schemas/AbstractTechnicalAssurance100'
          description: 'Describes a record''s overall suitability for general business
            consumption based on data quality. Clarifications: Since Certified is
            the highest classification of suitable quality, any further change or
            versioning of a Certified record should be carefully considered and justified.
            If a Technical Assurance value is not populated then one can assume the
            data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        ResourceHomeRegionID:
          title: Resource Home Region ID
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The name of the home [cloud environment] region for this OSDU
            resource object.
        ResourceHostRegionIDs:
          title: Resource Host Region ID
          type: array
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          description: The name of the host [cloud environment] region(s) for this
            OSDU resource object.
        ResourceCurationStatus:
          title: Resource Curation Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Curation status.
        ResourceLifecycleStatus:
          title: Resource Lifecycle Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Resource Lifecycle status.
        ResourceSecurityClassification:
          title: Resource Security Classification
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Classifies the security level of the resource.
        Source:
          title: Data Source
          type: string
          description: The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or individual.
            For informational purposes only, the list of sources is not governed.
        ExistenceKind:
          title: Existence Kind
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Where does this data resource sit in the cradle-to-grave span
            of its existence?
        TechnicalAssuranceID:
          title: Technical Assurance ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Describes a record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        WellboreID:
          title: Wellbore ID
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The Wellbore ID, to which the markers in this set belong.
        VerticalMeasurement:
          title: Vertical Measurement
          allOf:
          - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: References an entry in the Vertical Measurement array for the
            Wellbore identified by WellboreID, which defines the vertical reference
            datum for all marker measured depths of the Wellbore Marker Set Markers
            array.
        AvailableMarkerProperties:
          title: Available Marker Properties
          type: array
          items:
            $ref: '#/components/schemas/AvailableMarkerProperty'
          description: The array of MarkerProperty definitions describing the available
            properties for this instance of WellboreMarkerSet.
        Markers:
          title: Markers
          type: array
          items:
            $ref: '#/components/schemas/Marker121'
          description: The array of marker meta data in this set. Markers are externally
            identified by data.Markers[].MarkerID, ideally a UUID. Older versions
            of the WellboreMarkerSet schema do not have this identifier. In this case,
            the string-converted array index is used as MarkerID. The the first index
            is "0".
        StratigraphicColumnID:
          title: Stratigraphic Column ID
          pattern: ^[\w\-\.]+:work-product-component\-\-StratigraphicColumn:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The optional reference to a stratigraphic column (referring
            to multiple StratigraphicColumnRankInterpretation) providing the stratigraphic
            framework for the WellboreMarkerSet. It demonstrates the intent to describe
            complex, potentially overlapping stratigraphic intervals. Only one of
            the properties StratigraphicColumnID or StratigraphicColumnRankInterpretationID
            should be populated.
        StratigraphicColumnRankInterpretationID:
          title: Stratigraphic Column Rank ID
          pattern: ^[\w\-\.]+:work-product-component\-\-StratigraphicColumnRankInterpretation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The optional reference to a StratigraphicColumnRankInterpretation.
            It expresses the intent of a stratigraphic framework with non-overlapping
            intervals. Only one of the properties StratigraphicColumnID or StratigraphicColumnRankInterpretationID
            should be populated.
        ExtensionProperties:
          title: Extensionproperties
          type: object
      additionalProperties: false
      description: Common resources to be injected at root 'data' level for every
        entity, which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
    WellborePurpose:
      title: WellborePurpose
      enum:
      - appraisal
      - appraisal -- confirmation appraisal
      - appraisal -- exploratory appraisal
      - exploration
      - exploration -- deeper-pool wildcat
      - exploration -- new-field wildcat
      - exploration -- new-pool wildcat
      - exploration -- outpost wildcat
      - exploration -- shallower-pool wildcat
      - development
      - development -- infill development
      - development -- injector
      - development -- producer
      - fluid storage
      - fluid storage -- gas storage
      - general srvc
      - general srvc -- borehole re-acquisition
      - general srvc -- observation
      - general srvc -- relief
      - general srvc -- research
      - general srvc -- research -- drill test
      - general srvc -- research -- strat test
      - general srvc -- waste disposal
      - mineral
      - unknown
      description: An enumeration.
    WellboreStatus:
      title: WellboreStatus
      enum:
      - abandoned
      - active
      - active -- injecting
      - active -- producing
      - completed
      - drilling
      - partially plugged
      - permitted
      - plugged and abandoned
      - proposed
      - sold
      - suspended
      - temporarily abandoned
      - testing
      - tight
      - working over
      - unknown
      description: An enumeration.
    WellboreTrajectory110:
      title: WellboreTrajectory110
      required:
      - kind
      - acl
      - legal
      type: object
      properties:
        id:
          title: Entity ID
          pattern: ^[\w\-\.]+:work-product-component\-\-WellboreTrajectory:[\w\-\.\:\%]+$
          type: string
          description: Previously called ResourceID or SRN which identifies this OSDU
            resource object without version.
          example: namespace:work-product-component--WellboreTrajectory:606f224a-ef1f-5690-9843-d26cd7e33e10
        kind:
          title: Entity Kind
          pattern: ^[\w\-\.]+:[\w\-\.]+:[\w\-\.]+:[0-9]+.[0-9]+.[0-9]+$
          type: string
          description: The schema identification for the OSDU resource object following
            the pattern {Namespace}:{Source}:{Type}:{VersionMajor}.{VersionMinor}.{VersionPatch}.
            The versioning scheme follows the semantic versioning, https://semver.org/.
          example: osdu:wks:work-product-component--WellboreTrajectory:1.1.0
        version:
          title: Version Number
          type: integer
          description: The version number of this OSDU resource; set by the framework.
          example: 1562066009929332
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/AbstractAccessControlList100'
          description: The access control tags associated with this entity.
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/AbstractLegalTags100'
          description: The entity's legal tags and compliance status. The actual contents
            associated with the legal tags is managed by the Compliance Service.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__osdu_model__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/AbstractLegalParentList100'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items: {}
          description: The Frame of Reference meta data section linking the named
            properties to self-contained definitions.
        data:
          $ref: '#/components/schemas/WellboreTrajectoryData110'
      additionalProperties: false
      description: Work Product Component describing an individual instance of a wellbore
        trajectory data object. Also called a deviation survey, wellbore trajectory
        is data that is used to calculate the position and spatial uncertainty of
        a planned or actual wellbore in 2-dimensional and 3-dimensional space.
    WellboreTrajectoryData110:
      title: WellboreTrajectoryData110
      required:
      - WellboreID
      - TopDepthMeasuredDepth
      - BaseDepthMeasuredDepth
      - VerticalMeasurement
      type: object
      properties:
        Name:
          title: Name
          type: string
          description: Name
        Description:
          title: Description
          type: string
          description: Description.  Summary of the work product component.  Not the
            same as Remark which captures thoughts of creator about the wpc.
        CreationDateTime:
          title: Creationdatetime
          type: string
          description: Date that a resource (work  product component here) is formed
            outside of OSDU before loading (e.g. publication date).
          format: date-time
        Tags:
          title: Tags
          type: array
          items:
            type: string
          description: Array of key words to identify the work product, especially
            to help in search.
        SpatialPoint:
          title: Spatialpoint
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: A centroid point that reflects the locale of the content of
            the work product component (location of the subject matter).
        SpatialArea:
          title: Spatialarea
          allOf:
          - $ref: '#/components/schemas/AbstractSpatialLocation100'
          description: A polygon boundary that reflects the locale of the content
            of the work product component (location of the subject matter).
        GeoContexts:
          title: Geocontexts
          type: array
          items:
            $ref: '#/components/schemas/AbstractGeoContext100'
          description: List of geographic entities which provide context to the WPC.  This
            may include multiple types or multiple values of the same type.
        SubmitterName:
          title: Submittername
          type: string
          description: Name of the person that first submitted the work product component
            to OSDU.
        BusinessActivities:
          title: Businessactivities
          type: array
          items:
            type: string
          description: Array of business processes/workflows that the work product
            component has been through (ex. well planning, exploration).
        AuthorIDs:
          title: Author IDs
          type: array
          items:
            type: string
          description: Array of Authors' names of the work product component.  Could
            be a person or company entity.
        LineageAssertions:
          title: Lineageassertions
          type: array
          items:
            $ref: '#/components/schemas/LineageAssertion'
          description: Defines relationships with other objects (any kind of Resource)
            upon which this work product component depends.  The assertion is directed
            only from the asserting WPC to ancestor objects, not children.  It should
            not be used to refer to files or artefacts within the WPC -- the association
            within the WPC is sufficient and Artefacts are actually children of the
            main WPC file. They should be recorded in the data.Artefacts[] array.
        Datasets:
          title: Datasets
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          description: The record id, which identifies this OSDU File or dataset resource.
        Artefacts:
          title: Artefacts
          type: array
          items:
            $ref: '#/components/schemas/Artefact'
          description: An array of Artefacts - each artefact has a Role, Resource
            tuple. An artefact is distinct from the file, in the sense certain valuable
            information is generated during loading process (Artefact generation process).
            Examples include retrieving location data, performing an OCR which may
            result in the generation of artefacts which need to be preserved distinctly
        IsExtendedLoad:
          title: Isextendedload
          type: boolean
          description: A flag that indicates if the work product component is undergoing
            an extended load.  It reflects the fact that the work product component
            is in an early stage and may be updated before finalization.
        IsDiscoverable:
          title: Isdiscoverable
          type: boolean
          description: A flag that indicates if the work product component is searchable,
            which means covered in the search index.
        TechnicalAssurances:
          title: Technical Assurances
          type: array
          items:
            $ref: '#/components/schemas/AbstractTechnicalAssurance100'
          description: 'Describes a record''s overall suitability for general business
            consumption based on data quality. Clarifications: Since Certified is
            the highest classification of suitable quality, any further change or
            versioning of a Certified record should be carefully considered and justified.
            If a Technical Assurance value is not populated then one can assume the
            data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        ResourceHomeRegionID:
          title: Resource Home Region ID
          pattern: ^[\w\-\.]+:reference-data\-\-OSDURegion:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The name of the home [cloud environment] region for this OSDU
            resource object.
        ResourceHostRegionIDs:
          title: Resource Host Region ID
          type: array
          items:
            $ref: '#/components/schemas/ResourceHostRegionID'
          description: The name of the host [cloud environment] region(s) for this
            OSDU resource object.
        ResourceCurationStatus:
          title: Resource Curation Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceCurationStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Curation status.
        ResourceLifecycleStatus:
          title: Resource Lifecycle Status
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceLifecycleStatus:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Describes the current Resource Lifecycle status.
        ResourceSecurityClassification:
          title: Resource Security Classification
          pattern: ^[\w\-\.]+:reference-data\-\-ResourceSecurityClassification:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Classifies the security level of the resource.
        Source:
          title: Data Source
          type: string
          description: The entity that produced the record, or from which it is received;
            could be an organization, agency, system, internal team, or individual.
            For informational purposes only, the list of sources is not governed.
        ExistenceKind:
          title: Existence Kind
          pattern: ^[\w\-\.]+:reference-data\-\-ExistenceKind:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Where does this data resource sit in the cradle-to-grave span
            of its existence?
        TechnicalAssuranceID:
          title: Technical Assurance ID
          pattern: ^[\w\-\.]+:reference-data\-\-TechnicalAssuranceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: 'DEPRECATED: Describes a record''s overall suitability for
            general business consumption based on data quality. Clarifications: Since
            Certified is the highest classification of suitable quality, any further
            change or versioning of a Certified record should be carefully considered
            and justified. If a Technical Assurance value is not populated then one
            can assume the data has not been evaluated or its quality is unknown (=Unevaluated).
            Technical Assurance values are not intended to be used for the identification
            of a single "preferred" or "definitive" record by comparison with other
            records.'
        ServiceCompanyID:
          title: Service Company
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Name of the Survey Company.
        WellboreID:
          title: Wellbore
          pattern: ^[\w\-\.]+:master-data\-\-Wellbore:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: A unique name, code or number designated to the Wellbore.
        TopDepthMeasuredDepth:
          title: Survey Top Measured Depth
          type: number
          description: Measured depth in wellbore where the directional survey starts.
            This should equal the minimum station measured depth for this directional
            survey, regardless of whether the surveyed station represents an actual
            surveyed MD or not.
        AzimuthReferenceType:
          title: Azimuth Reference Type
          pattern: ^[\w\-\.]+:reference-data\-\-AzimuthReferenceType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The North reference of the trajectory used to define the azimuth
            angular measurement values. For example, True North, Grid North, Magnetic
            North.
        CalculationMethodType:
          title: Calculation Method Type
          pattern: ^[\w\-\.]+:reference-data\-\-CalculationMethodType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Calculation Method Type used to compute the TVD, X OFFSET,
            Y OFFSET and DOG LEG SEVERITY values for this Directional Survey. For
            example, Radius of Curvature, Minimum Curvature, Balanced Tangential,
            etc.
        ProjectedCRSID:
          title: Projected Coordinate Reference System ID
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Coordinate Reference System defining the Projection of the
            station EASTING and NORTHING values. If  type is "Grid North" and EASTING
            and NORTHING attributes are stored, clearly identifying their projection
            is required.
          example: 'namespace:reference-data--CoordinateReferenceSystem:ProjectedCRS.EPSG.32615:'
        ActiveIndicator:
          title: Active Survey Indicator
          type: boolean
          description: A flag indicating if the survey is currently active or valid
            within his lifecycle stage, not necessarily the definitive survey.
        SurveyType:
          title: Directional Survey Type
          type: string
          description: The type of this directional survey.  For example a "Directional
            Survey" where MD, Inclination and Azimuth are all measured or a "Position
            Log" where Inclination and Azimuth are both null and only MD, TVD and
            X/Y Offsets are available) - or "Full Survey" where everything is fully
            filled-up, depth-inclination-azimuth.
        AcquisitionDate:
          title: Effective Date
          type: string
          description: The date that the survey data was acquired on the field.
          format: date-time
        GeographicCRSID:
          title: Geographic Coordinate Reference System
          pattern: ^[\w\-\.]+:reference-data\-\-CoordinateReferenceSystem:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: Coordinate Reference System defining the Geodetic Datum of
            the station LATITUDE and LONGITUDE values. If LATITUDE and LONGITUDE attributes
            are stored, clearly identifying their Datum is required.
          example: 'namespace:reference-data--CoordinateReferenceSystem:GeodeticCRS.EPSG.4326:'
        AcquisitionRemark:
          title: Survey Remark
          type: string
          description: Remarks related to acquisition context which is not the same
            as Description which is a summary of the work-product-component.
        SurveyReferenceIdentifier:
          title: Survey Reference Identifier
          type: string
          description: Unique or Distinctive Survey Reference Number, Job Number,
            File Number, Identifier, Label, Name, etc. as indicated on a directional
            survey report, file, etc.  Use this attribute to allow correlation of
            the data in this Directional Survey back to the original source document,
            file, etc.
        SurveyToolTypeID:
          title: Type of the Survey Tool
          pattern: ^[\w\-\.]+:reference-data\-\-SurveyToolType:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The type of tool or equipment used to acquire this Directional
            Survey.  For example, gyroscopic, magnetic, MWD, TOTCO, acid bottle, etc.
            Follow OWSG reference data and support the ISCWSA survey tool definitions.
        SurveyVersion:
          title: Survey Version
          type: string
          description: The version of the wellbore survey deliverable received from
            the service provider - as given by this provider
        ExtrapolatedMeasuredDepth:
          title: Extrapolated Measured Depth
          type: number
          description: The measured depth to which the survey segment was extrapolated.
        BaseDepthMeasuredDepth:
          title: Survey Base Measured Depth
          type: number
          description: Measured depth within the wellbore of the LAST surveyed station
            with recorded data.  If a stored survey has been extrapolated to a deeper
            depth than the last surveyed station then that is the extrapolated measured
            depth and not the survey base depth.
        TieMeasuredDepth:
          title: Tie Measured Depth
          type: number
          description: Tie-point depth measured along the wellbore from the measurement
            reference datum to the survey station - where tie point is the place on
            the originating survey where the current survey intersect it.
        VerticalMeasurement:
          title: Verticalmeasurement
          allOf:
          - $ref: '#/components/schemas/AbstractFacilityVerticalMeasurement100'
          description: References an entry in the Vertical Measurement array for the
            Wellbore identified by WellboreID, which defines the vertical reference
            datum for all survey station measured depths.
        AvailableTrajectoryStationProperties:
          title: Available Trajectory Station Properties
          type: array
          items:
            $ref: '#/components/schemas/AvailableTrajectoryStationProperty'
          description: The array of TrajectoryStationProperty definitions describing
            the available properties for this instance of WellboreTrajectory.
        AppliedOperations:
          title: Applied Operations
          type: array
          items:
            type: string
          description: The audit trail of operations applied to the station coordinates
            from the original state to the current state. The list may contain operations
            applied prior to ingestion as well as the operations applied to produce
            the Wgs84Coordinates. The text elements refer to ESRI style CRS and Transformation
            names, which may have to be translated to EPSG standard names.
        CompanyID:
          title: Company ID
          pattern: ^[\w\-\.]+:master-data\-\-Organisation:[\w\-\.\:\%]+:[0-9]*$
          type: string
          description: The relationship to company who engaged the service company
            (ServiceCompanyID) to perform the surveying.
        ExtensionProperties:
          title: Extensionproperties
          type: object
      additionalProperties: false
      description: Common resources to be injected at root 'data' level for every
        entity, which is persistable in Storage. The insertion is performed by the
        OsduSchemaComposer script.
    WellboreType:
      title: WellboreType
      enum:
      - bypass
      - initial
      - redrill
      - reentry
      - respud
      - sidetrack
      - unknown
      description: An enumeration.
    app__model__model_curated__Legal:
      title: Legal
      type: object
      properties:
        legaltags:
          title: Legal Tags
          type: array
          items:
            type: string
          description: The list of legal tags, see compliance API.
        otherRelevantDataCountries:
          title: Other Relevant Data Countries
          type: array
          items:
            type: string
          description: The list of other relevant data countries using the ISO 2-letter
            codes, see compliance API.
        status:
          title: Legal Status
          type: string
          description: The legal status.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    app__model__model_curated__Tags:
      title: Tags
      type: string
    app__model__model_curated__Type:
      title: Type
      enum:
      - GeometryCollection
      description: An enumeration.
    app__model__osdu_model__Tags:
      title: Tags
      type: string
    app__model__osdu_model__Type:
      title: Type
      enum:
      - AnyCrsFeatureCollection
      description: An enumeration.
    basinContext:
      title: basinContext
      type: object
      properties:
        basinCode:
          title: Basin Code
          type: string
          description: The code of the basin in which the well is located.
        basinName:
          title: Basin Name
          type: string
          description: The name of the basin in which the well is located.
        subBasinCode:
          title: Sub-Basin Code
          type: string
          description: The code of the sub-basin in which the well is located.
        subBasinName:
          title: Sub-Basin Name
          type: string
          description: The name of the sub-basin in which the well is located.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    channel:
      title: channel
      type: object
      properties:
        absentValue:
          title: Absent Value
          type: string
          description: Optional field carrying the absent value as string for this
            channel.
        dataType:
          title: Data Type
          allOf:
          - $ref: '#/components/schemas/DataType'
          description: The log value type (per log sample). The 'format' property
            may contain further hints about data type presentation.
          default: number
        dimension:
          title: Dimension
          type: integer
          description: The dimension of this log or channel
        family:
          title: Log Family
          type: string
          description: The log family code of this log or channel (optional)
        familyType:
          title: Log Family Type
          type: string
          description: 'The log family type code of this log or channel. Example:
            ''Neutron Porosity'' for ''Thermal Neutron Porosity Sandstone''. (optional)'
        format:
          title: Format Hint
          allOf:
          - $ref: '#/components/schemas/Format'
          description: Optional format hint how to treat the log values as strings
            or number of bits per 'dataType'.
          default: float32
        logstoreId:
          title: Logstore ID
          type: number
          description: The id of this log or channel in the Logstore. This property
            is not present in the index channel.
        bulkURI:
          title: bulk URI
          type: string
          description: bulkURI either URL or URN.
        longName:
          title: Log Long Name
          type: string
          description: The long name of this log or channel
        mnemonic:
          title: Mnemonic
          type: string
          description: The mnemonic of this log or channel
        name:
          title: Log Name
          type: string
          description: The name of this log or channel.
        properties:
          title: Named Properties
          type: array
          items:
            $ref: '#/components/schemas/namedProperty'
          description: The named properties of this log or channel.
        source:
          title: Source
          type: string
          description: The source of this log or channel as a data reference; Typically
            this refers to the raw LogSet, from which this log WKE is generated.
        unitKey:
          title: Unit
          type: string
          description: The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    core_dl_geopoint:
      title: core_dl_geopoint
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          maximum: 90.0
          minimum: -90.0
          type: number
          description: The latitude value in degrees of arc (dega). Value range [-90,
            90].
        longitude:
          title: Longitude
          maximum: 180.0
          minimum: -180.0
          type: number
          description: The longitude value in degrees of arc (dega). Value range [-180,
            180]
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    dipSetData:
      title: dipSetData
      type: object
      properties:
        azimuthReference:
          title: Azimuth Reference Code
          type: string
          description: Azimuth reference code defining the type of North. Only used
            for dipSets with azimuth data
        classification:
          title: Log Set Classification
          type: string
          description: The well-known log set classification code.
          default: Externally Processed LogSet
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        elevationReference:
          $ref: '#/components/schemas/SimpleElevationReference'
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        name:
          title: Dip Set Name
          type: string
          description: The name of this dip set
        operation:
          title: Operation
          type: string
          description: The operation which created this entity
        reference:
          $ref: '#/components/schemas/channel'
        referenceType:
          title: Reference Type
          type: string
          description: The reference index type of the dip set.
        relationships:
          $ref: '#/components/schemas/dipsetrelationships'
        start:
          $ref: '#/components/schemas/ValueWithUnit'
        step:
          $ref: '#/components/schemas/ValueWithUnit'
        stop:
          $ref: '#/components/schemas/ValueWithUnit'
        bulkURI:
          title: bulk URI
          type: string
          description: bulkURI either URL or URN.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    dipset:
      title: dipset
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Dip Set Data
          allOf:
          - $ref: '#/components/schemas/dipSetData'
          description: dipset data
        id:
          title: Dip Set ID
          type: string
          description: The unique identifier of the dip set
        kind:
          title: Dip Set Kind
          type: string
          description: Kind specification
          default: osdu:wks:dipSet:1.0.0
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The dip-set's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this dip set; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    dipsetrelationships:
      title: dipsetrelationships
      required:
      - wellbore
      type: object
      properties:
        well:
          title: Well
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The well to which this dipSet belongs. Only required if the
            wellbore is unknown.
        wellbore:
          title: Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this dipSet belongs.
        wellboreSection:
          title: Wellbore Section
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore section to which this dipSet belongs.
        referenceLog:
          title: True dip azimuth log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The true dip azimuth log of the dipset.
        trueDipAzimuthLog:
          title: True dip azimuth log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The true dip azimuth log of the dipset.
        trueDipInclinationLog:
          title: X-coordinate log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The X-coordinate log of the dipset
        xCoordinateLog:
          title: X-coordinate log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The X-coordinate log of the dipset
        yCoordinateLog:
          title: Y-coordinate log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The Y-coordinate log of the dipset
        zCoordinateLog:
          title: Z-coordinate log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The Z-coordinate log of the dipset
        qualityLog:
          title: Quality log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The quality log of the dipset
        classificationLog:
          title: Classification log
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The classification log of the dipset
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    geographicPosition:
      title: geographicPosition
      required:
      - crsKey
      - elevationFromMsl
      - latitude
      - longitude
      type: object
      properties:
        crsKey:
          title: CRS Key
          type: string
          description: The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
        elevationFromMsl:
          title: Elevation from MSL
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in 'frameOfReference.units'
            dictionary.
        latitude:
          title: Native Latitude
          type: number
          description: Native or original latitude (unit defined by CRS)
        longitude:
          title: Native Longitude
          type: number
          description: Native or original longitude (unit defined by CRS)
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    geometryItem14:
      title: geometryItem14
      required:
      - geometries
      - type
      type: object
      properties:
        bbox:
          title: Bbox
          type: array
          items:
            type: number
        geometries:
          title: Geometries
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/GeoJsonPoint'
            - $ref: '#/components/schemas/GeoJsonMultiPoint'
            - $ref: '#/components/schemas/GeoJsonLineString'
            - $ref: '#/components/schemas/GeoJsonMultiLineString'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/GeoJsonMultiPolygon'
        type:
          $ref: '#/components/schemas/app__model__model_curated__Type'
      additionalProperties: false
      description: 'geometryItem14

        https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.8'
    historyRecord:
      title: historyRecord
      type: object
      properties:
        date:
          title: Date and Time
          type: string
          description: The UTC date time of the log creation/processing
          format: date-time
        description:
          title: ' Description'
          type: string
          description: The description of the context, which produced the log.
        user:
          title: User
          type: string
          description: The user running the log processing.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    log:
      title: log
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Log Data
          allOf:
          - $ref: '#/components/schemas/logData'
          description: Log data associated with a wellbore
        id:
          title: Log Set ID
          type: string
          description: The unique identifier of the log
        kind:
          title: Log Kind
          type: string
          description: Kind specification
          default: osdu:wks:log:0.0.1
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The log's legal tags
        status:
          title: Entity Status
          type: string
          description: The status of this log
          default: compliant
        version:
          title: Entity Version Number
          type: number
          description: The version number of this log; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    logData:
      title: logData
      type: object
      properties:
        azimuthReference:
          title: Azimuth Reference Code
          type: string
          description: 'Only supplied with azimuth logs: the azimuth reference code
            defining the type of North, default TN for true north.'
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        elevationReference:
          title: Elevation Reference
          allOf:
          - $ref: '#/components/schemas/SimpleElevationReference'
          description: The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where the index, e.g. MD == 0 and TVD == 0.
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        history:
          title: History Records
          type: array
          items:
            $ref: '#/components/schemas/historyRecord'
          description: An array of historyRecords describing the context for the log's
            creation or processing.
        log:
          title: Log Channel
          allOf:
          - $ref: '#/components/schemas/logchannel'
          description: The log containing the log meta data and log-store reference.
        name:
          title: Log Set Name
          type: string
          description: The name of this log set
        operation:
          title: Operation
          type: string
          description: The operation which created this Log
        reference:
          title: Reference Index
          allOf:
          - $ref: '#/components/schemas/logchannel'
          description: The reference index - only populated for logs, which are member
            of a logSet and share the reference index.
        referenceType:
          title: Index Type
          allOf:
          - $ref: '#/components/schemas/ReferenceType'
          description: The reference index type of the log set.
        relationships:
          title: Relationships
          allOf:
          - $ref: '#/components/schemas/logRelationships'
          description: The related entities.
        start:
          title: Start
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The start index value of the log set.
        step:
          title: Step
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The index increment value of the log set. Only populated if
            the log is regularly sampled.
        stop:
          title: Stop
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The stop index value of the log set.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    logRelationships:
      title: logRelationships
      type: object
      properties:
        logSet:
          title: LogSet
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The logSet to which this log belongs. If the log is not part
            of a log set this relationship stays empty.
        timeDepthRelation:
          title: TimeDepthRelation LogSet
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The timeDepthRelation to which this log belongs. If the log
            is not part of a timeDepthRelation this relationship stays empty.
        well:
          title: Well
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The well to which this log belongs. Only required if the wellbore
            is unknown.
        wellbore:
          title: Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this log belongs. This relationship is
            the most important; only the wellbore can provide the unique context for
            the measured depth index.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    logSetData:
      title: logSetData
      type: object
      properties:
        azimuthReference:
          title: Azimuth Reference Code
          type: string
          description: Azimuth reference code defining the type of North. Only used
            for logSets with azimuth data
        channelMnemonics:
          title: Channel Mnemonics
          type: array
          items:
            type: string
          description: A list of channel Mnemonics in this log set.
        channelNames:
          title: Channel Names
          type: array
          items:
            type: string
          description: A list of channel long names in this log set.
        classification:
          title: Log Set Classification
          type: string
          description: The well-known log set classification code.
          default: Externally Processed LogSet
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        elevationReference:
          $ref: '#/components/schemas/SimpleElevationReference'
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        name:
          title: Log Set Name
          type: string
          description: The name of this log set
        operation:
          title: Operation
          type: string
          description: The operation which created this entity
        reference:
          $ref: '#/components/schemas/channel'
        referenceType:
          title: Reference Type
          type: string
          description: The reference index type of the log set.
        relationships:
          $ref: '#/components/schemas/logsetrelationships'
        start:
          $ref: '#/components/schemas/ValueWithUnit'
        step:
          $ref: '#/components/schemas/ValueWithUnit'
        stop:
          $ref: '#/components/schemas/ValueWithUnit'
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    logchannel:
      title: logchannel
      type: object
      properties:
        columnNames:
          title: Column Names
          type: array
          items:
            type: string
          description: A list of names for multi-dimensional logs (dimension>1). The
            length of this array is expected to be equal to 'dimension'. For one-dimensional
            this property stays empty as the columnName is by definition the log name.
        dataType:
          title: Data Type
          allOf:
          - $ref: '#/components/schemas/DataType_2'
          description: The log value type (per log sample). The 'format' property
            may contain further hints about data type presentation.
          default: number
        dimension:
          title: Dimension
          type: integer
          description: The dimension of this log or channel
        family:
          title: Log Family
          type: string
          description: The log family code of this log or channel (optional)
        familyType:
          title: Log Family Type
          type: string
          description: 'The log family type code of this log or channel. Example:
            ''Neutron Porosity'' for ''Thermal Neutron Porosity Sandstone''. (optional)'
        format:
          title: Format Hint
          allOf:
          - $ref: '#/components/schemas/Format_2'
          description: Optional format hint how to treat the log values as strings
            or number of bits per 'dataType'.
          default: float32
        logstoreId:
          title: Logstore ID
          type: number
          description: The unique id of this log or channel in the Logstore. This
            property is not present in the index channel.
        bulkURI:
          title: bulk URI
          type: string
          description: bulkURI either URL or URN.
        longName:
          title: Log Long Name
          type: string
          description: The long name of this log or channel
        mnemonic:
          title: Mnemonic
          type: string
          description: The mnemonic of this log or channel
        name:
          title: Log Name
          type: string
          description: The name of this log or channel.
        properties:
          title: Named Properties
          type: array
          items:
            $ref: '#/components/schemas/namedProperty'
          description: The named properties of this log or channel.
        source:
          title: Source
          type: string
          description: The source of this log or channel as a data reference; Typically
            this refers to the raw LogSet, from which this log WKE is generated.
        unitKey:
          title: Unit
          type: string
          description: The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    logset:
      title: logset
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Log Set Data
          allOf:
          - $ref: '#/components/schemas/logSetData'
          description: Log channel set associated with a wellbore
        id:
          title: Log Set ID
          type: string
          description: The unique identifier of the log set
        kind:
          title: Log Set Kind
          type: string
          description: Kind specification
          default: osdu:wks:logSet:0.0.1
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The log-set's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this log set; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    logsetrelationships:
      title: logsetrelationships
      required:
      - wellbore
      type: object
      properties:
        well:
          title: Well
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The well to which this logSet belongs. Only required if the
            wellbore is unknown.
        wellbore:
          title: Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this logSet belongs.
        wellboreSection:
          title: Wellbore Section
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellboreSection to which this logSet belongs.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    marker:
      title: marker
      required:
      - acl
      - kind
      - legal
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Marker Data
          allOf:
          - $ref: '#/components/schemas/markerData'
          description: Geological marker using a single point-observation, typically
            along a wellbore.
        id:
          title: Marker ID
          type: string
          description: The unique identifier of the marker
        kind:
          title: Marker Kind
          type: string
          description: Marker kind specification
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The marker's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this marker; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    markerData:
      title: markerData
      required:
      - md
      - name
      type: object
      properties:
        age:
          title: Age
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The absolute age at the feature boundary. The unit definition
            is found via the property's unitKey' in 'frameOfReference.units' dictionary.
        boundaryRelation:
          title: Interface Boundary Relation
          type: string
          description: The marker boundary relationship classification
        classification:
          title: Marker Classification
          type: string
          description: The classification of the marker. Could be client-defined via
            a catalog, e.g. common:wke:markerClassification:1.0.0 and common:wke:markerClassificationMember:1.0.0
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        depth:
          title: Marker Depth
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The original marker depth - measured from data.elevationReference
            in data.depthReferenceType. The unit definition is found via the property's
            unitKey' in 'frameOfReference.units' dictionary.
        depthReferenceType:
          title: Depth Reference Code
          type: string
          description: Depth reference code defining the type of depth for the marker.
            Default MD (measured depth). Depth is downwards increasing.
          default: MD
        elevationReference:
          title: Elevation Reference Level
          allOf:
          - $ref: '#/components/schemas/SimpleElevationReference'
          description: The elevation from mean sea level (MSL), where depth, topDepth,
            baseDepth are zero. Values above MSL are positive.
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        interpreter:
          title: Interpreter Name
          type: string
          description: The name of the interpreter who picked this marker.
        locationWGS84:
          title: GeoJSON Marker Location
          allOf:
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: The marker's shape as GeoJSON Point.
        markerFeatureType:
          title: Marker Feature Type
          type: string
          description: The marker's type of feature like 'seismic', 'structural',
            'stratigraphic'
        markerGeoDomain:
          title: Marker GeoScience Domain
          type: string
          description: The marker's GeoScience domain like 'geologic', 'reservoir',
            'petrophysical'
        markerSubFeatureAttribute:
          title: Marker Sub-feature Attribute
          type: string
          description: Further specification of the marker's sub-feature, e.g. in
            sequence stratigraphy.
        markerSubFeatureType:
          title: Marker Sub-feature Type
          type: string
          description: The marker's sub-type of the feature like 'horizon', 'fault',
            'fracture'
        md:
          title: Marker Measured Depth
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The marker measured depth (MD) measured from data.elevationReference.
            The unit definition is found via the property's unitKey' in 'frameOfReference.units'
            dictionary.
        name:
          title: Marker Name
          type: string
          description: The name of the marker
        planeOrientationAzimuth:
          title: Azimuth Angle
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Azimuth angle. The azimuth reference is given by data.azimuthReference.
            The 'planeOrientationAzimuth.unitKey' is to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
        planeOrientationDip:
          title: Dip Angle
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Dip angle. The 'planeOrientationDip.unitKey' is to be looked
            up in the 'frameOfReference.units' dictionary to find the self-contained
            definition.
        relationships:
          title: Relationships
          allOf:
          - $ref: '#/components/schemas/markerrelationships'
          description: The entities related to this marker.
        stratigraphicHierarchyLevel:
          title: Column Level
          type: integer
          description: Optional hierarchical level in the chrono-stratigraphic/litho-stratigraphic
            catalog table, identified by the data.relationships.chartId
        tvd:
          title: Marker Measured Depth
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The marker true vertical depth (TVD) measured from data.elevationReference.
            The unit definition is found via the property's unitKey' in 'frameOfReference.units'
            dictionary.
        wgs84ElevationFromMsl:
          title: Elevation from MSL
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Elevation from Mean Sea Level, downwards negative. The unit
            definition is found via the property's unitKey' in 'frameOfReference.units'
            dictionary.
        wgs84LatitudeLongitude:
          title: WGS 84 Latitude Longitude
          allOf:
          - $ref: '#/components/schemas/core_dl_geopoint'
          description: The marker's position in WGS 84 latitude and longitude.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    markerrelationships:
      title: markerrelationships
      type: object
      properties:
        horizon:
          title: Stratigraphic Horizon
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The related stratigraphic horizon
        stratigraphicTable:
          title: Stratigraphic Table
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The related stratigraphic table, which provides the context
            for the stratigraphic horizon
        study:
          title: Study
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The study, in which this marker was conceived.
        trajectory:
          title: Trajectory
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The trajectory used to create the marker position
        wellbore:
          title: Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore entity, to which this marker belongs.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    namedProperty:
      title: namedProperty
      type: object
      properties:
        associations:
          title: Associations
          type: array
          items:
            type: string
          description: The optional associations contains one or more mnemonics found
            elsewhere in the logSet.
        description:
          title: Property Description
          type: string
          description: The description and role of this property.
        format:
          title: Format (LAS)
          type: string
          description: An optional format declaration for the property values. The
            'A' prefix indicates an array; string values are represented by 'S'; floating
            point values are represented by 'F', optionally followed by a field specification,
            e.g. 'F10.4'; exponential number representations are represented by 'E';
            integer values are represented by 'I'. For further information see the
            LAS specification http://www.cwls.org/las/.
        name:
          title: Property Name
          type: string
          description: The name of this property.
        unitKey:
          title: Property Unit Symbol
          type: string
          description: The unitKey to be looked up in the 'frameOfReference.units'
            dictionary to find the self-contained definition.
        value:
          title: Property Value
          anyOf:
          - type: number
          - type: integer
          - type: string
          description: The value for this property as a string or a number.
        values:
          title: Property Values (Interval)
          type: array
          items:
            type: number
          description: The values, e.g. interval boundaries, for this property.
      additionalProperties: false
      description: namedProperty Model
    odes_storage__models__Legal:
      title: Legal
      type: object
      properties:
        legaltags:
          title: Legaltags
          type: array
          items:
            type: string
        otherRelevantDataCountries:
          title: Otherrelevantdatacountries
          type: array
          items:
            type: string
    projectedPosition:
      title: projectedPosition
      required:
      - crsKey
      - elevationFromMsl
      - x
      - y
      type: object
      properties:
        crsKey:
          title: CRS Key
          type: string
          description: The 'crsKey', which can be looked up in the 'frameOfReference.crs'
            for further details.
        elevationFromMsl:
          title: Elevation from MSL
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in 'frameOfReference.units'
            dictionary.
        x:
          title: X Coordinate
          type: number
          description: X-coordinate value in native or original projected CRS
        y:
          title: Y Coordinate
          type: number
          description: Y-coordinate value in native or original projected CRS
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    trajectory:
      title: trajectory
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Trajectory Data
          allOf:
          - $ref: '#/components/schemas/trajectoryData'
          description: A log set representing a trajectory associated with a wellbore
        id:
          title: Trajectory ID
          type: string
          description: The unique identifier of the trajectory
        kind:
          title: Trajectory Kind
          type: string
          description: Kind specification
          default: osdu:wks:trajectory:0.0.1
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The trajectory's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this trajectory; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    trajectoryData:
      title: trajectoryData
      type: object
      properties:
        azimuthReference:
          title: Azimuth Reference Code
          type: string
          description: Azimuth reference code defining the type of North, default
            TN for true north.
        channelMnemonics:
          title: Channel Mnemonics
          type: array
          items:
            type: string
          description: A list of channel Mnemonics in this trajectory.
        channelNames:
          title: Channel Names
          type: array
          items:
            type: string
          description: A list of channel long names in this trajectory.
        channels:
          title: Channels
          type: array
          items:
            $ref: '#/components/schemas/trajectorychannel'
          description: The channels associated to the index.
        classification:
          title: Trajectory Classification
          type: string
          description: The well-known trajectory classification code.
          default: Raw Deviation Survey
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        elevationReference:
          title: Elevation Reference
          allOf:
          - $ref: '#/components/schemas/SimpleElevationReference'
          description: The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where MD == 0 and TVD == 0
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        index:
          title: Index Channel
          allOf:
          - $ref: '#/components/schemas/trajectorychannel'
          description: The index channel or log.
        indexType:
          title: Index Type
          type: string
          description: The index type of the trajectory.
        locationWGS84:
          title: Trajectory preview
          allOf:
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: The wellbore's trajectory preview shape as GeoJSON LineString.
        name:
          title: Trajectory Name
          type: string
          description: The name of this trajectory
        referencePosition:
          title: Reference Position First Sample
          allOf:
          - $ref: '#/components/schemas/Point3dNonGeoJson'
          description: The 3D reference position for the first sample (surface location
            for main wellbores, tie-in point for side-tracks.
        relationships:
          title: Relationships
          allOf:
          - $ref: '#/components/schemas/trajectoryrelationships'
          description: The related entities.
        start:
          title: Start
          type: number
          description: The start index value of the trajectory.
        step:
          title: Step
          type: number
          description: The index increment value of the trajectory.
        stop:
          title: Stop
          type: number
          description: The stop index value of the trajectory.
        wellHeadWgs84:
          title: WGS 84 Position
          allOf:
          - $ref: '#/components/schemas/wgs84Position'
          description: The wellbore's position in WGS 84 latitude and longitude; vertical
            position is an elevation from mean sea level (MSL), positive above MSL.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    trajectorychannel:
      title: trajectorychannel
      type: object
      properties:
        absentValue:
          title: Absent Value
          type: string
          description: Optional field carrying the absent value as string for this
            channel.
        azimuthKey:
          title: Azimuth Reference Key
          type: string
          description: The azimuth reference of this log or channel. The detailed
            definition is found as persistable reference in the 'frameOfReference.azimuth'
            dictionary.
        crsKey:
          title: CRS Key
          type: string
          description: The CRS key of this log or channel. The detailed definition
            is found as persistable reference in the 'frameOfReference.crs' dictionary.
        dataType:
          title: Data Type
          allOf:
          - $ref: '#/components/schemas/DataType_1'
          description: The log value type (per log sample). The 'format' property
            may contain further hints about data type presentation.
          default: number
        dimension:
          title: Dimension
          type: integer
          description: The dimension of this log or channel
        family:
          title: Log Family
          type: string
          description: The log family code of this log or channel (optional)
        familyType:
          title: Log Family Type
          type: string
          description: 'The log family type code of this log or channel. Example:
            ''Neutron Porosity'' for ''Thermal Neutron Porosity Sandstone''. (optional)'
        format:
          title: Format Hint
          allOf:
          - $ref: '#/components/schemas/Format_1'
          description: Optional format hint how to treat the log values as strings
            or number of bits per 'dataType'.
          default: float32
        logstoreId:
          title: Logstore ID
          type: number
          description: The id of this log or channel in the Logstore. This property
            is not present in the index channel.
        bulkURI:
          title: bulk URI
          type: string
          description: bulkURI either URL or URN.
        longName:
          title: Log Long Name
          type: string
          description: The long name of this log or channel
        mnemonic:
          title: Mnemonic
          type: string
          description: The mnemonic of this log or channel
        name:
          title: Log Name
          type: string
          description: The name of this log or channel.
        properties:
          title: Properties
          type: array
          items:
            type: string
          description: The properties of this log or channel.
        source:
          title: Source
          type: string
          description: The source of this log or channel as a data reference; Typically
            this refers to the raw trajectory, from which this log WKE is generated.
        unitKey:
          title: Unit Key
          type: string
          description: The unit key of this log or channel. The detailed definition
            is found as persistable reference in the 'frameOfReference.units' dictionary.
            Empty units (NoUnit) are not recorded.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    trajectoryrelationships:
      title: trajectoryrelationships
      required:
      - wellbore
      type: object
      properties:
        wellbore:
          title: Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The wellbore to which this trajectory belongs.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    well:
      title: well
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Well Data
          allOf:
          - $ref: '#/components/schemas/wellData'
          description: Well data container
        id:
          title: Well ID
          type: string
          description: The unique identifier of the well
        kind:
          title: Well Kind
          type: string
          description: Well-known well kind specification
          default: osdu:wks:well:0.0.1
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The geological interpretation's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this well; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    wellData:
      title: wellData
      type: object
      properties:
        basinContext:
          title: Basin Context
          allOf:
          - $ref: '#/components/schemas/basinContext'
          description: The basin context details for the well.
        block:
          title: Block
          type: string
          description: The block name, in which the well is located.
        country:
          title: Country
          type: string
          description: The country, in which the well is located. The country name
            follows the convention in ISO 3166-1 'English short country name', see
            https://en.wikipedia.org/wiki/ISO_3166-1
        county:
          title: County
          type: string
          description: The county name, in which the well is located.
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateLicenseIssued:
          title: License Issue Date
          type: string
          description: The UTC date time when the well license was issued.
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        datePluggedAbandoned:
          title: Plugged Abandoned Date
          type: string
          description: The UTC date and time at which the well was plugged and abandoned.
          format: date-time
        dateSpudded:
          title: Spud Date
          type: string
          description: The date and time when activities to drill the borehole begin
            to create a hole in the earth. For a sidetrack, this is the date kickoff
            operations began. The format follows ISO 8601 YYYY-MM-DD extended format
          format: date-time
        directionWell:
          title: Well Direction
          allOf:
          - $ref: '#/components/schemas/DirectionWell'
          description: POSC well direction. The direction of the flow of the fluids
            in a well facility (generally, injected or produced, or some combination).
        district:
          title: District
          type: string
          description: The district name, to which the well belongs.
        elevationReference:
          title: Elevation Reference
          allOf:
          - $ref: '#/components/schemas/SimpleElevationReference'
          description: The well's elevation reference from mean sea level (MSL), positive
            above MSL. This is where MD == 0 and TVD == 0
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        field:
          title: Field
          type: string
          description: The field name, to which the well belongs.
        fluidWell:
          title: Well Fluid
          allOf:
          - $ref: '#/components/schemas/FluidWell'
          description: POSC well fluid. The type of fluid being produced from or injected
            \ninto a well facility.
        groundElevation:
          title: Ground Elevation
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The well's ground elevation, Values above MSL are positive..
        locationWGS84:
          title: Well Shape WGS 84
          allOf:
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: A 2D GeoJSON FeatureCollection defining well location or trajectory
            in WGS 84 CRS.
        name:
          title: Well Name
          type: string
          description: The well name
        operator:
          title: Well Operator
          type: string
          description: The operator company name of the well.
        operatorDivision:
          title: Operator Division
          type: string
          description: The operator division of the well.
        operatorInterest:
          title: Well Operator Interest
          type: number
          description: Interest for operator. Commonly in percent.
        operatorOriginal:
          title: Original Well Operator
          type: string
          description: Original operator of the well. This may be different than the
            current operator.
        plssLocation:
          title: US PLSS Location
          allOf:
          - $ref: '#/components/schemas/PlssLocation'
          description: A location described by the Public Land Survey System (United
            States)
        propertyDictionary:
          title: Property Dictionary
          type: object
          description: A dictionary structure, i.e. key/string value pairs, to carry
            additional well properties.
        region:
          title: Region
          type: string
          description: Geo-political region in which the well is located.
        relationships:
          title: Relationships
          allOf:
          - $ref: '#/components/schemas/wellrelationships'
          description: The related entities.
        state:
          title: State
          type: string
          description: The state name, in which the well is located.
        uwi:
          title: Unique Well Identifier
          type: string
          description: The unique well identifier, aka. API number, US well number
            or UBHI. Codes can have 10, 12 or 14 digits depending on the availability
            of directional sidetrack (2 digits) and event sequence codes (2 digits).
        waterDepth:
          title: Water Depth
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Depth of water (not land rigs).
        wellHeadElevation:
          title: Well Head Elevation
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The well's vertical position is an elevation from mean sea
            level (MSL), positive above MSL.
        wellHeadGeographic:
          title: Well Head Position, Geographic
          allOf:
          - $ref: '#/components/schemas/geographicPosition'
          description: The well's well head position in the native, geographic CRS;
            vertical position is an elevation from mean sea level (MSL), positive
            above MSL.
        wellHeadProjected:
          title: Well Head Position, Projected
          allOf:
          - $ref: '#/components/schemas/projectedPosition'
          description: The well's well head position in the native, projected CRS;
            vertical position is an elevation from mean sea level (MSL), positive
            above MSL.
        wellHeadWgs84:
          title: WGS 84 Position
          allOf:
          - $ref: '#/components/schemas/core_dl_geopoint'
          description: The well's position in WGS 84 latitude and longitude.
        wellLocationType:
          $ref: '#/components/schemas/WellLocationType'
        wellNumberGovernment:
          title: Government Number
          type: string
          description: Government assigned well number.
        wellNumberLicense:
          title: Well License Number
          type: string
          description: License number of the well.
        wellNumberOperator:
          title: Operator Number
          type: string
          description: Operator well number.
        wellPurpose:
          title: Well Purpose
          allOf:
          - $ref: '#/components/schemas/WellPurpose'
          description: POSC well purpose
        wellStatus:
          title: Well Status
          allOf:
          - $ref: '#/components/schemas/WellStatus'
          description: POSC well status.
        wellType:
          title: Well Type
          allOf:
          - $ref: '#/components/schemas/WellType'
          description: Type of well.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    wellbore:
      title: wellbore
      type: object
      properties:
        ancestry:
          title: Ancestry
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links to data, which constitute the inputs.
        meta:
          title: Frame of Reference Meta Data
          type: array
          items:
            $ref: '#/components/schemas/MetaItem'
          description: The meta data section linking the 'unitKey', 'crsKey' to self-contained
            definitions (persistableReference)
        type:
          title: Entity Type
          type: string
          description: The reference entity type as declared in common:metadata:entity:*.
        tags:
          title: Tag Dictionary
          type: object
          additionalProperties:
            $ref: '#/components/schemas/app__model__model_curated__Tags'
          description: A generic dictionary of string keys mapping to string value.
            Only strings are permitted as keys and values.
          example:
            NameOfKey: String value
        createTime:
          title: Resource Object Creation DateTime
          type: string
          description: Timestamp of the time at which initial version of this OSDU
            resource object was created. Set by the System. The value is a combined
            date-time string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:46:20.163Z'
        createUser:
          title: Resource Object Creation User Reference
          type: string
          description: The user reference, which created the first version of this
            resource object. Set by the System.
          example: some-user@some-company-cloud.com
        modifyTime:
          title: Resource Object Version Creation DateTime
          type: string
          description: Timestamp of the time at which this version of the OSDU resource
            object was created. Set by the System. The value is a combined date-time
            string in ISO-8601 given in UTC.
          format: date-time
          example: '2020-12-16T11:52:24.477Z'
        modifyUser:
          title: Resource Object Version Creation User Reference
          type: string
          description: The user reference, which created this version of this resource
            object. Set by the System.
          example: some-user@some-company-cloud.com
        acl:
          title: Access Control List
          allOf:
          - $ref: '#/components/schemas/TagDictionary'
          description: The access control tags associated with this entity.
        data:
          title: Wellbore Data
          allOf:
          - $ref: '#/components/schemas/wellboreData'
          description: Wellbore data container
        id:
          title: Wellbore ID
          type: string
          description: The unique identifier of the wellbore
        kind:
          title: Wellbore Kind
          type: string
          description: Well-known wellbore kind specification
          default: osdu:wks:wellbore:0.0.1
        legal:
          title: Legal Tags
          allOf:
          - $ref: '#/components/schemas/app__model__model_curated__Legal'
          description: The geological interpretation's legal tags
        version:
          title: Entity Version Number
          type: number
          description: The version number of this wellbore; set by the framework.
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    wellboreData:
      title: wellboreData
      type: object
      properties:
        airGap:
          title: Air Gap
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The gap between water surface and offshore drilling platform.
        block:
          title: Block
          type: string
          description: The block name, in which the wellbore is located.
        country:
          title: Country
          type: string
          description: The country, in which the wellbore is located. The country
            name follows the convention in ISO 3166-1 'English short country name',
            see https://en.wikipedia.org/wiki/ISO_3166-1
        county:
          title: County
          type: string
          description: The county name, in which the wellbore is located.
        dateCreated:
          title: Creation Date and Time
          type: string
          description: The UTC date time of the entity creation
          format: date-time
        dateModified:
          title: Last Modification Date and Time
          type: string
          description: The UTC date time of the last entity modification
          format: date-time
        drillingDaysTarget:
          title: Target Drilling Days
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Target days for drilling wellbore.
        elevationReference:
          title: Elevation Reference
          allOf:
          - $ref: '#/components/schemas/SimpleElevationReference'
          description: The wellbore's elevation reference from mean sea level (MSL),
            positive above MSL. This is where MD == 0 and TVD == 0
        externalIds:
          title: Array of External IDs
          type: array
          items:
            type: string
          description: An array of identities (e.g. some kind if URL to be resolved
            in an external data store), which links to external realizations of the
            same entity.
        field:
          title: Field
          type: string
          description: The field name, to which the wellbore belongs.
        formationAtTd:
          title: Formation at TD
          type: string
          description: The name of the formation at the wellbore's total depth.
        formationProjected:
          title: Formation Projected
          type: string
          description: The name of the formation at the wellbore's projected depth.
            This property is questionable as there is not precise documentation available.
        hasAchievedTotalDepth:
          title: Has Total Depth Been Achieved Flag
          type: boolean
          description: True ("true" of "1") indicates that the wellbore has acheieved
            total depth. That is, drilling has completed. False ("false" or "0") indicates
            otherwise. Not given indicates that it is not known whether total depth
            has been reached.
          default: true
        isActive:
          title: Is Active Flag
          type: boolean
          description: True (="1" or "true") indicates that the wellbore is active.
            False (="0" or "false") indicates otherwise. It is the servers responsibility
            to set this value based on its available internal data (e.g., what objects
            are changing).
        kickOffMd:
          title: Kick-off MD
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The kick-off point in measured depth (MD); for the main well
            the kickOffMd is set to 0.
        kickOffTvd:
          title: Kick-off MD
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Kickoff true vertical depth of the wellbore; for the main wellbore
            the kickOffMd is set to 0.
        locationWGS84:
          title: Wellbore Shape WGS 84
          allOf:
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          description: A 2D GeoJSON FeatureCollection defining wellbore location or
            trajectory in WGS 84 CRS.
        name:
          title: Wellbore Name
          type: string
          description: The wellbore name
        operator:
          title: Operator
          type: string
          description: The operator of the wellbore.
        permitDate:
          title: Permit Date
          type: string
          description: The wellbore's permit date.
          format: date
        permitNumber:
          title: Permit Number
          type: string
          description: The wellbore's permit number or permit ID.
        plssLocation:
          title: US PLSS Location
          allOf:
          - $ref: '#/components/schemas/PlssLocation'
          description: A location described by the Public Land Survey System (United
            States)
        propertyDictionary:
          title: Property Dictionary
          type: object
          description: A dictionary structure, i.e. key/string value pairs, to carry
            additional wellbore properties.
        relationships:
          title: Relationships
          allOf:
          - $ref: '#/components/schemas/wellborerelationships'
          description: The related entities.
        shape:
          title: Wellbore Shape
          allOf:
          - $ref: '#/components/schemas/Shape'
          description: POSC wellbore trajectory shape.
        spudDate:
          title: Spud Date
          type: string
          description: The date and time when activities to drill the borehole begin
            to create a hole in the earth. For a sidetrack, this is the date kickoff
            operations began. The format follows ISO 8601 YYYY-MM-DD extended format
          format: date
        state:
          title: State
          type: string
          description: The state name, in which the wellbore is located.
        totalDepthMd:
          title: Total MD
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The measured depth of the borehole. If status is plugged, indicates
            the maximum depth reached before plugging. It is recommended that this
            value be updated about every 10 minutes by an assigned raw data provider
            at a site.
        totalDepthMdDriller:
          title: Total MD Drilled
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The total depth along the wellbore as reported by the drilling
            contractor from 'elevationReference'. The unit definition is found via
            the property's unitKey' in 'frameOfReference.units' dictionary..
        totalDepthMdPlanned:
          title: Total MD Planned
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned measured depth for the wellbore total depth.
        totalDepthMdSubSeaPlanned:
          title: Total MD Sub Sea Planned
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned measured for the wellbore total depth - with respect
            to seabed.
        totalDepthProjectedMd:
          title: Total MD Projected
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The projected total measured depth of the borehole. This property
            is questionable as there is not precise documentation available.
        totalDepthTvd:
          title: Total TVD
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The true vertical depth of the borehole. If status is plugged,
            indicates the maximum depth reached before plugging. It is recommended
            that this value be updated about every 10 minutes by an assigned raw data
            provider at a site.
        totalDepthTvdDriller:
          title: Total TVD Drilled
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The total depth true vertical as reported by the drilling contractor
            from 'elevationReference', Downwards increasing. The unit definition is
            found via the property's unitKey' in 'frameOfReference.units' dictionary.
        totalDepthTvdPlanned:
          title: Total TVD Planned
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned true vertical depth for the wellbore total depth.
        totalDepthTvdSubSeaPlanned:
          title: Total TVD Sub Sea Planned
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Planned true vertical depth for the wellbore total depth -
            with respect to seabed.
        uwi:
          title: Unique Wellbore Identifier
          type: string
          description: The unique wellbore identifier, aka. API number, US well number
            or UBHI. Codes can have 10, 12 or 14 digits depending on the availability
            of directional sidetrack (2 digits) and event sequence codes (2 digits).
        wellHeadElevation:
          title: Well Head Elevation
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: The wellbore's vertical position is an elevation from mean
            sea level (MSL), positive above MSL.
        wellHeadGeographic:
          title: Well Head Position, Geographic
          allOf:
          - $ref: '#/components/schemas/geographicPosition'
          description: The wellbore's well head position in the native, geographic
            CRS; vertical position is an elevation from mean sea level (MSL), positive
            above MSL.
        wellHeadProjected:
          title: Well Head Position, Projected
          allOf:
          - $ref: '#/components/schemas/projectedPosition'
          description: The wellbore's well head position in the native, projected
            CRS; vertical position is an elevation from mean sea level (MSL), positive
            above MSL.
        wellHeadWgs84:
          title: WGS 84 Position
          allOf:
          - $ref: '#/components/schemas/core_dl_geopoint'
          description: The wellbore's position in WGS 84 latitude and longitude.
        wellboreNumberGovernment:
          title: Government Number
          type: string
          description: Government assigned wellbore number.
        wellboreNumberOperator:
          title: Operator Number
          type: string
          description: Operator wellbore number.
        wellborePurpose:
          title: Wellbore Purpose
          allOf:
          - $ref: '#/components/schemas/WellborePurpose'
          description: POSC wellbore purpose
        wellboreStatus:
          title: Wellbore Status
          allOf:
          - $ref: '#/components/schemas/WellboreStatus'
          description: POSC wellbore status.
        wellboreType:
          title: Wellbore Type
          allOf:
          - $ref: '#/components/schemas/WellboreType'
          description: Type of wellbore.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    wellborerelationships:
      title: wellborerelationships
      type: object
      properties:
        definitiveTimeDepthRelation:
          title: Definitive Time-Depth Relation
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The definitive tome-depth relation providing the MD to seismic
            travel-time transformation.
        definitiveTrajectory:
          title: Definitive Trajectory
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The definitive trajectory providing the MD to 3D space transformation.
        tieInWellbore:
          title: Tie-in Wellbore
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The tie-in wellbore if this wellbore is a side-track.
        well:
          title: Well
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The well to which this wellbore belongs.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    wellrelationships:
      title: wellrelationships
      type: object
      properties:
        asset:
          title: Asset
          allOf:
          - $ref: '#/components/schemas/ToOneRelationship'
          description: The asset this well belongs to.
      description: Used for data model allows extra fields which are not declared
        initially in the pydantic model
    wgs84Position:
      title: wgs84Position
      required:
      - elevationFromMsl
      - latitude
      - longitude
      type: object
      properties:
        elevationFromMsl:
          title: Elevation from MSL
          allOf:
          - $ref: '#/components/schemas/ValueWithUnit'
          description: Elevation from Mean Seal Level, downwards negative. The unit
            definition is found via 'elevationFromMsl.unitKey' in 'frameOfReference.units'
            dictionary.
        latitude:
          title: WGS 84 Latitude
          type: number
          description: WGS 84 latitude value in degrees (dega)
        longitude:
          title: WGS 84 Longitude
          type: number
          description: WGS 84 longitude value in degrees (dega)
      additionalProperties: false
      description: The base model forbids fields which are not declared initially
        in the pydantic model
    GetLogDataResponse:
      oneOf:
      - title: SplitFormat
        type: object
        properties:
          data:
            title: Data
            anyOf:
            - type: array
              items:
                anyOf:
                - type: string
                - type: integer
                - type: number
            - type: array
              items:
                type: array
                items:
                  anyOf:
                  - type: string
                  - type: integer
                  - type: number
          columns:
            title: Columns
            type: array
            items:
              anyOf:
              - type: string
              - type: integer
              - type: number
          index:
            title: Index
            type: array
            items:
              anyOf:
              - type: string
              - type: integer
              - type: number
        required:
        - data
      - title: ColumnFormat
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            anyOf:
            - type: string
            - type: integer
            - type: number
    GetTrajectoryDataResponse:
      oneOf:
      - title: SplitFormat
        type: object
        properties:
          data:
            title: Data
            anyOf:
            - type: array
              items:
                anyOf:
                - type: string
                - type: integer
                - type: number
            - type: array
              items:
                type: array
                items:
                  anyOf:
                  - type: string
                  - type: integer
                  - type: number
          columns:
            title: Columns
            type: array
            items:
              anyOf:
              - type: string
              - type: integer
              - type: number
          index:
            title: Index
            type: array
            items:
              anyOf:
              - type: string
              - type: integer
              - type: number
        required:
        - data
      - title: ColumnFormat
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            anyOf:
            - type: string
            - type: integer
            - type: number
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
